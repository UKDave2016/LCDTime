Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"37 i2c.h
[v _I2C_Init `(v ~T0 @X0 0 ef ]
"56 lcd_hd44780_pic16.h
[v _LCDInit `(v ~T0 @X0 0 ef1`uc ]
"36 DS1307.h
[v _DS1307_Init `(i ~T0 @X0 0 ef ]
"62 lcd_hd44780_pic16.h
[v _LCDByte `(v ~T0 @X0 0 ef2`uc`uc ]
"44 DS1307.h
[v _DS1307_readRam `(v ~T0 @X0 0 ef3`*uc`i`i ]
"57 lcd_hd44780_pic16.h
[v _LCDWriteString `(v ~T0 @X0 0 ef1`*Cuc ]
"59
[v _LCDGotoXY `(v ~T0 @X0 0 ef2`uc`uc ]
"58
[v _LCDWriteInt `(v ~T0 @X0 0 ef2`i`c ]
[v F1018 `(v ~T0 @X0 1 tf1`ul ]
"152 C:\Program Files (x86)\Microchip\xc8\v1.37\include\pic.h
[v __delay `JF1018 ~T0 @X0 0 e ]
[p i __delay ]
"34 LCDTime.h
[v _readClock `(v ~T0 @X0 0 ef ]
"35
[v _showClock `(v ~T0 @X0 0 ef ]
"36
[v _readInputs `(v ~T0 @X0 0 ef ]
"38
[v _doMenu `(v ~T0 @X0 0 ef ]
"45
[v _clearPrompt `(v ~T0 @X0 0 ef ]
"40
[v _showTime `(v ~T0 @X0 0 ef ]
"39 DS1307.h
[v _DS1307_SetTime `(v ~T0 @X0 0 ef3`uc`uc`uc ]
"41 LCDTime.h
[v _showDate `(v ~T0 @X0 0 ef ]
"40 DS1307.h
[v _DS1307_SetDate `(v ~T0 @X0 0 ef4`uc`uc`uc`uc ]
"2334 C:\Program Files (x86)\Microchip\xc8\v1.37\include\pic16f877.h
[v _RB4 `Vb ~T0 @X0 0 e@52 ]
"2328
[v _RB1 `Vb ~T0 @X0 0 e@49 ]
"2330
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
"41 DS1307.h
[v _DS1307_GetTime `(v ~T0 @X0 0 ef3`*uc`*uc`*uc ]
"42
[v _DS1307_GetDate `(v ~T0 @X0 0 ef4`*uc`*uc`*uc`*uc ]
"45
[v _DS1307_writeRam `(v ~T0 @X0 0 ef3`*uc`i`i ]
"43 LCDTime.h
[v _showRunningTime `(v ~T0 @X0 0 ef ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f877.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 C:\Program Files (x86)\Microchip\xc8\v1.37\include\pic16f877.h
[; ;pic16f877.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f877.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f877.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f877.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f877.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f877.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f877.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f877.h: 72: typedef union {
[; ;pic16f877.h: 73: struct {
[; ;pic16f877.h: 74: unsigned C :1;
[; ;pic16f877.h: 75: unsigned DC :1;
[; ;pic16f877.h: 76: unsigned Z :1;
[; ;pic16f877.h: 77: unsigned nPD :1;
[; ;pic16f877.h: 78: unsigned nTO :1;
[; ;pic16f877.h: 79: unsigned RP :2;
[; ;pic16f877.h: 80: unsigned IRP :1;
[; ;pic16f877.h: 81: };
[; ;pic16f877.h: 82: struct {
[; ;pic16f877.h: 83: unsigned :5;
[; ;pic16f877.h: 84: unsigned RP0 :1;
[; ;pic16f877.h: 85: unsigned RP1 :1;
[; ;pic16f877.h: 86: };
[; ;pic16f877.h: 87: struct {
[; ;pic16f877.h: 88: unsigned CARRY :1;
[; ;pic16f877.h: 89: };
[; ;pic16f877.h: 90: struct {
[; ;pic16f877.h: 91: unsigned :2;
[; ;pic16f877.h: 92: unsigned ZERO :1;
[; ;pic16f877.h: 93: };
[; ;pic16f877.h: 94: } STATUSbits_t;
[; ;pic16f877.h: 95: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f877.h: 154: extern volatile unsigned char FSR @ 0x004;
"156
[; ;pic16f877.h: 156: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f877.h: 160: extern volatile unsigned char PORTA @ 0x005;
"162
[; ;pic16f877.h: 162: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f877.h: 165: typedef union {
[; ;pic16f877.h: 166: struct {
[; ;pic16f877.h: 167: unsigned RA0 :1;
[; ;pic16f877.h: 168: unsigned RA1 :1;
[; ;pic16f877.h: 169: unsigned RA2 :1;
[; ;pic16f877.h: 170: unsigned RA3 :1;
[; ;pic16f877.h: 171: unsigned RA4 :1;
[; ;pic16f877.h: 172: unsigned RA5 :1;
[; ;pic16f877.h: 173: };
[; ;pic16f877.h: 174: } PORTAbits_t;
[; ;pic16f877.h: 175: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f877.h: 209: extern volatile unsigned char PORTB @ 0x006;
"211
[; ;pic16f877.h: 211: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f877.h: 214: typedef union {
[; ;pic16f877.h: 215: struct {
[; ;pic16f877.h: 216: unsigned RB0 :1;
[; ;pic16f877.h: 217: unsigned RB1 :1;
[; ;pic16f877.h: 218: unsigned RB2 :1;
[; ;pic16f877.h: 219: unsigned RB3 :1;
[; ;pic16f877.h: 220: unsigned RB4 :1;
[; ;pic16f877.h: 221: unsigned RB5 :1;
[; ;pic16f877.h: 222: unsigned RB6 :1;
[; ;pic16f877.h: 223: unsigned RB7 :1;
[; ;pic16f877.h: 224: };
[; ;pic16f877.h: 225: } PORTBbits_t;
[; ;pic16f877.h: 226: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f877.h: 270: extern volatile unsigned char PORTC @ 0x007;
"272
[; ;pic16f877.h: 272: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f877.h: 275: typedef union {
[; ;pic16f877.h: 276: struct {
[; ;pic16f877.h: 277: unsigned RC0 :1;
[; ;pic16f877.h: 278: unsigned RC1 :1;
[; ;pic16f877.h: 279: unsigned RC2 :1;
[; ;pic16f877.h: 280: unsigned RC3 :1;
[; ;pic16f877.h: 281: unsigned RC4 :1;
[; ;pic16f877.h: 282: unsigned RC5 :1;
[; ;pic16f877.h: 283: unsigned RC6 :1;
[; ;pic16f877.h: 284: unsigned RC7 :1;
[; ;pic16f877.h: 285: };
[; ;pic16f877.h: 286: } PORTCbits_t;
[; ;pic16f877.h: 287: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f877.h: 331: extern volatile unsigned char PORTD @ 0x008;
"333
[; ;pic16f877.h: 333: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f877.h: 336: typedef union {
[; ;pic16f877.h: 337: struct {
[; ;pic16f877.h: 338: unsigned RD0 :1;
[; ;pic16f877.h: 339: unsigned RD1 :1;
[; ;pic16f877.h: 340: unsigned RD2 :1;
[; ;pic16f877.h: 341: unsigned RD3 :1;
[; ;pic16f877.h: 342: unsigned RD4 :1;
[; ;pic16f877.h: 343: unsigned RD5 :1;
[; ;pic16f877.h: 344: unsigned RD6 :1;
[; ;pic16f877.h: 345: unsigned RD7 :1;
[; ;pic16f877.h: 346: };
[; ;pic16f877.h: 347: } PORTDbits_t;
[; ;pic16f877.h: 348: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f877.h: 392: extern volatile unsigned char PORTE @ 0x009;
"394
[; ;pic16f877.h: 394: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f877.h: 397: typedef union {
[; ;pic16f877.h: 398: struct {
[; ;pic16f877.h: 399: unsigned RE0 :1;
[; ;pic16f877.h: 400: unsigned RE1 :1;
[; ;pic16f877.h: 401: unsigned RE2 :1;
[; ;pic16f877.h: 402: };
[; ;pic16f877.h: 403: } PORTEbits_t;
[; ;pic16f877.h: 404: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f877.h: 423: extern volatile unsigned char PCLATH @ 0x00A;
"425
[; ;pic16f877.h: 425: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f877.h: 428: typedef union {
[; ;pic16f877.h: 429: struct {
[; ;pic16f877.h: 430: unsigned PCLATH :5;
[; ;pic16f877.h: 431: };
[; ;pic16f877.h: 432: } PCLATHbits_t;
[; ;pic16f877.h: 433: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f877.h: 442: extern volatile unsigned char INTCON @ 0x00B;
"444
[; ;pic16f877.h: 444: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f877.h: 447: typedef union {
[; ;pic16f877.h: 448: struct {
[; ;pic16f877.h: 449: unsigned RBIF :1;
[; ;pic16f877.h: 450: unsigned INTF :1;
[; ;pic16f877.h: 451: unsigned T0IF :1;
[; ;pic16f877.h: 452: unsigned RBIE :1;
[; ;pic16f877.h: 453: unsigned INTE :1;
[; ;pic16f877.h: 454: unsigned T0IE :1;
[; ;pic16f877.h: 455: unsigned PEIE :1;
[; ;pic16f877.h: 456: unsigned GIE :1;
[; ;pic16f877.h: 457: };
[; ;pic16f877.h: 458: struct {
[; ;pic16f877.h: 459: unsigned :2;
[; ;pic16f877.h: 460: unsigned TMR0IF :1;
[; ;pic16f877.h: 461: unsigned :2;
[; ;pic16f877.h: 462: unsigned TMR0IE :1;
[; ;pic16f877.h: 463: };
[; ;pic16f877.h: 464: } INTCONbits_t;
[; ;pic16f877.h: 465: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f877.h: 519: extern volatile unsigned char PIR1 @ 0x00C;
"521
[; ;pic16f877.h: 521: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f877.h: 524: typedef union {
[; ;pic16f877.h: 525: struct {
[; ;pic16f877.h: 526: unsigned TMR1IF :1;
[; ;pic16f877.h: 527: unsigned TMR2IF :1;
[; ;pic16f877.h: 528: unsigned CCP1IF :1;
[; ;pic16f877.h: 529: unsigned SSPIF :1;
[; ;pic16f877.h: 530: unsigned TXIF :1;
[; ;pic16f877.h: 531: unsigned RCIF :1;
[; ;pic16f877.h: 532: unsigned ADIF :1;
[; ;pic16f877.h: 533: unsigned PSPIF :1;
[; ;pic16f877.h: 534: };
[; ;pic16f877.h: 535: } PIR1bits_t;
[; ;pic16f877.h: 536: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f877.h: 580: extern volatile unsigned char PIR2 @ 0x00D;
"582
[; ;pic16f877.h: 582: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f877.h: 585: typedef union {
[; ;pic16f877.h: 586: struct {
[; ;pic16f877.h: 587: unsigned CCP2IF :1;
[; ;pic16f877.h: 588: unsigned :2;
[; ;pic16f877.h: 589: unsigned BCLIF :1;
[; ;pic16f877.h: 590: unsigned EEIF :1;
[; ;pic16f877.h: 591: };
[; ;pic16f877.h: 592: } PIR2bits_t;
[; ;pic16f877.h: 593: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f877.h: 612: extern volatile unsigned short TMR1 @ 0x00E;
"614
[; ;pic16f877.h: 614: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f877.h: 618: extern volatile unsigned char TMR1L @ 0x00E;
"620
[; ;pic16f877.h: 620: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f877.h: 624: extern volatile unsigned char TMR1H @ 0x00F;
"626
[; ;pic16f877.h: 626: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f877.h: 630: extern volatile unsigned char T1CON @ 0x010;
"632
[; ;pic16f877.h: 632: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f877.h: 635: typedef union {
[; ;pic16f877.h: 636: struct {
[; ;pic16f877.h: 637: unsigned TMR1ON :1;
[; ;pic16f877.h: 638: unsigned TMR1CS :1;
[; ;pic16f877.h: 639: unsigned nT1SYNC :1;
[; ;pic16f877.h: 640: unsigned T1OSCEN :1;
[; ;pic16f877.h: 641: unsigned T1CKPS :2;
[; ;pic16f877.h: 642: };
[; ;pic16f877.h: 643: struct {
[; ;pic16f877.h: 644: unsigned :4;
[; ;pic16f877.h: 645: unsigned T1CKPS0 :1;
[; ;pic16f877.h: 646: unsigned T1CKPS1 :1;
[; ;pic16f877.h: 647: };
[; ;pic16f877.h: 648: struct {
[; ;pic16f877.h: 649: unsigned :2;
[; ;pic16f877.h: 650: unsigned T1INSYNC :1;
[; ;pic16f877.h: 651: };
[; ;pic16f877.h: 652: struct {
[; ;pic16f877.h: 653: unsigned :2;
[; ;pic16f877.h: 654: unsigned T1SYNC :1;
[; ;pic16f877.h: 655: };
[; ;pic16f877.h: 656: } T1CONbits_t;
[; ;pic16f877.h: 657: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f877.h: 706: extern volatile unsigned char TMR2 @ 0x011;
"708
[; ;pic16f877.h: 708: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f877.h: 712: extern volatile unsigned char T2CON @ 0x012;
"714
[; ;pic16f877.h: 714: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f877.h: 717: typedef union {
[; ;pic16f877.h: 718: struct {
[; ;pic16f877.h: 719: unsigned T2CKPS :2;
[; ;pic16f877.h: 720: unsigned TMR2ON :1;
[; ;pic16f877.h: 721: unsigned TOUTPS :4;
[; ;pic16f877.h: 722: };
[; ;pic16f877.h: 723: struct {
[; ;pic16f877.h: 724: unsigned T2CKPS0 :1;
[; ;pic16f877.h: 725: unsigned T2CKPS1 :1;
[; ;pic16f877.h: 726: unsigned :1;
[; ;pic16f877.h: 727: unsigned TOUTPS0 :1;
[; ;pic16f877.h: 728: unsigned TOUTPS1 :1;
[; ;pic16f877.h: 729: unsigned TOUTPS2 :1;
[; ;pic16f877.h: 730: unsigned TOUTPS3 :1;
[; ;pic16f877.h: 731: };
[; ;pic16f877.h: 732: } T2CONbits_t;
[; ;pic16f877.h: 733: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f877.h: 782: extern volatile unsigned char SSPBUF @ 0x013;
"784
[; ;pic16f877.h: 784: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f877.h: 788: extern volatile unsigned char SSPCON @ 0x014;
"790
[; ;pic16f877.h: 790: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f877.h: 793: typedef union {
[; ;pic16f877.h: 794: struct {
[; ;pic16f877.h: 795: unsigned SSPM :4;
[; ;pic16f877.h: 796: unsigned CKP :1;
[; ;pic16f877.h: 797: unsigned SSPEN :1;
[; ;pic16f877.h: 798: unsigned SSPOV :1;
[; ;pic16f877.h: 799: unsigned WCOL :1;
[; ;pic16f877.h: 800: };
[; ;pic16f877.h: 801: struct {
[; ;pic16f877.h: 802: unsigned SSPM0 :1;
[; ;pic16f877.h: 803: unsigned SSPM1 :1;
[; ;pic16f877.h: 804: unsigned SSPM2 :1;
[; ;pic16f877.h: 805: unsigned SSPM3 :1;
[; ;pic16f877.h: 806: };
[; ;pic16f877.h: 807: } SSPCONbits_t;
[; ;pic16f877.h: 808: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f877.h: 857: extern volatile unsigned short CCPR1 @ 0x015;
"859
[; ;pic16f877.h: 859: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f877.h: 863: extern volatile unsigned char CCPR1L @ 0x015;
"865
[; ;pic16f877.h: 865: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f877.h: 869: extern volatile unsigned char CCPR1H @ 0x016;
"871
[; ;pic16f877.h: 871: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f877.h: 875: extern volatile unsigned char CCP1CON @ 0x017;
"877
[; ;pic16f877.h: 877: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f877.h: 880: typedef union {
[; ;pic16f877.h: 881: struct {
[; ;pic16f877.h: 882: unsigned CCP1M :4;
[; ;pic16f877.h: 883: unsigned CCP1Y :1;
[; ;pic16f877.h: 884: unsigned CCP1X :1;
[; ;pic16f877.h: 885: };
[; ;pic16f877.h: 886: struct {
[; ;pic16f877.h: 887: unsigned CCP1M0 :1;
[; ;pic16f877.h: 888: unsigned CCP1M1 :1;
[; ;pic16f877.h: 889: unsigned CCP1M2 :1;
[; ;pic16f877.h: 890: unsigned CCP1M3 :1;
[; ;pic16f877.h: 891: };
[; ;pic16f877.h: 892: } CCP1CONbits_t;
[; ;pic16f877.h: 893: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f877.h: 932: extern volatile unsigned char RCSTA @ 0x018;
"934
[; ;pic16f877.h: 934: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f877.h: 937: typedef union {
[; ;pic16f877.h: 938: struct {
[; ;pic16f877.h: 939: unsigned RX9D :1;
[; ;pic16f877.h: 940: unsigned OERR :1;
[; ;pic16f877.h: 941: unsigned FERR :1;
[; ;pic16f877.h: 942: unsigned ADDEN :1;
[; ;pic16f877.h: 943: unsigned CREN :1;
[; ;pic16f877.h: 944: unsigned SREN :1;
[; ;pic16f877.h: 945: unsigned RX9 :1;
[; ;pic16f877.h: 946: unsigned SPEN :1;
[; ;pic16f877.h: 947: };
[; ;pic16f877.h: 948: struct {
[; ;pic16f877.h: 949: unsigned RCD8 :1;
[; ;pic16f877.h: 950: unsigned :5;
[; ;pic16f877.h: 951: unsigned RC9 :1;
[; ;pic16f877.h: 952: };
[; ;pic16f877.h: 953: struct {
[; ;pic16f877.h: 954: unsigned :6;
[; ;pic16f877.h: 955: unsigned nRC8 :1;
[; ;pic16f877.h: 956: };
[; ;pic16f877.h: 957: struct {
[; ;pic16f877.h: 958: unsigned :6;
[; ;pic16f877.h: 959: unsigned RC8_9 :1;
[; ;pic16f877.h: 960: };
[; ;pic16f877.h: 961: } RCSTAbits_t;
[; ;pic16f877.h: 962: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f877.h: 1026: extern volatile unsigned char TXREG @ 0x019;
"1028
[; ;pic16f877.h: 1028: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f877.h: 1032: extern volatile unsigned char RCREG @ 0x01A;
"1034
[; ;pic16f877.h: 1034: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f877.h: 1038: extern volatile unsigned short CCPR2 @ 0x01B;
"1040
[; ;pic16f877.h: 1040: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f877.h: 1044: extern volatile unsigned char CCPR2L @ 0x01B;
"1046
[; ;pic16f877.h: 1046: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f877.h: 1050: extern volatile unsigned char CCPR2H @ 0x01C;
"1052
[; ;pic16f877.h: 1052: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f877.h: 1056: extern volatile unsigned char CCP2CON @ 0x01D;
"1058
[; ;pic16f877.h: 1058: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f877.h: 1061: typedef union {
[; ;pic16f877.h: 1062: struct {
[; ;pic16f877.h: 1063: unsigned CCP2M :4;
[; ;pic16f877.h: 1064: unsigned CCP2Y :1;
[; ;pic16f877.h: 1065: unsigned CCP2X :1;
[; ;pic16f877.h: 1066: };
[; ;pic16f877.h: 1067: struct {
[; ;pic16f877.h: 1068: unsigned CCP2M0 :1;
[; ;pic16f877.h: 1069: unsigned CCP2M1 :1;
[; ;pic16f877.h: 1070: unsigned CCP2M2 :1;
[; ;pic16f877.h: 1071: unsigned CCP2M3 :1;
[; ;pic16f877.h: 1072: };
[; ;pic16f877.h: 1073: } CCP2CONbits_t;
[; ;pic16f877.h: 1074: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f877.h: 1113: extern volatile unsigned char ADRESH @ 0x01E;
"1115
[; ;pic16f877.h: 1115: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f877.h: 1119: extern volatile unsigned char ADCON0 @ 0x01F;
"1121
[; ;pic16f877.h: 1121: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f877.h: 1124: typedef union {
[; ;pic16f877.h: 1125: struct {
[; ;pic16f877.h: 1126: unsigned ADON :1;
[; ;pic16f877.h: 1127: unsigned :1;
[; ;pic16f877.h: 1128: unsigned GO_nDONE :1;
[; ;pic16f877.h: 1129: unsigned CHS :3;
[; ;pic16f877.h: 1130: unsigned ADCS :2;
[; ;pic16f877.h: 1131: };
[; ;pic16f877.h: 1132: struct {
[; ;pic16f877.h: 1133: unsigned :2;
[; ;pic16f877.h: 1134: unsigned GO :1;
[; ;pic16f877.h: 1135: unsigned CHS0 :1;
[; ;pic16f877.h: 1136: unsigned CHS1 :1;
[; ;pic16f877.h: 1137: unsigned CHS2 :1;
[; ;pic16f877.h: 1138: unsigned ADCS0 :1;
[; ;pic16f877.h: 1139: unsigned ADCS1 :1;
[; ;pic16f877.h: 1140: };
[; ;pic16f877.h: 1141: struct {
[; ;pic16f877.h: 1142: unsigned :2;
[; ;pic16f877.h: 1143: unsigned nDONE :1;
[; ;pic16f877.h: 1144: };
[; ;pic16f877.h: 1145: struct {
[; ;pic16f877.h: 1146: unsigned :2;
[; ;pic16f877.h: 1147: unsigned GO_DONE :1;
[; ;pic16f877.h: 1148: };
[; ;pic16f877.h: 1149: } ADCON0bits_t;
[; ;pic16f877.h: 1150: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f877.h: 1214: extern volatile unsigned char OPTION_REG @ 0x081;
"1216
[; ;pic16f877.h: 1216: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f877.h: 1219: typedef union {
[; ;pic16f877.h: 1220: struct {
[; ;pic16f877.h: 1221: unsigned PS :3;
[; ;pic16f877.h: 1222: unsigned PSA :1;
[; ;pic16f877.h: 1223: unsigned T0SE :1;
[; ;pic16f877.h: 1224: unsigned T0CS :1;
[; ;pic16f877.h: 1225: unsigned INTEDG :1;
[; ;pic16f877.h: 1226: unsigned nRBPU :1;
[; ;pic16f877.h: 1227: };
[; ;pic16f877.h: 1228: struct {
[; ;pic16f877.h: 1229: unsigned PS0 :1;
[; ;pic16f877.h: 1230: unsigned PS1 :1;
[; ;pic16f877.h: 1231: unsigned PS2 :1;
[; ;pic16f877.h: 1232: };
[; ;pic16f877.h: 1233: } OPTION_REGbits_t;
[; ;pic16f877.h: 1234: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f877.h: 1283: extern volatile unsigned char TRISA @ 0x085;
"1285
[; ;pic16f877.h: 1285: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f877.h: 1288: typedef union {
[; ;pic16f877.h: 1289: struct {
[; ;pic16f877.h: 1290: unsigned TRISA0 :1;
[; ;pic16f877.h: 1291: unsigned TRISA1 :1;
[; ;pic16f877.h: 1292: unsigned TRISA2 :1;
[; ;pic16f877.h: 1293: unsigned TRISA3 :1;
[; ;pic16f877.h: 1294: unsigned TRISA4 :1;
[; ;pic16f877.h: 1295: unsigned TRISA5 :1;
[; ;pic16f877.h: 1296: };
[; ;pic16f877.h: 1297: } TRISAbits_t;
[; ;pic16f877.h: 1298: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f877.h: 1332: extern volatile unsigned char TRISB @ 0x086;
"1334
[; ;pic16f877.h: 1334: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f877.h: 1337: typedef union {
[; ;pic16f877.h: 1338: struct {
[; ;pic16f877.h: 1339: unsigned TRISB0 :1;
[; ;pic16f877.h: 1340: unsigned TRISB1 :1;
[; ;pic16f877.h: 1341: unsigned TRISB2 :1;
[; ;pic16f877.h: 1342: unsigned TRISB3 :1;
[; ;pic16f877.h: 1343: unsigned TRISB4 :1;
[; ;pic16f877.h: 1344: unsigned TRISB5 :1;
[; ;pic16f877.h: 1345: unsigned TRISB6 :1;
[; ;pic16f877.h: 1346: unsigned TRISB7 :1;
[; ;pic16f877.h: 1347: };
[; ;pic16f877.h: 1348: } TRISBbits_t;
[; ;pic16f877.h: 1349: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f877.h: 1393: extern volatile unsigned char TRISC @ 0x087;
"1395
[; ;pic16f877.h: 1395: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f877.h: 1398: typedef union {
[; ;pic16f877.h: 1399: struct {
[; ;pic16f877.h: 1400: unsigned TRISC0 :1;
[; ;pic16f877.h: 1401: unsigned TRISC1 :1;
[; ;pic16f877.h: 1402: unsigned TRISC2 :1;
[; ;pic16f877.h: 1403: unsigned TRISC3 :1;
[; ;pic16f877.h: 1404: unsigned TRISC4 :1;
[; ;pic16f877.h: 1405: unsigned TRISC5 :1;
[; ;pic16f877.h: 1406: unsigned TRISC6 :1;
[; ;pic16f877.h: 1407: unsigned TRISC7 :1;
[; ;pic16f877.h: 1408: };
[; ;pic16f877.h: 1409: } TRISCbits_t;
[; ;pic16f877.h: 1410: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f877.h: 1454: extern volatile unsigned char TRISD @ 0x088;
"1456
[; ;pic16f877.h: 1456: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f877.h: 1459: typedef union {
[; ;pic16f877.h: 1460: struct {
[; ;pic16f877.h: 1461: unsigned TRISD0 :1;
[; ;pic16f877.h: 1462: unsigned TRISD1 :1;
[; ;pic16f877.h: 1463: unsigned TRISD2 :1;
[; ;pic16f877.h: 1464: unsigned TRISD3 :1;
[; ;pic16f877.h: 1465: unsigned TRISD4 :1;
[; ;pic16f877.h: 1466: unsigned TRISD5 :1;
[; ;pic16f877.h: 1467: unsigned TRISD6 :1;
[; ;pic16f877.h: 1468: unsigned TRISD7 :1;
[; ;pic16f877.h: 1469: };
[; ;pic16f877.h: 1470: } TRISDbits_t;
[; ;pic16f877.h: 1471: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f877.h: 1515: extern volatile unsigned char TRISE @ 0x089;
"1517
[; ;pic16f877.h: 1517: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f877.h: 1520: typedef union {
[; ;pic16f877.h: 1521: struct {
[; ;pic16f877.h: 1522: unsigned TRISE0 :1;
[; ;pic16f877.h: 1523: unsigned TRISE1 :1;
[; ;pic16f877.h: 1524: unsigned TRISE2 :1;
[; ;pic16f877.h: 1525: unsigned :1;
[; ;pic16f877.h: 1526: unsigned PSPMODE :1;
[; ;pic16f877.h: 1527: unsigned IBOV :1;
[; ;pic16f877.h: 1528: unsigned OBF :1;
[; ;pic16f877.h: 1529: unsigned IBF :1;
[; ;pic16f877.h: 1530: };
[; ;pic16f877.h: 1531: } TRISEbits_t;
[; ;pic16f877.h: 1532: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f877.h: 1571: extern volatile unsigned char PIE1 @ 0x08C;
"1573
[; ;pic16f877.h: 1573: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f877.h: 1576: typedef union {
[; ;pic16f877.h: 1577: struct {
[; ;pic16f877.h: 1578: unsigned TMR1IE :1;
[; ;pic16f877.h: 1579: unsigned TMR2IE :1;
[; ;pic16f877.h: 1580: unsigned CCP1IE :1;
[; ;pic16f877.h: 1581: unsigned SSPIE :1;
[; ;pic16f877.h: 1582: unsigned TXIE :1;
[; ;pic16f877.h: 1583: unsigned RCIE :1;
[; ;pic16f877.h: 1584: unsigned ADIE :1;
[; ;pic16f877.h: 1585: unsigned PSPIE :1;
[; ;pic16f877.h: 1586: };
[; ;pic16f877.h: 1587: } PIE1bits_t;
[; ;pic16f877.h: 1588: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f877.h: 1632: extern volatile unsigned char PIE2 @ 0x08D;
"1634
[; ;pic16f877.h: 1634: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f877.h: 1637: typedef union {
[; ;pic16f877.h: 1638: struct {
[; ;pic16f877.h: 1639: unsigned CCP2IE :1;
[; ;pic16f877.h: 1640: unsigned :2;
[; ;pic16f877.h: 1641: unsigned BCLIE :1;
[; ;pic16f877.h: 1642: unsigned EEIE :1;
[; ;pic16f877.h: 1643: };
[; ;pic16f877.h: 1644: } PIE2bits_t;
[; ;pic16f877.h: 1645: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f877.h: 1664: extern volatile unsigned char PCON @ 0x08E;
"1666
[; ;pic16f877.h: 1666: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f877.h: 1669: typedef union {
[; ;pic16f877.h: 1670: struct {
[; ;pic16f877.h: 1671: unsigned nBOR :1;
[; ;pic16f877.h: 1672: unsigned nPOR :1;
[; ;pic16f877.h: 1673: };
[; ;pic16f877.h: 1674: struct {
[; ;pic16f877.h: 1675: unsigned nBO :1;
[; ;pic16f877.h: 1676: };
[; ;pic16f877.h: 1677: } PCONbits_t;
[; ;pic16f877.h: 1678: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f877.h: 1697: extern volatile unsigned char SSPCON2 @ 0x091;
"1699
[; ;pic16f877.h: 1699: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f877.h: 1702: typedef union {
[; ;pic16f877.h: 1703: struct {
[; ;pic16f877.h: 1704: unsigned SEN :1;
[; ;pic16f877.h: 1705: unsigned RSEN :1;
[; ;pic16f877.h: 1706: unsigned PEN :1;
[; ;pic16f877.h: 1707: unsigned RCEN :1;
[; ;pic16f877.h: 1708: unsigned ACKEN :1;
[; ;pic16f877.h: 1709: unsigned ACKDT :1;
[; ;pic16f877.h: 1710: unsigned ACKSTAT :1;
[; ;pic16f877.h: 1711: unsigned GCEN :1;
[; ;pic16f877.h: 1712: };
[; ;pic16f877.h: 1713: } SSPCON2bits_t;
[; ;pic16f877.h: 1714: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f877.h: 1758: extern volatile unsigned char PR2 @ 0x092;
"1760
[; ;pic16f877.h: 1760: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f877.h: 1764: extern volatile unsigned char SSPADD @ 0x093;
"1766
[; ;pic16f877.h: 1766: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f877.h: 1770: extern volatile unsigned char SSPSTAT @ 0x094;
"1772
[; ;pic16f877.h: 1772: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f877.h: 1775: typedef union {
[; ;pic16f877.h: 1776: struct {
[; ;pic16f877.h: 1777: unsigned BF :1;
[; ;pic16f877.h: 1778: unsigned UA :1;
[; ;pic16f877.h: 1779: unsigned R_nW :1;
[; ;pic16f877.h: 1780: unsigned S :1;
[; ;pic16f877.h: 1781: unsigned P :1;
[; ;pic16f877.h: 1782: unsigned D_nA :1;
[; ;pic16f877.h: 1783: unsigned CKE :1;
[; ;pic16f877.h: 1784: unsigned SMP :1;
[; ;pic16f877.h: 1785: };
[; ;pic16f877.h: 1786: struct {
[; ;pic16f877.h: 1787: unsigned :2;
[; ;pic16f877.h: 1788: unsigned R :1;
[; ;pic16f877.h: 1789: unsigned :2;
[; ;pic16f877.h: 1790: unsigned D :1;
[; ;pic16f877.h: 1791: };
[; ;pic16f877.h: 1792: struct {
[; ;pic16f877.h: 1793: unsigned :2;
[; ;pic16f877.h: 1794: unsigned I2C_READ :1;
[; ;pic16f877.h: 1795: unsigned I2C_START :1;
[; ;pic16f877.h: 1796: unsigned I2C_STOP :1;
[; ;pic16f877.h: 1797: unsigned I2C_DATA :1;
[; ;pic16f877.h: 1798: };
[; ;pic16f877.h: 1799: struct {
[; ;pic16f877.h: 1800: unsigned :2;
[; ;pic16f877.h: 1801: unsigned nW :1;
[; ;pic16f877.h: 1802: unsigned :2;
[; ;pic16f877.h: 1803: unsigned nA :1;
[; ;pic16f877.h: 1804: };
[; ;pic16f877.h: 1805: struct {
[; ;pic16f877.h: 1806: unsigned :2;
[; ;pic16f877.h: 1807: unsigned nWRITE :1;
[; ;pic16f877.h: 1808: unsigned :2;
[; ;pic16f877.h: 1809: unsigned nADDRESS :1;
[; ;pic16f877.h: 1810: };
[; ;pic16f877.h: 1811: struct {
[; ;pic16f877.h: 1812: unsigned :2;
[; ;pic16f877.h: 1813: unsigned R_W :1;
[; ;pic16f877.h: 1814: unsigned :2;
[; ;pic16f877.h: 1815: unsigned D_A :1;
[; ;pic16f877.h: 1816: };
[; ;pic16f877.h: 1817: struct {
[; ;pic16f877.h: 1818: unsigned :2;
[; ;pic16f877.h: 1819: unsigned READ_WRITE :1;
[; ;pic16f877.h: 1820: unsigned :2;
[; ;pic16f877.h: 1821: unsigned DATA_ADDRESS :1;
[; ;pic16f877.h: 1822: };
[; ;pic16f877.h: 1823: } SSPSTATbits_t;
[; ;pic16f877.h: 1824: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f877.h: 1938: extern volatile unsigned char TXSTA @ 0x098;
"1940
[; ;pic16f877.h: 1940: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f877.h: 1943: typedef union {
[; ;pic16f877.h: 1944: struct {
[; ;pic16f877.h: 1945: unsigned TX9D :1;
[; ;pic16f877.h: 1946: unsigned TRMT :1;
[; ;pic16f877.h: 1947: unsigned BRGH :1;
[; ;pic16f877.h: 1948: unsigned :1;
[; ;pic16f877.h: 1949: unsigned SYNC :1;
[; ;pic16f877.h: 1950: unsigned TXEN :1;
[; ;pic16f877.h: 1951: unsigned TX9 :1;
[; ;pic16f877.h: 1952: unsigned CSRC :1;
[; ;pic16f877.h: 1953: };
[; ;pic16f877.h: 1954: struct {
[; ;pic16f877.h: 1955: unsigned TXD8 :1;
[; ;pic16f877.h: 1956: unsigned :5;
[; ;pic16f877.h: 1957: unsigned nTX8 :1;
[; ;pic16f877.h: 1958: };
[; ;pic16f877.h: 1959: struct {
[; ;pic16f877.h: 1960: unsigned :6;
[; ;pic16f877.h: 1961: unsigned TX8_9 :1;
[; ;pic16f877.h: 1962: };
[; ;pic16f877.h: 1963: } TXSTAbits_t;
[; ;pic16f877.h: 1964: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f877.h: 2018: extern volatile unsigned char SPBRG @ 0x099;
"2020
[; ;pic16f877.h: 2020: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f877.h: 2024: extern volatile unsigned char ADRESL @ 0x09E;
"2026
[; ;pic16f877.h: 2026: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f877.h: 2030: extern volatile unsigned char ADCON1 @ 0x09F;
"2032
[; ;pic16f877.h: 2032: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f877.h: 2035: typedef union {
[; ;pic16f877.h: 2036: struct {
[; ;pic16f877.h: 2037: unsigned PCFG :4;
[; ;pic16f877.h: 2038: unsigned :3;
[; ;pic16f877.h: 2039: unsigned ADFM :1;
[; ;pic16f877.h: 2040: };
[; ;pic16f877.h: 2041: struct {
[; ;pic16f877.h: 2042: unsigned PCFG0 :1;
[; ;pic16f877.h: 2043: unsigned PCFG1 :1;
[; ;pic16f877.h: 2044: unsigned PCFG2 :1;
[; ;pic16f877.h: 2045: unsigned PCFG3 :1;
[; ;pic16f877.h: 2046: };
[; ;pic16f877.h: 2047: } ADCON1bits_t;
[; ;pic16f877.h: 2048: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f877.h: 2082: extern volatile unsigned char EEDATA @ 0x10C;
"2084
[; ;pic16f877.h: 2084: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f877.h: 2088: extern volatile unsigned char EEADR @ 0x10D;
"2090
[; ;pic16f877.h: 2090: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f877.h: 2094: extern volatile unsigned char EEDATH @ 0x10E;
"2096
[; ;pic16f877.h: 2096: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f877.h: 2100: extern volatile unsigned char EEADRH @ 0x10F;
"2102
[; ;pic16f877.h: 2102: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f877.h: 2106: extern volatile unsigned char EECON1 @ 0x18C;
"2108
[; ;pic16f877.h: 2108: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f877.h: 2111: typedef union {
[; ;pic16f877.h: 2112: struct {
[; ;pic16f877.h: 2113: unsigned RD :1;
[; ;pic16f877.h: 2114: unsigned WR :1;
[; ;pic16f877.h: 2115: unsigned WREN :1;
[; ;pic16f877.h: 2116: unsigned WRERR :1;
[; ;pic16f877.h: 2117: unsigned :3;
[; ;pic16f877.h: 2118: unsigned EEPGD :1;
[; ;pic16f877.h: 2119: };
[; ;pic16f877.h: 2120: } EECON1bits_t;
[; ;pic16f877.h: 2121: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f877.h: 2150: extern volatile unsigned char EECON2 @ 0x18D;
"2152
[; ;pic16f877.h: 2152: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f877.h: 2162: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f877.h: 2164: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f877.h: 2166: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f877.h: 2168: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f877.h: 2170: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f877.h: 2172: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f877.h: 2174: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f877.h: 2176: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f877.h: 2178: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f877.h: 2180: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f877.h: 2182: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f877.h: 2184: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f877.h: 2186: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f877.h: 2188: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f877.h: 2190: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f877.h: 2192: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f877.h: 2194: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f877.h: 2196: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f877.h: 2198: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f877.h: 2200: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f877.h: 2202: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f877.h: 2204: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f877.h: 2206: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f877.h: 2208: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f877.h: 2210: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f877.h: 2212: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f877.h: 2214: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f877.h: 2216: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f877.h: 2218: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f877.h: 2220: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f877.h: 2222: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f877.h: 2224: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f877.h: 2226: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f877.h: 2228: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f877.h: 2230: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f877.h: 2232: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f877.h: 2234: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f877.h: 2236: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f877.h: 2238: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877.h: 2240: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f877.h: 2242: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877.h: 2244: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877.h: 2246: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f877.h: 2248: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f877.h: 2250: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f877.h: 2252: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f877.h: 2254: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f877.h: 2256: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f877.h: 2258: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877.h: 2260: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877.h: 2262: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877.h: 2264: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877.h: 2266: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877.h: 2268: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f877.h: 2270: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f877.h: 2272: extern volatile __bit IBF @ (((unsigned) &TRISE)*8) + 7;
[; ;pic16f877.h: 2274: extern volatile __bit IBOV @ (((unsigned) &TRISE)*8) + 5;
[; ;pic16f877.h: 2276: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f877.h: 2278: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f877.h: 2280: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f877.h: 2282: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f877.h: 2284: extern volatile __bit OBF @ (((unsigned) &TRISE)*8) + 6;
[; ;pic16f877.h: 2286: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f877.h: 2288: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f877.h: 2290: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f877.h: 2292: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f877.h: 2294: extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f877.h: 2296: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f877.h: 2298: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f877.h: 2300: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f877.h: 2302: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f877.h: 2304: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f877.h: 2306: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f877.h: 2308: extern volatile __bit PSPIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f877.h: 2310: extern volatile __bit PSPIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f877.h: 2312: extern volatile __bit PSPMODE @ (((unsigned) &TRISE)*8) + 4;
[; ;pic16f877.h: 2314: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f877.h: 2316: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f877.h: 2318: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f877.h: 2320: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f877.h: 2322: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f877.h: 2324: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f877.h: 2326: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f877.h: 2328: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f877.h: 2330: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f877.h: 2332: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f877.h: 2334: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f877.h: 2336: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f877.h: 2338: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f877.h: 2340: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f877.h: 2342: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f877.h: 2344: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f877.h: 2346: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f877.h: 2348: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f877.h: 2350: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f877.h: 2352: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f877.h: 2354: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f877.h: 2356: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f877.h: 2358: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f877.h: 2360: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f877.h: 2362: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877.h: 2364: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877.h: 2366: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877.h: 2368: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f877.h: 2370: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f877.h: 2372: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f877.h: 2374: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f877.h: 2376: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f877.h: 2378: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f877.h: 2380: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f877.h: 2382: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f877.h: 2384: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f877.h: 2386: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f877.h: 2388: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f877.h: 2390: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f877.h: 2392: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f877.h: 2394: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f877.h: 2396: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f877.h: 2398: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877.h: 2400: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f877.h: 2402: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f877.h: 2404: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f877.h: 2406: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877.h: 2408: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877.h: 2410: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877.h: 2412: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877.h: 2414: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f877.h: 2416: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f877.h: 2418: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f877.h: 2420: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f877.h: 2422: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f877.h: 2424: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f877.h: 2426: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f877.h: 2428: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f877.h: 2430: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f877.h: 2432: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f877.h: 2434: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f877.h: 2436: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f877.h: 2438: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f877.h: 2440: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f877.h: 2442: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877.h: 2444: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877.h: 2446: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f877.h: 2448: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f877.h: 2450: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f877.h: 2452: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877.h: 2454: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f877.h: 2456: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877.h: 2458: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f877.h: 2460: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f877.h: 2462: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877.h: 2464: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877.h: 2466: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f877.h: 2468: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f877.h: 2470: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f877.h: 2472: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f877.h: 2474: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f877.h: 2476: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f877.h: 2478: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f877.h: 2480: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f877.h: 2482: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f877.h: 2484: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f877.h: 2486: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f877.h: 2488: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f877.h: 2490: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f877.h: 2492: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f877.h: 2494: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f877.h: 2496: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f877.h: 2498: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f877.h: 2500: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f877.h: 2502: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f877.h: 2504: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f877.h: 2506: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f877.h: 2508: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f877.h: 2510: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f877.h: 2512: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f877.h: 2514: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f877.h: 2516: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f877.h: 2518: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f877.h: 2520: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f877.h: 2522: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f877.h: 2524: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f877.h: 2526: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f877.h: 2528: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f877.h: 2530: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f877.h: 2532: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f877.h: 2534: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f877.h: 2536: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f877.h: 2538: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f877.h: 2540: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f877.h: 2542: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f877.h: 2544: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f877.h: 2546: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f877.h: 2548: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f877.h: 2550: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f877.h: 2552: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f877.h: 2554: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f877.h: 2556: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877.h: 2558: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877.h: 2560: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877.h: 2562: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877.h: 2564: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f877.h: 2566: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f877.h: 2568: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f877.h: 2570: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f877.h: 2572: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f877.h: 2574: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f877.h: 2576: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f877.h: 2578: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f877.h: 2580: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f877.h: 2582: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877.h: 2584: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877.h: 2586: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877.h: 2588: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877.h: 2590: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877.h: 2592: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f877.h: 2594: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f877.h: 2596: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f877.h: 2598: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877.h: 2600: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877.h: 2602: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f877.h: 2604: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877.h: 2606: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877.h: 2608: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 77: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 152: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 186: extern unsigned char __resetbits;
[; ;pic.h: 187: extern __bit __powerdown;
[; ;pic.h: 188: extern __bit __timeout;
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;LCDTime.h: 34: void readClock() ;
[; ;LCDTime.h: 35: void showClock() ;
[; ;LCDTime.h: 36: void readInputs();
[; ;LCDTime.h: 38: void doMenu() ;
[; ;LCDTime.h: 40: void showTime() ;
[; ;LCDTime.h: 41: void showDate() ;
[; ;LCDTime.h: 43: void showRunningTime();
[; ;LCDTime.h: 45: void clearPrompt() ;
[; ;lcd_hd44780_pic16.h: 56: void LCDInit(uint8_t style);
[; ;lcd_hd44780_pic16.h: 57: void LCDWriteString(const char *msg);
[; ;lcd_hd44780_pic16.h: 58: void LCDWriteInt(int val,int8_t field_length);
[; ;lcd_hd44780_pic16.h: 59: void LCDGotoXY(uint8_t x,uint8_t y);
[; ;lcd_hd44780_pic16.h: 62: void LCDByte(uint8_t,uint8_t);
[; ;lcd_hd44780_pic16.h: 66: void LCDBusyLoop();
[; ;i2c.h: 37: void I2C_Init() ;
[; ;i2c.h: 39: void I2C_Wait();
[; ;i2c.h: 40: void I2C_Start() ;
[; ;i2c.h: 41: void I2C_Stop(void);
[; ;i2c.h: 42: void I2C_Write(unsigned char dat) ;
[; ;i2c.h: 43: unsigned char I2C_Read(void) ;
[; ;i2c.h: 44: void I2C_Ack();
[; ;i2c.h: 45: void I2C_NoAck() ;
[; ;DS1307.h: 36: int DS1307_Init() ;
[; ;DS1307.h: 37: void DS1307_Write(unsigned char dat) ;
[; ;DS1307.h: 38: unsigned char DS1307_Read() ;
[; ;DS1307.h: 39: void DS1307_SetTime(unsigned char hh, unsigned char mm, unsigned char ss) ;
[; ;DS1307.h: 40: void DS1307_SetDate(unsigned char nn,unsigned char dd, unsigned char mm, unsigned char yy) ;
[; ;DS1307.h: 41: void DS1307_GetTime(unsigned char *h_ptr,unsigned char *m_ptr,unsigned char *s_ptr) ;
[; ;DS1307.h: 42: void DS1307_GetDate(unsigned char *n_ptr,unsigned char *d_ptr,unsigned char *m_ptr,unsigned char *y_ptr) ;
[; ;DS1307.h: 44: void DS1307_readRam(unsigned char *ptr, int offset, int length) ;
[; ;DS1307.h: 45: void DS1307_writeRam(unsigned char *ptr, int offset, int length) ;
"11 LCDTime.c
[p x FOSC=XT ]
"12
[p x WDTE=OFF ]
"13
[p x PWRTE=ON ]
"14
[p x CP=OFF ]
"15
[p x BOREN=OFF ]
"16
[p x LVP=ON ]
"17
[p x CPD=OFF ]
"18
[p x WRT=ON ]
"21
[v _hour `i ~T0 @X0 1 e ]
[i _hour
-> 6 `i
]
[v _minute `i ~T0 @X0 1 e ]
[i _minute
-> 5 `i
]
[v _seconds `i ~T0 @X0 1 e ]
[i _seconds
-> 4 `i
]
[v _year `i ~T0 @X0 1 e ]
[i _year
-> 16 `i
]
[v _month `i ~T0 @X0 1 e ]
[i _month
-> 5 `i
]
[v _date `i ~T0 @X0 1 e ]
[i _date
-> 8 `i
]
[v _day `i ~T0 @X0 1 e ]
[i _day
-> 1 `i
]
[; ;LCDTime.c: 21: int hour=6, minute=5, seconds=4, year=16, month=5, date=8, day = 1 ;
"23
[v _last_hour `uc ~T0 @X0 1 e ]
[i _last_hour
-> -> 238 `i `uc
]
[; ;LCDTime.c: 23: char last_hour = 0xee ;
"25
[v _runningMinutes `i ~T0 @X0 1 e ]
[i _runningMinutes
-> 0 `i
]
[; ;LCDTime.c: 25: int runningMinutes = 0 ;
"26
[v _runningHours `i ~T0 @X0 1 e ]
[i _runningHours
-> 0 `i
]
[; ;LCDTime.c: 26: int runningHours = 0 ;
"28
[v _runningMinute `i ~T0 @X0 1 e ]
[i _runningMinute
-U -> 1 `i
]
[; ;LCDTime.c: 28: int runningMinute = -1 ;
"31
[v _bButton `uc ~T0 @X0 1 e ]
[i _bButton
-> -> 0 `i `uc
]
[; ;LCDTime.c: 31: unsigned char bButton = 0 ;
"33
[v _state `uc ~T0 @X0 1 e ]
[i _state
-> -> 0 `i `uc
]
[; ;LCDTime.c: 33: unsigned char state = 0x0;
[v F1127 `Cuc ~T0 @X0 -> 4 `i t ]
"36
[v _ttable `F1127 ~T0 @X0 -> 7 `i e ]
[i _ttable
:U ..
:U ..
"37
-> -> 0 `i `uc
-> -> 2 `i `uc
-> -> 4 `i `uc
-> -> 0 `i `uc
..
:U ..
"39
-> -> 3 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> | -> 0 `i -> 16 `i `uc
..
:U ..
"41
-> -> 3 `i `uc
-> -> 2 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"43
-> -> 3 `i `uc
-> -> 2 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
..
:U ..
"45
-> -> 6 `i `uc
-> -> 0 `i `uc
-> -> 4 `i `uc
-> -> 0 `i `uc
..
:U ..
"47
-> -> 6 `i `uc
-> -> 5 `i `uc
-> -> 0 `i `uc
-> | -> 0 `i -> 32 `i `uc
..
:U ..
"49
-> -> 6 `i `uc
-> -> 5 `i `uc
-> -> 4 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;LCDTime.c: 36: const unsigned char ttable[7][4] = {
[; ;LCDTime.c: 37: {0x0, 0x2, 0x4, 0x0},
[; ;LCDTime.c: 39: {0x3, 0x0, 0x1, 0x0 | 0x10},
[; ;LCDTime.c: 41: {0x3, 0x2, 0x0, 0x0},
[; ;LCDTime.c: 43: {0x3, 0x2, 0x1, 0x0},
[; ;LCDTime.c: 45: {0x6, 0x0, 0x4, 0x0},
[; ;LCDTime.c: 47: {0x6, 0x5, 0x0, 0x0 | 0x20},
[; ;LCDTime.c: 49: {0x6, 0x5, 0x4, 0x0},
[; ;LCDTime.c: 50: };
"53
[v _daysOfTheWeek `Cuc ~T0 @X0 -> 0 `x e ]
[i _daysOfTheWeek
:U ..
-> 77 `c
-> 111 `c
-> 110 `c
-> 84 `c
-> 117 `c
-> 101 `c
-> 87 `c
-> 101 `c
-> 100 `c
-> 84 `c
-> 104 `c
-> 117 `c
-> 70 `c
-> 114 `c
-> 105 `c
-> 83 `c
-> 97 `c
-> 116 `c
-> 83 `c
-> 117 `c
-> 110 `c
-> 0 `c
..
]
[; ;LCDTime.c: 53: const char daysOfTheWeek[] = "MonTueWedThuFriSatSun" ;
"54
[v _setText `Cuc ~T0 @X0 -> 5 `i e ]
[i _setText
:U ..
-> 83 `c
-> 101 `c
-> 116 `c
-> 32 `c
-> 0 `c
..
]
[; ;LCDTime.c: 54: const char setText[5] = {"Set \0"};
"56
[v _monthDays `Cuc ~T0 @X0 -> 12 `i e ]
[i _monthDays
:U ..
-> -> 31 `i `uc
-> -> 29 `i `uc
-> -> 31 `i `uc
-> -> 30 `i `uc
-> -> 31 `i `uc
-> -> 30 `i `uc
-> -> 31 `i `uc
-> -> 31 `i `uc
-> -> 30 `i `uc
-> -> 31 `i `uc
-> -> 30 `i `uc
-> -> 31 `i `uc
..
]
[; ;LCDTime.c: 56: const unsigned char monthDays[12] = { 31,29,31,30,31,30,31,31,30,31,30,31 } ;
"58
[v _menuFunction `uc ~T0 @X0 1 e ]
[i _menuFunction
-> -> 1 `i `uc
]
[; ;LCDTime.c: 58: unsigned char menuFunction = 1 ;
"59
[v _next_menu_clear `i ~T0 @X0 1 e ]
[i _next_menu_clear
-> 0 `i
]
[; ;LCDTime.c: 59: int next_menu_clear = 0 ;
"61
[v _main `(v ~T0 @X0 1 ef ]
"62
{
[; ;LCDTime.c: 61: void main(void)
[; ;LCDTime.c: 62: {
[e :U _main ]
[f ]
[; ;LCDTime.c: 64: I2C_Init() ;
"64
[e ( _I2C_Init ..  ]
[; ;LCDTime.c: 66: LCDInit(0B00000000);
"66
[e ( _LCDInit (1 -> -> 0 `i `uc ]
[; ;LCDTime.c: 68: DS1307_Init() ;
"68
[e ( _DS1307_Init ..  ]
[; ;LCDTime.c: 71: (LCDByte(0b00000001,0));
"71
[e ( _LCDByte (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;LCDTime.c: 74: DS1307_readRam(&runningMinutes,0,2) ;
"74
[e ( _DS1307_readRam (3 , , -> &U _runningMinutes `*uc -> 0 `i -> 2 `i ]
[; ;LCDTime.c: 75: DS1307_readRam(&runningHours,2,2) ;
"75
[e ( _DS1307_readRam (3 , , -> &U _runningHours `*uc -> 2 `i -> 2 `i ]
[; ;LCDTime.c: 77: LCDWriteString("Starting counter");
"77
[e ( _LCDWriteString (1 :s 1C ]
[; ;LCDTime.c: 78: LCDGotoXY(0,1) ;
"78
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 79: LCDWriteString("at ");
"79
[e ( _LCDWriteString (1 :s 2C ]
[; ;LCDTime.c: 80: LCDWriteInt(runningHours,1);
"80
[e ( _LCDWriteInt (2 , _runningHours -> -> 1 `i `c ]
[; ;LCDTime.c: 81: LCDWriteString(":");
"81
[e ( _LCDWriteString (1 :s 3C ]
[; ;LCDTime.c: 82: LCDWriteInt(runningMinutes,1);
"82
[e ( _LCDWriteInt (2 , _runningMinutes -> -> 1 `i `c ]
[; ;LCDTime.c: 83: _delay((unsigned long)((750)*(4000000/4000.0))) ;
"83
[e ( __delay (1 -> * -> -> 750 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;LCDTime.c: 84: _delay((unsigned long)((750)*(4000000/4000.0))) ;
"84
[e ( __delay (1 -> * -> -> 750 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;LCDTime.c: 85: _delay((unsigned long)((750)*(4000000/4000.0))) ;
"85
[e ( __delay (1 -> * -> -> 750 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;LCDTime.c: 86: _delay((unsigned long)((750)*(4000000/4000.0))) ;
"86
[e ( __delay (1 -> * -> -> 750 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;LCDTime.c: 89: runningMinutes-- ;
"89
[e -- _runningMinutes -> 1 `i ]
[; ;LCDTime.c: 91: (LCDByte(0b00000001,0));
"91
[e ( _LCDByte (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;LCDTime.c: 93: while(1)
"93
[e :U 93 ]
[; ;LCDTime.c: 94: {
"94
{
[; ;LCDTime.c: 95: readClock();
"95
[e ( _readClock ..  ]
[; ;LCDTime.c: 97: showClock() ;
"97
[e ( _showClock ..  ]
[; ;LCDTime.c: 99: readInputs() ;
"99
[e ( _readInputs ..  ]
[; ;LCDTime.c: 101: if (bButton)
"101
[e $ ! != -> _bButton `i -> -> -> 0 `i `uc `i 95  ]
[; ;LCDTime.c: 102: doMenu();
"102
[e ( _doMenu ..  ]
[e $U 96  ]
"103
[e :U 95 ]
[; ;LCDTime.c: 103: else if (state & 0x30)
[e $ ! != & -> _state `i -> 48 `i -> 0 `i 97  ]
[; ;LCDTime.c: 104: {
"104
{
[; ;LCDTime.c: 110: if (state & 0x10)
"110
[e $ ! != & -> _state `i -> 16 `i -> 0 `i 98  ]
[; ;LCDTime.c: 111: {
"111
{
[; ;LCDTime.c: 112: menuFunction++ ;
"112
[e ++ _menuFunction -> -> 1 `i `uc ]
[; ;LCDTime.c: 113: if (menuFunction == 4)
"113
[e $ ! == -> _menuFunction `i -> 4 `i 99  ]
[; ;LCDTime.c: 114: menuFunction = 1 ;
"114
[e = _menuFunction -> -> 1 `i `uc ]
[e :U 99 ]
"115
}
[; ;LCDTime.c: 115: }
[e $U 100  ]
"116
[e :U 98 ]
[; ;LCDTime.c: 116: else if (state & 0x20)
[e $ ! != & -> _state `i -> 32 `i -> 0 `i 101  ]
[; ;LCDTime.c: 117: {
"117
{
[; ;LCDTime.c: 118: menuFunction-- ;
"118
[e -- _menuFunction -> -> 1 `i `uc ]
[; ;LCDTime.c: 119: if (menuFunction < 1)
"119
[e $ ! < -> _menuFunction `i -> 1 `i 102  ]
[; ;LCDTime.c: 120: menuFunction = 4-1 ;
"120
[e = _menuFunction -> - -> 4 `i -> 1 `i `uc ]
[e :U 102 ]
"121
}
[e :U 101 ]
"123
[e :U 100 ]
[; ;LCDTime.c: 121: }
[; ;LCDTime.c: 123: if (menuFunction != 1)
[e $ ! != -> _menuFunction `i -> 1 `i 103  ]
[; ;LCDTime.c: 124: {
"124
{
[; ;LCDTime.c: 125: next_menu_clear = minute * 60 + seconds + 20 ;
"125
[e = _next_menu_clear + + * _minute -> 60 `i _seconds -> 20 `i ]
[; ;LCDTime.c: 126: LCDGotoXY(9,0);
"126
[e ( _LCDGotoXY (2 , -> -> 9 `i `uc -> -> 0 `i `uc ]
[; ;LCDTime.c: 127: if (menuFunction == 2)
"127
[e $ ! == -> _menuFunction `i -> 2 `i 104  ]
[; ;LCDTime.c: 128: LCDWriteString("Time ?");
"128
[e ( _LCDWriteString (1 :s 4C ]
[e :U 104 ]
[; ;LCDTime.c: 129: if (menuFunction == 3)
"129
[e $ ! == -> _menuFunction `i -> 3 `i 105  ]
[; ;LCDTime.c: 130: LCDWriteString("Date ?");
"130
[e ( _LCDWriteString (1 :s 5C ]
[e :U 105 ]
"131
}
[; ;LCDTime.c: 131: }
[e $U 106  ]
"132
[e :U 103 ]
[; ;LCDTime.c: 132: else
[; ;LCDTime.c: 133: clearPrompt();
"133
[e ( _clearPrompt ..  ]
[e :U 106 ]
"134
}
[; ;LCDTime.c: 134: }
[e $U 107  ]
"135
[e :U 97 ]
[; ;LCDTime.c: 135: else if (next_menu_clear && ((minute * 60 + seconds) > next_menu_clear))
[e $ ! && != _next_menu_clear -> 0 `i > + * _minute -> 60 `i _seconds _next_menu_clear 108  ]
[; ;LCDTime.c: 136: {
"136
{
[; ;LCDTime.c: 137: clearPrompt();
"137
[e ( _clearPrompt ..  ]
"138
}
[e :U 108 ]
"139
[e :U 107 ]
[e :U 96 ]
}
[e :U 92 ]
"93
[e $U 93  ]
[e :U 94 ]
[; ;LCDTime.c: 138: }
[; ;LCDTime.c: 139: }
[; ;LCDTime.c: 140: }
"140
[e :UE 91 ]
}
"142
[v _clearPrompt `(v ~T0 @X0 1 ef ]
"143
{
[; ;LCDTime.c: 142: void clearPrompt()
[; ;LCDTime.c: 143: {
[e :U _clearPrompt ]
[f ]
[; ;LCDTime.c: 144: next_menu_clear = 0 ;
"144
[e = _next_menu_clear -> 0 `i ]
[; ;LCDTime.c: 145: menuFunction = 1 ;
"145
[e = _menuFunction -> -> 1 `i `uc ]
[; ;LCDTime.c: 146: LCDGotoXY(9,0);
"146
[e ( _LCDGotoXY (2 , -> -> 9 `i `uc -> -> 0 `i `uc ]
[; ;LCDTime.c: 147: LCDWriteString("       ");
"147
[e ( _LCDWriteString (1 :s 6C ]
[; ;LCDTime.c: 148: }
"148
[e :UE 109 ]
}
"150
[v _doMenu `(v ~T0 @X0 1 ef ]
"151
{
[; ;LCDTime.c: 150: void doMenu()
[; ;LCDTime.c: 151: {
[e :U _doMenu ]
[f ]
[; ;LCDTime.c: 152: while(bButton)
"152
[e $U 111  ]
[e :U 112 ]
[; ;LCDTime.c: 153: readInputs();
"153
[e ( _readInputs ..  ]
[e :U 111 ]
"152
[e $ != -> _bButton `i -> -> -> 0 `i `uc `i 112  ]
[e :U 113 ]
[; ;LCDTime.c: 156: if (menuFunction == 1 | menuFunction == 2)
"156
[e $ ! | == -> _menuFunction `i -> 1 `i == -> _menuFunction `i -> 2 `i 114  ]
[; ;LCDTime.c: 157: {
"157
{
"158
[v _h `i ~T0 @X0 1 a ]
[v _m `i ~T0 @X0 1 a ]
[v _s `i ~T0 @X0 1 a ]
[; ;LCDTime.c: 158: int h,m,s ;
[; ;LCDTime.c: 160: h = hour ;
"160
[e = _h _hour ]
[; ;LCDTime.c: 161: m = minute ;
"161
[e = _m _minute ]
[; ;LCDTime.c: 162: s = seconds ;
"162
[e = _s _seconds ]
[; ;LCDTime.c: 164: (LCDByte(0b00000001,0));
"164
[e ( _LCDByte (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;LCDTime.c: 165: LCDWriteString(setText);
"165
[e ( _LCDWriteString (1 &U _setText ]
[; ;LCDTime.c: 166: LCDWriteString("Hours");
"166
[e ( _LCDWriteString (1 :s 7C ]
[; ;LCDTime.c: 168: LCDGotoXY(0,1) ;
"168
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 169: showTime();
"169
[e ( _showTime ..  ]
[; ;LCDTime.c: 171: while(!bButton)
"171
[e $U 115  ]
[e :U 116 ]
[; ;LCDTime.c: 172: {
"172
{
[; ;LCDTime.c: 173: readInputs();
"173
[e ( _readInputs ..  ]
[; ;LCDTime.c: 175: if (state & 0x10)
"175
[e $ ! != & -> _state `i -> 16 `i -> 0 `i 118  ]
[; ;LCDTime.c: 176: {
"176
{
[; ;LCDTime.c: 177: hour++;
"177
[e ++ _hour -> 1 `i ]
[; ;LCDTime.c: 178: if (hour > 23)
"178
[e $ ! > _hour -> 23 `i 119  ]
[; ;LCDTime.c: 179: hour = 0 ;
"179
[e = _hour -> 0 `i ]
[e :U 119 ]
"180
}
[; ;LCDTime.c: 180: }
[e $U 120  ]
"181
[e :U 118 ]
[; ;LCDTime.c: 181: else if (state & 0x20)
[e $ ! != & -> _state `i -> 32 `i -> 0 `i 121  ]
[; ;LCDTime.c: 182: {
"182
{
[; ;LCDTime.c: 183: hour--;
"183
[e -- _hour -> 1 `i ]
[; ;LCDTime.c: 184: if (hour < 0)
"184
[e $ ! < _hour -> 0 `i 122  ]
[; ;LCDTime.c: 185: hour = 0 ;
"185
[e = _hour -> 0 `i ]
[e :U 122 ]
"186
}
[e :U 121 ]
"188
[e :U 120 ]
[; ;LCDTime.c: 186: }
[; ;LCDTime.c: 188: if (state & 0x30)
[e $ ! != & -> _state `i -> 48 `i -> 0 `i 123  ]
[; ;LCDTime.c: 189: {
"189
{
[; ;LCDTime.c: 190: LCDGotoXY(0,1) ;
"190
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 191: showTime();
"191
[e ( _showTime ..  ]
"192
}
[e :U 123 ]
"193
}
[e :U 115 ]
"171
[e $ ! != -> _bButton `i -> -> -> 0 `i `uc `i 116  ]
[e :U 117 ]
[; ;LCDTime.c: 192: }
[; ;LCDTime.c: 193: }
[; ;LCDTime.c: 195: while(bButton)
"195
[e $U 124  ]
[e :U 125 ]
[; ;LCDTime.c: 196: readInputs();
"196
[e ( _readInputs ..  ]
[e :U 124 ]
"195
[e $ != -> _bButton `i -> -> -> 0 `i `uc `i 125  ]
[e :U 126 ]
[; ;LCDTime.c: 198: LCDGotoXY(0,0) ;
"198
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;LCDTime.c: 199: LCDWriteString(setText);
"199
[e ( _LCDWriteString (1 &U _setText ]
[; ;LCDTime.c: 200: LCDWriteString("Minutes");
"200
[e ( _LCDWriteString (1 :s 8C ]
[; ;LCDTime.c: 202: while(!bButton)
"202
[e $U 127  ]
[e :U 128 ]
[; ;LCDTime.c: 203: {
"203
{
[; ;LCDTime.c: 204: readInputs();
"204
[e ( _readInputs ..  ]
[; ;LCDTime.c: 206: if (state & 0x10)
"206
[e $ ! != & -> _state `i -> 16 `i -> 0 `i 130  ]
[; ;LCDTime.c: 207: {
"207
{
[; ;LCDTime.c: 208: minute++;
"208
[e ++ _minute -> 1 `i ]
[; ;LCDTime.c: 209: if (minute > 59)
"209
[e $ ! > _minute -> 59 `i 131  ]
[; ;LCDTime.c: 210: minute = 0 ;
"210
[e = _minute -> 0 `i ]
[e :U 131 ]
"211
}
[; ;LCDTime.c: 211: }
[e $U 132  ]
"212
[e :U 130 ]
[; ;LCDTime.c: 212: else if (state & 0x20)
[e $ ! != & -> _state `i -> 32 `i -> 0 `i 133  ]
[; ;LCDTime.c: 213: {
"213
{
[; ;LCDTime.c: 214: minute--;
"214
[e -- _minute -> 1 `i ]
[; ;LCDTime.c: 215: if (minute < 0)
"215
[e $ ! < _minute -> 0 `i 134  ]
[; ;LCDTime.c: 216: minute = 0 ;
"216
[e = _minute -> 0 `i ]
[e :U 134 ]
"217
}
[e :U 133 ]
"219
[e :U 132 ]
[; ;LCDTime.c: 217: }
[; ;LCDTime.c: 219: if (state & 0x30)
[e $ ! != & -> _state `i -> 48 `i -> 0 `i 135  ]
[; ;LCDTime.c: 220: {
"220
{
[; ;LCDTime.c: 221: LCDGotoXY(0,1) ;
"221
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 222: showTime();
"222
[e ( _showTime ..  ]
"223
}
[e :U 135 ]
"224
}
[e :U 127 ]
"202
[e $ ! != -> _bButton `i -> -> -> 0 `i `uc `i 128  ]
[e :U 129 ]
[; ;LCDTime.c: 223: }
[; ;LCDTime.c: 224: }
[; ;LCDTime.c: 226: while(bButton)
"226
[e $U 136  ]
[e :U 137 ]
[; ;LCDTime.c: 227: readInputs();
"227
[e ( _readInputs ..  ]
[e :U 136 ]
"226
[e $ != -> _bButton `i -> -> -> 0 `i `uc `i 137  ]
[e :U 138 ]
[; ;LCDTime.c: 229: LCDGotoXY(0,0) ;
"229
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;LCDTime.c: 230: LCDWriteString(setText);
"230
[e ( _LCDWriteString (1 &U _setText ]
[; ;LCDTime.c: 231: LCDWriteString("Seconds");
"231
[e ( _LCDWriteString (1 :s 9C ]
[; ;LCDTime.c: 233: while(!bButton)
"233
[e $U 139  ]
[e :U 140 ]
[; ;LCDTime.c: 234: {
"234
{
[; ;LCDTime.c: 235: readInputs();
"235
[e ( _readInputs ..  ]
[; ;LCDTime.c: 237: if (state & 0x10)
"237
[e $ ! != & -> _state `i -> 16 `i -> 0 `i 142  ]
[; ;LCDTime.c: 238: {
"238
{
[; ;LCDTime.c: 239: seconds++;
"239
[e ++ _seconds -> 1 `i ]
[; ;LCDTime.c: 240: if (seconds > 59)
"240
[e $ ! > _seconds -> 59 `i 143  ]
[; ;LCDTime.c: 241: seconds = 0 ;
"241
[e = _seconds -> 0 `i ]
[e :U 143 ]
"242
}
[; ;LCDTime.c: 242: }
[e $U 144  ]
"243
[e :U 142 ]
[; ;LCDTime.c: 243: else if (state & 0x20)
[e $ ! != & -> _state `i -> 32 `i -> 0 `i 145  ]
[; ;LCDTime.c: 244: {
"244
{
[; ;LCDTime.c: 245: seconds--;
"245
[e -- _seconds -> 1 `i ]
[; ;LCDTime.c: 246: if (seconds < 0)
"246
[e $ ! < _seconds -> 0 `i 146  ]
[; ;LCDTime.c: 247: seconds = 0 ;
"247
[e = _seconds -> 0 `i ]
[e :U 146 ]
"248
}
[e :U 145 ]
"250
[e :U 144 ]
[; ;LCDTime.c: 248: }
[; ;LCDTime.c: 250: if (state & 0x30)
[e $ ! != & -> _state `i -> 48 `i -> 0 `i 147  ]
[; ;LCDTime.c: 251: {
"251
{
[; ;LCDTime.c: 252: LCDGotoXY(0,1) ;
"252
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 253: showTime();
"253
[e ( _showTime ..  ]
"254
}
[e :U 147 ]
"255
}
[e :U 139 ]
"233
[e $ ! != -> _bButton `i -> -> -> 0 `i `uc `i 140  ]
[e :U 141 ]
[; ;LCDTime.c: 254: }
[; ;LCDTime.c: 255: }
[; ;LCDTime.c: 258: if (h != hour || m != minute || s != seconds)
"258
[e $ ! || || != _h _hour != _m _minute != _s _seconds 148  ]
[; ;LCDTime.c: 259: {
"259
{
[; ;LCDTime.c: 260: h = ((hour / 10) << 4) + hour % 10 ;
"260
[e = _h + << / _hour -> 10 `i -> 4 `i % _hour -> 10 `i ]
[; ;LCDTime.c: 261: m = ((minute / 10) << 4) + minute % 10 ;
"261
[e = _m + << / _minute -> 10 `i -> 4 `i % _minute -> 10 `i ]
[; ;LCDTime.c: 262: s = ((seconds / 10) << 4) + seconds % 10 ;
"262
[e = _s + << / _seconds -> 10 `i -> 4 `i % _seconds -> 10 `i ]
[; ;LCDTime.c: 264: DS1307_SetTime(h,m,s) ;
"264
[e ( _DS1307_SetTime (3 , , -> _h `uc -> _m `uc -> _s `uc ]
[; ;LCDTime.c: 266: runningMinute = minute ;
"266
[e = _runningMinute _minute ]
"267
}
[e :U 148 ]
[; ;LCDTime.c: 267: }
[; ;LCDTime.c: 269: while(bButton)
"269
[e $U 149  ]
[e :U 150 ]
[; ;LCDTime.c: 270: readInputs();
"270
[e ( _readInputs ..  ]
[e :U 149 ]
"269
[e $ != -> _bButton `i -> -> -> 0 `i `uc `i 150  ]
[e :U 151 ]
"271
}
[e :U 114 ]
[; ;LCDTime.c: 271: }
[; ;LCDTime.c: 274: if (menuFunction == 1 | menuFunction == 3)
"274
[e $ ! | == -> _menuFunction `i -> 1 `i == -> _menuFunction `i -> 3 `i 152  ]
[; ;LCDTime.c: 275: {
"275
{
"276
[v _n `i ~T0 @X0 1 a ]
[v _d `i ~T0 @X0 1 a ]
[v _m `i ~T0 @X0 1 a ]
[v _y `i ~T0 @X0 1 a ]
[; ;LCDTime.c: 276: int n,d,m,y ;
[; ;LCDTime.c: 278: n = day ;
"278
[e = _n _day ]
[; ;LCDTime.c: 279: d = date ;
"279
[e = _d _date ]
[; ;LCDTime.c: 280: m = month ;
"280
[e = _m _month ]
[; ;LCDTime.c: 281: y = year ;
"281
[e = _y _year ]
[; ;LCDTime.c: 283: (LCDByte(0b00000001,0));
"283
[e ( _LCDByte (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;LCDTime.c: 284: LCDWriteString(setText);
"284
[e ( _LCDWriteString (1 &U _setText ]
[; ;LCDTime.c: 285: LCDWriteString("Year");
"285
[e ( _LCDWriteString (1 :s 10C ]
[; ;LCDTime.c: 287: LCDGotoXY(0,1) ;
"287
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 288: showDate();
"288
[e ( _showDate ..  ]
[; ;LCDTime.c: 290: while(!bButton)
"290
[e $U 153  ]
[e :U 154 ]
[; ;LCDTime.c: 291: {
"291
{
[; ;LCDTime.c: 292: readInputs();
"292
[e ( _readInputs ..  ]
[; ;LCDTime.c: 294: if (state & 0x10)
"294
[e $ ! != & -> _state `i -> 16 `i -> 0 `i 156  ]
[; ;LCDTime.c: 295: {
"295
{
[; ;LCDTime.c: 296: year++;
"296
[e ++ _year -> 1 `i ]
[; ;LCDTime.c: 297: if (year > 99)
"297
[e $ ! > _year -> 99 `i 157  ]
[; ;LCDTime.c: 298: year = 0 ;
"298
[e = _year -> 0 `i ]
[e :U 157 ]
"299
}
[; ;LCDTime.c: 299: }
[e $U 158  ]
"300
[e :U 156 ]
[; ;LCDTime.c: 300: else if (state & 0x20)
[e $ ! != & -> _state `i -> 32 `i -> 0 `i 159  ]
[; ;LCDTime.c: 301: {
"301
{
[; ;LCDTime.c: 302: year--;
"302
[e -- _year -> 1 `i ]
[; ;LCDTime.c: 303: if (year < 0)
"303
[e $ ! < _year -> 0 `i 160  ]
[; ;LCDTime.c: 304: date = 99 ;
"304
[e = _date -> 99 `i ]
[e :U 160 ]
"305
}
[e :U 159 ]
"307
[e :U 158 ]
[; ;LCDTime.c: 305: }
[; ;LCDTime.c: 307: if (state & 0x30)
[e $ ! != & -> _state `i -> 48 `i -> 0 `i 161  ]
[; ;LCDTime.c: 308: {
"308
{
[; ;LCDTime.c: 309: LCDGotoXY(0,1) ;
"309
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 310: showDate();
"310
[e ( _showDate ..  ]
"311
}
[e :U 161 ]
"312
}
[e :U 153 ]
"290
[e $ ! != -> _bButton `i -> -> -> 0 `i `uc `i 154  ]
[e :U 155 ]
[; ;LCDTime.c: 311: }
[; ;LCDTime.c: 312: }
[; ;LCDTime.c: 314: while(bButton)
"314
[e $U 162  ]
[e :U 163 ]
[; ;LCDTime.c: 315: readInputs();
"315
[e ( _readInputs ..  ]
[e :U 162 ]
"314
[e $ != -> _bButton `i -> -> -> 0 `i `uc `i 163  ]
[e :U 164 ]
[; ;LCDTime.c: 317: LCDGotoXY(0,0) ;
"317
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;LCDTime.c: 318: LCDWriteString(setText);
"318
[e ( _LCDWriteString (1 &U _setText ]
[; ;LCDTime.c: 319: LCDWriteString("Month");
"319
[e ( _LCDWriteString (1 :s 11C ]
[; ;LCDTime.c: 321: while(!bButton)
"321
[e $U 165  ]
[e :U 166 ]
[; ;LCDTime.c: 322: {
"322
{
[; ;LCDTime.c: 323: readInputs();
"323
[e ( _readInputs ..  ]
[; ;LCDTime.c: 325: if (state & 0x10)
"325
[e $ ! != & -> _state `i -> 16 `i -> 0 `i 168  ]
[; ;LCDTime.c: 326: {
"326
{
[; ;LCDTime.c: 327: month++;
"327
[e ++ _month -> 1 `i ]
[; ;LCDTime.c: 328: if (month > 12)
"328
[e $ ! > _month -> 12 `i 169  ]
[; ;LCDTime.c: 329: month = 1 ;
"329
[e = _month -> 1 `i ]
[e :U 169 ]
"330
}
[; ;LCDTime.c: 330: }
[e $U 170  ]
"331
[e :U 168 ]
[; ;LCDTime.c: 331: else if (state & 0x20)
[e $ ! != & -> _state `i -> 32 `i -> 0 `i 171  ]
[; ;LCDTime.c: 332: {
"332
{
[; ;LCDTime.c: 333: month--;
"333
[e -- _month -> 1 `i ]
[; ;LCDTime.c: 334: if (!month)
"334
[e $ ! ! != _month -> 0 `i 172  ]
[; ;LCDTime.c: 335: month = 12 ;
"335
[e = _month -> 12 `i ]
[e :U 172 ]
"336
}
[e :U 171 ]
"338
[e :U 170 ]
[; ;LCDTime.c: 336: }
[; ;LCDTime.c: 338: if (state & 0x30)
[e $ ! != & -> _state `i -> 48 `i -> 0 `i 173  ]
[; ;LCDTime.c: 339: {
"339
{
[; ;LCDTime.c: 340: LCDGotoXY(0,1) ;
"340
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 341: showDate();
"341
[e ( _showDate ..  ]
"342
}
[e :U 173 ]
"343
}
[e :U 165 ]
"321
[e $ ! != -> _bButton `i -> -> -> 0 `i `uc `i 166  ]
[e :U 167 ]
[; ;LCDTime.c: 342: }
[; ;LCDTime.c: 343: }
[; ;LCDTime.c: 345: while(bButton)
"345
[e $U 174  ]
[e :U 175 ]
[; ;LCDTime.c: 346: readInputs();
"346
[e ( _readInputs ..  ]
[e :U 174 ]
"345
[e $ != -> _bButton `i -> -> -> 0 `i `uc `i 175  ]
[e :U 176 ]
[; ;LCDTime.c: 348: LCDGotoXY(0,0) ;
"348
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;LCDTime.c: 349: LCDWriteString(setText);
"349
[e ( _LCDWriteString (1 &U _setText ]
[; ;LCDTime.c: 350: LCDWriteString("Date ");
"350
[e ( _LCDWriteString (1 :s 12C ]
[; ;LCDTime.c: 352: while(!bButton)
"352
[e $U 177  ]
[e :U 178 ]
[; ;LCDTime.c: 353: {
"353
{
[; ;LCDTime.c: 354: readInputs();
"354
[e ( _readInputs ..  ]
[; ;LCDTime.c: 356: if (state & 0x10)
"356
[e $ ! != & -> _state `i -> 16 `i -> 0 `i 180  ]
[; ;LCDTime.c: 357: {
"357
{
[; ;LCDTime.c: 358: date++;
"358
[e ++ _date -> 1 `i ]
[; ;LCDTime.c: 359: if (date > monthDays[month-1])
"359
[e $ ! > _date -> *U + &U _monthDays * -> -> - _month -> 1 `i `ui `ux -> -> # *U &U _monthDays `ui `ux `i 181  ]
[; ;LCDTime.c: 360: date = 1 ;
"360
[e = _date -> 1 `i ]
[e :U 181 ]
"361
}
[; ;LCDTime.c: 361: }
[e $U 182  ]
"362
[e :U 180 ]
[; ;LCDTime.c: 362: else if (state & 0x20)
[e $ ! != & -> _state `i -> 32 `i -> 0 `i 183  ]
[; ;LCDTime.c: 363: {
"363
{
[; ;LCDTime.c: 364: date--;
"364
[e -- _date -> 1 `i ]
[; ;LCDTime.c: 365: if (date < 0)
"365
[e $ ! < _date -> 0 `i 184  ]
[; ;LCDTime.c: 366: date = monthDays[month-1] ;
"366
[e = _date -> *U + &U _monthDays * -> -> - _month -> 1 `i `ui `ux -> -> # *U &U _monthDays `ui `ux `i ]
[e :U 184 ]
"367
}
[e :U 183 ]
"369
[e :U 182 ]
[; ;LCDTime.c: 367: }
[; ;LCDTime.c: 369: if (state & 0x30)
[e $ ! != & -> _state `i -> 48 `i -> 0 `i 185  ]
[; ;LCDTime.c: 370: {
"370
{
[; ;LCDTime.c: 371: LCDGotoXY(0,1) ;
"371
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 372: showDate();
"372
[e ( _showDate ..  ]
"373
}
[e :U 185 ]
"374
}
[e :U 177 ]
"352
[e $ ! != -> _bButton `i -> -> -> 0 `i `uc `i 178  ]
[e :U 179 ]
[; ;LCDTime.c: 373: }
[; ;LCDTime.c: 374: }
[; ;LCDTime.c: 376: while(bButton)
"376
[e $U 186  ]
[e :U 187 ]
[; ;LCDTime.c: 377: readInputs();
"377
[e ( _readInputs ..  ]
[e :U 186 ]
"376
[e $ != -> _bButton `i -> -> -> 0 `i `uc `i 187  ]
[e :U 188 ]
[; ;LCDTime.c: 379: LCDGotoXY(0,0) ;
"379
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;LCDTime.c: 380: LCDWriteString(setText);
"380
[e ( _LCDWriteString (1 &U _setText ]
[; ;LCDTime.c: 381: LCDWriteString("Day  ");
"381
[e ( _LCDWriteString (1 :s 13C ]
[; ;LCDTime.c: 383: while(!bButton)
"383
[e $U 189  ]
[e :U 190 ]
[; ;LCDTime.c: 384: {
"384
{
[; ;LCDTime.c: 385: readInputs();
"385
[e ( _readInputs ..  ]
[; ;LCDTime.c: 387: if (state & 0x10)
"387
[e $ ! != & -> _state `i -> 16 `i -> 0 `i 192  ]
[; ;LCDTime.c: 388: {
"388
{
[; ;LCDTime.c: 389: day++;
"389
[e ++ _day -> 1 `i ]
[; ;LCDTime.c: 390: if (day > 7)
"390
[e $ ! > _day -> 7 `i 193  ]
[; ;LCDTime.c: 391: day = 1 ;
"391
[e = _day -> 1 `i ]
[e :U 193 ]
"392
}
[; ;LCDTime.c: 392: }
[e $U 194  ]
"393
[e :U 192 ]
[; ;LCDTime.c: 393: else if (state & 0x20)
[e $ ! != & -> _state `i -> 32 `i -> 0 `i 195  ]
[; ;LCDTime.c: 394: {
"394
{
[; ;LCDTime.c: 395: day--;
"395
[e -- _day -> 1 `i ]
[; ;LCDTime.c: 396: if (day < 0)
"396
[e $ ! < _day -> 0 `i 196  ]
[; ;LCDTime.c: 397: day = 7 ;
"397
[e = _day -> 7 `i ]
[e :U 196 ]
"398
}
[e :U 195 ]
"400
[e :U 194 ]
[; ;LCDTime.c: 398: }
[; ;LCDTime.c: 400: if (state & 0x30)
[e $ ! != & -> _state `i -> 48 `i -> 0 `i 197  ]
[; ;LCDTime.c: 401: {
"401
{
[; ;LCDTime.c: 402: LCDGotoXY(0,1) ;
"402
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 403: showDate();
"403
[e ( _showDate ..  ]
"404
}
[e :U 197 ]
"405
}
[e :U 189 ]
"383
[e $ ! != -> _bButton `i -> -> -> 0 `i `uc `i 190  ]
[e :U 191 ]
[; ;LCDTime.c: 404: }
[; ;LCDTime.c: 405: }
[; ;LCDTime.c: 407: if (n != day || d != date || m != month || y != year)
"407
[e $ ! || || || != _n _day != _d _date != _m _month != _y _year 198  ]
[; ;LCDTime.c: 408: {
"408
{
[; ;LCDTime.c: 409: n = ((day / 10) << 4) + day % 10 ;
"409
[e = _n + << / _day -> 10 `i -> 4 `i % _day -> 10 `i ]
[; ;LCDTime.c: 410: d = ((date / 10) << 4) + date % 10 ;
"410
[e = _d + << / _date -> 10 `i -> 4 `i % _date -> 10 `i ]
[; ;LCDTime.c: 411: m = ((month / 10) << 4) + month % 10 ;
"411
[e = _m + << / _month -> 10 `i -> 4 `i % _month -> 10 `i ]
[; ;LCDTime.c: 412: y = ((year / 10) << 4) + year % 10 ;
"412
[e = _y + << / _year -> 10 `i -> 4 `i % _year -> 10 `i ]
[; ;LCDTime.c: 414: DS1307_SetDate(n,d,m,y) ;
"414
[e ( _DS1307_SetDate (4 , , , -> _n `uc -> _d `uc -> _m `uc -> _y `uc ]
"415
}
[e :U 198 ]
[; ;LCDTime.c: 415: }
[; ;LCDTime.c: 418: while(bButton)
"418
[e $U 199  ]
[e :U 200 ]
[; ;LCDTime.c: 419: readInputs();
"419
[e ( _readInputs ..  ]
[e :U 199 ]
"418
[e $ != -> _bButton `i -> -> -> 0 `i `uc `i 200  ]
[e :U 201 ]
"420
}
[e :U 152 ]
[; ;LCDTime.c: 420: }
[; ;LCDTime.c: 421: }
"421
[e :UE 110 ]
}
"423
[v _readInputs `(v ~T0 @X0 1 ef ]
"424
{
[; ;LCDTime.c: 423: void readInputs()
[; ;LCDTime.c: 424: {
[e :U _readInputs ]
[f ]
[; ;LCDTime.c: 425: bButton = 0 ;
"425
[e = _bButton -> -> 0 `i `uc ]
[; ;LCDTime.c: 427: if (RB4 == 1)
"427
[e $ ! == -> _RB4 `i -> 1 `i 203  ]
[; ;LCDTime.c: 428: {
"428
{
[; ;LCDTime.c: 429: _delay((unsigned long)((15)*(4000000/4000000.0))) ;
"429
[e ( __delay (1 -> * -> -> 15 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;LCDTime.c: 430: if (RB4 == 1)
"430
[e $ ! == -> _RB4 `i -> 1 `i 204  ]
[; ;LCDTime.c: 431: {
"431
{
[; ;LCDTime.c: 432: bButton = 1 ;
"432
[e = _bButton -> -> 1 `i `uc ]
[; ;LCDTime.c: 433: return ;
"433
[e $UE 202  ]
"434
}
[e :U 204 ]
"435
}
[e :U 203 ]
"438
[v _pinstate `uc ~T0 @X0 1 a ]
[; ;LCDTime.c: 434: }
[; ;LCDTime.c: 435: }
[; ;LCDTime.c: 438: unsigned char pinstate = (RB1 << 1) | RB2 ;
[e = _pinstate -> | << -> _RB1 `i -> 1 `i -> _RB2 `i `uc ]
[; ;LCDTime.c: 440: state = ttable[state & 0xf][pinstate];
"440
[e = _state *U + &U *U + &U _ttable * -> -> & -> _state `i -> 15 `i `ui `ux -> * -> # *U &U *U &U _ttable `ui -> -> 4 `i `ui `ux * -> _pinstate `ux -> -> # *U &U *U + &U _ttable * -> -> & -> _state `i -> 15 `i `ui `ux -> * -> # *U &U *U &U _ttable `ui -> -> 4 `i `ui `ux `ui `ux ]
[; ;LCDTime.c: 441: }
"441
[e :UE 202 ]
}
"443
[v _readClock `(v ~T0 @X0 1 ef ]
"444
{
[; ;LCDTime.c: 443: void readClock()
[; ;LCDTime.c: 444: {
[e :U _readClock ]
[f ]
"445
[v _a `uc ~T0 @X0 1 a ]
[v _b `uc ~T0 @X0 1 a ]
[v _c `uc ~T0 @X0 1 a ]
[v _n `uc ~T0 @X0 1 a ]
[; ;LCDTime.c: 445: unsigned char a,b,c,n ;
[; ;LCDTime.c: 447: DS1307_GetTime(&a,&b,&c);
"447
[e ( _DS1307_GetTime (3 , , &U _a &U _b &U _c ]
[; ;LCDTime.c: 450: hour = (a % 16) + ((a / 16 ) * 10) ;
"450
[e = _hour + % -> _a `i -> 16 `i * / -> _a `i -> 16 `i -> 10 `i ]
[; ;LCDTime.c: 451: minute = (b % 16) + ((b / 16 ) * 10) ;
"451
[e = _minute + % -> _b `i -> 16 `i * / -> _b `i -> 16 `i -> 10 `i ]
[; ;LCDTime.c: 452: seconds = (c % 16) + ((c / 16 ) * 10) ;
"452
[e = _seconds + % -> _c `i -> 16 `i * / -> _c `i -> 16 `i -> 10 `i ]
[; ;LCDTime.c: 454: if (hour != last_hour)
"454
[e $ ! != _hour -> _last_hour `i 206  ]
[; ;LCDTime.c: 455: {
"455
{
[; ;LCDTime.c: 456: last_hour = hour ;
"456
[e = _last_hour -> _hour `uc ]
[; ;LCDTime.c: 458: DS1307_GetDate(&n,&a,&b,&c) ;
"458
[e ( _DS1307_GetDate (4 , , , &U _n &U _a &U _b &U _c ]
[; ;LCDTime.c: 460: day = (n % 16) ;
"460
[e = _day % -> _n `i -> 16 `i ]
[; ;LCDTime.c: 461: date = (a % 16) + ((a / 16 ) * 10) ;
"461
[e = _date + % -> _a `i -> 16 `i * / -> _a `i -> 16 `i -> 10 `i ]
[; ;LCDTime.c: 462: month = (b % 16) + ((b / 16 ) * 10) ;
"462
[e = _month + % -> _b `i -> 16 `i * / -> _b `i -> 16 `i -> 10 `i ]
[; ;LCDTime.c: 463: year = (c % 16) + ((c / 16 ) * 10) ;
"463
[e = _year + % -> _c `i -> 16 `i * / -> _c `i -> 16 `i -> 10 `i ]
"464
}
[e :U 206 ]
[; ;LCDTime.c: 464: }
[; ;LCDTime.c: 466: if (minute != runningMinute)
"466
[e $ ! != _minute _runningMinute 207  ]
[; ;LCDTime.c: 467: {
"467
{
[; ;LCDTime.c: 468: runningMinute = minute ;
"468
[e = _runningMinute _minute ]
[; ;LCDTime.c: 469: runningMinutes++ ;
"469
[e ++ _runningMinutes -> 1 `i ]
[; ;LCDTime.c: 471: if (runningMinutes >= 60)
"471
[e $ ! >= _runningMinutes -> 60 `i 208  ]
[; ;LCDTime.c: 472: {
"472
{
[; ;LCDTime.c: 473: runningHours++;
"473
[e ++ _runningHours -> 1 `i ]
[; ;LCDTime.c: 474: DS1307_writeRam(&runningHours,2,2) ;
"474
[e ( _DS1307_writeRam (3 , , -> &U _runningHours `*uc -> 2 `i -> 2 `i ]
[; ;LCDTime.c: 475: runningMinutes = 0 ;
"475
[e = _runningMinutes -> 0 `i ]
"476
}
[e :U 208 ]
[; ;LCDTime.c: 476: }
[; ;LCDTime.c: 479: DS1307_writeRam(&runningMinutes,0,2) ;
"479
[e ( _DS1307_writeRam (3 , , -> &U _runningMinutes `*uc -> 0 `i -> 2 `i ]
"480
}
[e :U 207 ]
[; ;LCDTime.c: 480: }
[; ;LCDTime.c: 481: }
"481
[e :UE 205 ]
}
"483
[v _showClock `(v ~T0 @X0 1 ef ]
"484
{
[; ;LCDTime.c: 483: void showClock()
[; ;LCDTime.c: 484: {
[e :U _showClock ]
[f ]
[; ;LCDTime.c: 485: LCDGotoXY(0,0) ;
"485
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;LCDTime.c: 486: showTime() ;
"486
[e ( _showTime ..  ]
[; ;LCDTime.c: 488: LCDGotoXY(0,1) ;
"488
[e ( _LCDGotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 489: showDate() ;
"489
[e ( _showDate ..  ]
[; ;LCDTime.c: 492: if (menuFunction == 1)
"492
[e $ ! == -> _menuFunction `i -> 1 `i 210  ]
[; ;LCDTime.c: 493: showRunningTime();
"493
[e ( _showRunningTime ..  ]
[e :U 210 ]
[; ;LCDTime.c: 494: }
"494
[e :UE 209 ]
}
"497
[v _showTime `(v ~T0 @X0 1 ef ]
"498
{
[; ;LCDTime.c: 497: void showTime()
[; ;LCDTime.c: 498: {
[e :U _showTime ]
[f ]
[; ;LCDTime.c: 499: LCDWriteInt(hour,2);
"499
[e ( _LCDWriteInt (2 , _hour -> -> 2 `i `c ]
[; ;LCDTime.c: 500: (LCDByte(':',1)) ;
"500
[e ( _LCDByte (2 , -> -> 58 `ui `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 501: LCDWriteInt(minute,2);
"501
[e ( _LCDWriteInt (2 , _minute -> -> 2 `i `c ]
[; ;LCDTime.c: 502: (LCDByte(':',1)) ;
"502
[e ( _LCDByte (2 , -> -> 58 `ui `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 503: LCDWriteInt(seconds,2);
"503
[e ( _LCDWriteInt (2 , _seconds -> -> 2 `i `c ]
[; ;LCDTime.c: 509: }
"509
[e :UE 211 ]
}
"511
[v _showDate `(v ~T0 @X0 1 ef ]
"512
{
[; ;LCDTime.c: 511: void showDate()
[; ;LCDTime.c: 512: {
[e :U _showDate ]
[f ]
"513
[v _d `i ~T0 @X0 1 a ]
[; ;LCDTime.c: 513: int d = (day-1) * 3 ;
[e = _d * - _day -> 1 `i -> 3 `i ]
[; ;LCDTime.c: 515: LCDWriteInt(date,2);
"515
[e ( _LCDWriteInt (2 , _date -> -> 2 `i `c ]
[; ;LCDTime.c: 516: (LCDByte('/',1)) ;
"516
[e ( _LCDByte (2 , -> -> 47 `ui `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 517: LCDWriteInt(month,2);
"517
[e ( _LCDWriteInt (2 , _month -> -> 2 `i `c ]
[; ;LCDTime.c: 518: (LCDByte('/',1)) ;
"518
[e ( _LCDByte (2 , -> -> 47 `ui `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 519: (LCDByte('2',1)) ;
"519
[e ( _LCDByte (2 , -> -> 50 `ui `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 520: (LCDByte('0',1)) ;
"520
[e ( _LCDByte (2 , -> -> 48 `ui `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 521: LCDWriteInt(year,2);
"521
[e ( _LCDWriteInt (2 , _year -> -> 2 `i `c ]
[; ;LCDTime.c: 522: (LCDByte(32,1)) ;
"522
[e ( _LCDByte (2 , -> -> 32 `i `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 523: (LCDByte(32,1)) ;
"523
[e ( _LCDByte (2 , -> -> 32 `i `uc -> -> 1 `i `uc ]
[; ;LCDTime.c: 524: (LCDByte(daysOfTheWeek[d++],1)) ;
"524
[e ( _LCDByte (2 , *U + &U _daysOfTheWeek * -> -> ++ _d -> 1 `i `ui `ux -> -> # *U &U _daysOfTheWeek `ui `ux -> -> 1 `i `uc ]
[; ;LCDTime.c: 525: (LCDByte(daysOfTheWeek[d++],1)) ;
"525
[e ( _LCDByte (2 , *U + &U _daysOfTheWeek * -> -> ++ _d -> 1 `i `ui `ux -> -> # *U &U _daysOfTheWeek `ui `ux -> -> 1 `i `uc ]
[; ;LCDTime.c: 526: (LCDByte(daysOfTheWeek[d],1)) ;
"526
[e ( _LCDByte (2 , *U + &U _daysOfTheWeek * -> -> _d `ui `ux -> -> # *U &U _daysOfTheWeek `ui `ux -> -> 1 `i `uc ]
[; ;LCDTime.c: 527: }
"527
[e :UE 212 ]
}
"529
[v _showRunningTime `(v ~T0 @X0 1 ef ]
"530
{
[; ;LCDTime.c: 529: void showRunningTime()
[; ;LCDTime.c: 530: {
[e :U _showRunningTime ]
[f ]
[; ;LCDTime.c: 531: LCDGotoXY(10,0) ;
"531
[e ( _LCDGotoXY (2 , -> -> 10 `i `uc -> -> 0 `i `uc ]
[; ;LCDTime.c: 532: if (runningHours > 1000)
"532
[e $ ! > _runningHours -> 1000 `i 214  ]
[; ;LCDTime.c: 533: {
"533
{
[; ;LCDTime.c: 534: LCDWriteInt(runningHours / 1000,1);
"534
[e ( _LCDWriteInt (2 , / _runningHours -> 1000 `i -> -> 1 `i `c ]
[; ;LCDTime.c: 535: (LCDByte(',',1)) ;
"535
[e ( _LCDByte (2 , -> -> 44 `ui `uc -> -> 1 `i `uc ]
"536
}
[e :U 214 ]
[; ;LCDTime.c: 536: }
[; ;LCDTime.c: 537: LCDWriteInt(runningHours % 1000,1);
"537
[e ( _LCDWriteInt (2 , % _runningHours -> 1000 `i -> -> 1 `i `c ]
[; ;LCDTime.c: 538: }
"538
[e :UE 213 ]
}
[a 7C 72 111 117 114 115 0 ]
[a 8C 77 105 110 117 116 101 115 0 ]
[a 9C 83 101 99 111 110 100 115 0 ]
[a 1C 83 116 97 114 116 105 110 103 32 99 111 117 110 116 101 114 0 ]
[a 10C 89 101 97 114 0 ]
[a 11C 77 111 110 116 104 0 ]
[a 5C 68 97 116 101 32 63 0 ]
[a 4C 84 105 109 101 32 63 0 ]
[a 3C 58 0 ]
[a 2C 97 116 32 0 ]
[a 12C 68 97 116 101 32 0 ]
[a 13C 68 97 121 32 32 0 ]
[a 6C 32 32 32 32 32 32 32 0 ]
