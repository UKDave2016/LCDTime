

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue May 10 19:22:49 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  0088                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278                           
   279                           	psect	idataBANK0
   280  0B57                     __pidataBANK0:	
   281                           
   282                           ;initializer for _date
   283  0B57  3408               	retlw	8
   284  0B58  3400               	retlw	0
   285                           
   286                           ;initializer for _day
   287  0B59  3401               	retlw	1
   288  0B5A  3400               	retlw	0
   289                           
   290                           ;initializer for _hour
   291  0B5B  3406               	retlw	6
   292  0B5C  3400               	retlw	0
   293                           
   294                           ;initializer for _minute
   295  0B5D  3405               	retlw	5
   296  0B5E  3400               	retlw	0
   297                           
   298                           ;initializer for _month
   299  0B5F  3405               	retlw	5
   300  0B60  3400               	retlw	0
   301                           
   302                           ;initializer for _seconds
   303  0B61  3404               	retlw	4
   304  0B62  3400               	retlw	0
   305                           
   306                           ;initializer for _year
   307  0B63  3410               	retlw	16
   308  0B64  3400               	retlw	0
   309                           
   310                           ;initializer for _last_hour
   311  0B65  34EE               	retlw	238
   312                           
   313                           	psect	strings
   314  0003                     __pstrings:	
   315  0003                     stringtab:	
   316  0003                     __stringtab:	
   317  0003                     stringcode:	
   318                           ;	String table - string pointers are 1 byte each
   319                           
   320  0003                     stringdir:	
   321  0003  3000               	movlw	high stringdir
   322  0004  008A               	movwf	10
   323  0005  0804               	movf	4,w
   324  0006  0A84               	incf	4,f
   325  0007  0782               	addwf	2,f
   326  0008                     __stringbase:	
   327  0008  3400               	retlw	0
   328  0009                     __end_of__stringtab:	
   329  0009                     _ttable:	
   330  0009  3400               	retlw	0
   331  000A  3402               	retlw	2
   332  000B  3404               	retlw	4
   333  000C  3400               	retlw	0
   334  000D  3403               	retlw	3
   335  000E  3400               	retlw	0
   336  000F  3401               	retlw	1
   337  0010  3410               	retlw	16
   338  0011  3403               	retlw	3
   339  0012  3402               	retlw	2
   340  0013  3400               	retlw	0
   341  0014  3400               	retlw	0
   342  0015  3403               	retlw	3
   343  0016  3402               	retlw	2
   344  0017  3401               	retlw	1
   345  0018  3400               	retlw	0
   346  0019  3406               	retlw	6
   347  001A  3400               	retlw	0
   348  001B  3404               	retlw	4
   349  001C  3400               	retlw	0
   350  001D  3406               	retlw	6
   351  001E  3405               	retlw	5
   352  001F  3400               	retlw	0
   353  0020  3420               	retlw	32
   354  0021  3406               	retlw	6
   355  0022  3405               	retlw	5
   356  0023  3404               	retlw	4
   357  0024  3400               	retlw	0
   358  0025                     __end_of_ttable:	
   359  0025                     _monthDays:	
   360  0025  341F               	retlw	31
   361  0026  341D               	retlw	29
   362  0027  341F               	retlw	31
   363  0028  341E               	retlw	30
   364  0029  341F               	retlw	31
   365  002A  341E               	retlw	30
   366  002B  341F               	retlw	31
   367  002C  341F               	retlw	31
   368  002D  341E               	retlw	30
   369  002E  341F               	retlw	31
   370  002F  341E               	retlw	30
   371  0030  341F               	retlw	31
   372  0031                     __end_of_monthDays:	
   373  0008                     _PORTD	set	8
   374  0031                     _RB1	set	49
   375  0032                     _RB2	set	50
   376  0034                     _RB4	set	52
   377  0035                     _RB5	set	53
   378  0036                     _RB6	set	54
   379  0037                     _RB7	set	55
   380  0038                     _RC0	set	56
   381  0039                     _RC1	set	57
   382  003A                     _RC2	set	58
   383  0040                     _RD0	set	64
   384  0041                     _RD1	set	65
   385  0086                     _TRISBbits	set	134
   386  0088                     _TRISD	set	136
   387  0438                     _TRISC0	set	1080
   388  0439                     _TRISC1	set	1081
   389  043A                     _TRISC2	set	1082
   390  0440                     _TRISD0	set	1088
   391  0441                     _TRISD1	set	1089
   392  0031                     STR_3:	
   393  0031  3453               	retlw	83	;'S'
   394  0032  3465               	retlw	101	;'e'
   395  0033  3474               	retlw	116	;'t'
   396  0034  3420               	retlw	32	;' '
   397  0035  3453               	retlw	83	;'S'
   398  0036  3465               	retlw	101	;'e'
   399  0037  3463               	retlw	99	;'c'
   400  0038  346F               	retlw	111	;'o'
   401  0039  346E               	retlw	110	;'n'
   402  003A  3464               	retlw	100	;'d'
   403  003B  3473               	retlw	115	;'s'
   404  003C  3400               	retlw	0
   405  003D                     STR_2:	
   406  003D  3453               	retlw	83	;'S'
   407  003E  3465               	retlw	101	;'e'
   408  003F  3474               	retlw	116	;'t'
   409  0040  3420               	retlw	32	;' '
   410  0041  344D               	retlw	77	;'M'
   411  0042  3469               	retlw	105	;'i'
   412  0043  346E               	retlw	110	;'n'
   413  0044  3475               	retlw	117	;'u'
   414  0045  3474               	retlw	116	;'t'
   415  0046  3465               	retlw	101	;'e'
   416  0047  3473               	retlw	115	;'s'
   417  0048  3400               	retlw	0
   418  0049                     STR_7:	
   419  0049  3453               	retlw	83	;'S'
   420  004A  3465               	retlw	101	;'e'
   421  004B  3474               	retlw	116	;'t'
   422  004C  3420               	retlw	32	;' '
   423  004D  3444               	retlw	68	;'D'
   424  004E  3461               	retlw	97	;'a'
   425  004F  3479               	retlw	121	;'y'
   426  0050  3420               	retlw	32	;' '
   427  0051  3420               	retlw	32	;' '
   428  0052  3400               	retlw	0
   429  0053                     STR_6:	
   430  0053  3453               	retlw	83	;'S'
   431  0054  3465               	retlw	101	;'e'
   432  0055  3474               	retlw	116	;'t'
   433  0056  3420               	retlw	32	;' '
   434  0057  3444               	retlw	68	;'D'
   435  0058  3461               	retlw	97	;'a'
   436  0059  3474               	retlw	116	;'t'
   437  005A  3465               	retlw	101	;'e'
   438  005B  3420               	retlw	32	;' '
   439  005C  3400               	retlw	0
   440  005D                     STR_5:	
   441  005D  3453               	retlw	83	;'S'
   442  005E  3465               	retlw	101	;'e'
   443  005F  3474               	retlw	116	;'t'
   444  0060  3420               	retlw	32	;' '
   445  0061  344D               	retlw	77	;'M'
   446  0062  346F               	retlw	111	;'o'
   447  0063  346E               	retlw	110	;'n'
   448  0064  3474               	retlw	116	;'t'
   449  0065  3468               	retlw	104	;'h'
   450  0066  3400               	retlw	0
   451  0067                     STR_1:	
   452  0067  3453               	retlw	83	;'S'
   453  0068  3465               	retlw	101	;'e'
   454  0069  3474               	retlw	116	;'t'
   455  006A  3420               	retlw	32	;' '
   456  006B  3448               	retlw	72	;'H'
   457  006C  346F               	retlw	111	;'o'
   458  006D  3475               	retlw	117	;'u'
   459  006E  3472               	retlw	114	;'r'
   460  006F  3473               	retlw	115	;'s'
   461  0070  3400               	retlw	0
   462  0071                     STR_4:	
   463  0071  3453               	retlw	83	;'S'
   464  0072  3465               	retlw	101	;'e'
   465  0073  3474               	retlw	116	;'t'
   466  0074  3420               	retlw	32	;' '
   467  0075  3459               	retlw	89	;'Y'
   468  0076  3465               	retlw	101	;'e'
   469  0077  3461               	retlw	97	;'a'
   470  0078  3472               	retlw	114	;'r'
   471  0079  3400               	retlw	0
   472  007A                     STR_10:	
   473  007A  3457               	retlw	87	;'W'
   474  007B  3465               	retlw	101	;'e'
   475  007C  3464               	retlw	100	;'d'
   476  007D  3400               	retlw	0
   477  007E                     STR_9:	
   478  007E  3454               	retlw	84	;'T'
   479  007F  3475               	retlw	117	;'u'
   480  0080  3465               	retlw	101	;'e'
   481  0081  3400               	retlw	0
   482  0082                     STR_12:	
   483  0082  3446               	retlw	70	;'F'
   484  0083  3472               	retlw	114	;'r'
   485  0084  3469               	retlw	105	;'i'
   486  0085  3400               	retlw	0
   487  0086                     STR_8:	
   488  0086  344D               	retlw	77	;'M'
   489  0087  346F               	retlw	111	;'o'
   490  0088  346E               	retlw	110	;'n'
   491  0089  3400               	retlw	0
   492  008A                     STR_14:	
   493  008A  3453               	retlw	83	;'S'
   494  008B  3475               	retlw	117	;'u'
   495  008C  346E               	retlw	110	;'n'
   496  008D  3400               	retlw	0
   497  008E                     STR_13:	
   498  008E  3453               	retlw	83	;'S'
   499  008F  3461               	retlw	97	;'a'
   500  0090  3474               	retlw	116	;'t'
   501  0091  3400               	retlw	0
   502  0092                     STR_11:	
   503  0092  3454               	retlw	84	;'T'
   504  0093  3468               	retlw	104	;'h'
   505  0094  3475               	retlw	117	;'u'
   506  0095  3400               	retlw	0
   507                           
   508                           ; #config settings
   509  0000                     
   510                           	psect	cinit
   511  07ED                     start_initialization:	
   512  07ED                     __initialization:	
   513                           
   514                           ; Clear objects allocated to BANK0
   515  07ED  01CB               	clrf	__pbssBANK0& (0+127)
   516  07EE  01CC               	clrf	(__pbssBANK0+1)& (0+127)
   517  07EF  01CD               	clrf	(__pbssBANK0+2)& (0+127)
   518                           
   519                           ; Initialize objects allocated to BANK0
   520  07F0  1383               	bcf	3,7	;select IRP bank0
   521  07F1  304B               	movlw	low (__pdataBANK0+15)
   522  07F2  00FD               	movwf	btemp+-1
   523  07F3  300B               	movlw	high __pidataBANK0
   524  07F4  00FE               	movwf	btemp
   525  07F5  3057               	movlw	low __pidataBANK0
   526  07F6  00FF               	movwf	btemp+1
   527  07F7  303C               	movlw	low __pdataBANK0
   528  07F8  0084               	movwf	4
   529  07F9  120A  158A  238B   	fcall	init_ram0
   530  07FC                     end_of_initialization:	
   531                           ;End of C runtime variable initialization code
   532                           
   533  07FC                     __end_of__initialization:	
   534  07FC  0183               	clrf	3
   535  07FD  120A  118A  2899   	ljmp	_main	;jump to C main() function
   536                           
   537                           	psect	bssBANK0
   538  004B                     __pbssBANK0:	
   539  004B                     _bButton:	
   540  004B                     	ds	1
   541  004C                     _menuFunction:	
   542  004C                     	ds	1
   543  004D                     _state:	
   544  004D                     	ds	1
   545                           
   546                           	psect	dataBANK0
   547  003C                     __pdataBANK0:	
   548  003C                     _date:	
   549  003C                     	ds	2
   550  003E                     _day:	
   551  003E                     	ds	2
   552  0040                     _hour:	
   553  0040                     	ds	2
   554  0042                     _minute:	
   555  0042                     	ds	2
   556  0044                     _month:	
   557  0044                     	ds	2
   558  0046                     _seconds:	
   559  0046                     	ds	2
   560  0048                     _year:	
   561  0048                     	ds	2
   562  004A                     _last_hour:	
   563  004A                     	ds	1
   564                           
   565                           	psect	inittext
   566  0B87                     init_fetch0:	
   567                           ;	Called with low address in FSR and high address in W
   568                           
   569  0B87  087E               	movf	126,w
   570  0B88  008A               	movwf	10
   571  0B89  087F               	movf	127,w
   572  0B8A  0082               	movwf	2
   573  0B8B                     init_ram0:	
   574                           ;Called with:
   575                           ;	high address of idata address in btemp 
   576                           ;	low address of idata address in btemp+1 
   577                           ;	low address of data in FSR
   578                           ;	high address + 1 of data in btemp-1
   579                           
   580  0B8B  2387  120A  158A   	fcall	init_fetch0
   581  0B8E  0080               	movwf	0
   582  0B8F  0A84               	incf	4,f
   583  0B90  0804               	movf	4,w
   584  0B91  067D               	xorwf	125,w
   585  0B92  1903               	btfsc	3,2
   586  0B93  3400               	retlw	0
   587  0B94  0AFF               	incf	127,f
   588  0B95  1903               	btfsc	3,2
   589  0B96  0AFE               	incf	126,f
   590  0B97  2B8B               	goto	init_ram0
   591                           
   592                           	psect	cstackCOMMON
   593  0070                     __pcstackCOMMON:	
   594  0070                     ?_I2C_Start:	
   595  0070                     ??_I2C_Start:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_DS1307_Write:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_DS1307_Read:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_I2C_NoAck:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ??_I2C_NoAck:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_I2C_Stop:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ??_I2C_Stop:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_I2C_Write:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ??_I2C_Write:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_I2C_Clock:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ??_I2C_Clock:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_I2C_Read:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ??_I2C_Read:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_I2C_Ack:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ??_I2C_Ack:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_LCDBusyLoop:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ??_LCDBusyLoop:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_initLED:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_readClock:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_showClock:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_readInputs:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ??_readInputs:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_doMenu:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_showTime:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_showDate:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_sendLED:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_I2C_Init:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??_I2C_Init:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_LCDInit:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_LCDWriteString:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_main:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_DS1307_Init:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?___awdiv:	
   692                           ; 2 bytes @ 0x0
   693                           
   694  0070                     ?___awmod:	
   695                           ; 2 bytes @ 0x0
   696                           
   697  0070                     sendLED@c:	
   698                           ; 2 bytes @ 0x0
   699                           
   700  0070                     ___awdiv@divisor:	
   701                           ; 2 bytes @ 0x0
   702                           
   703  0070                     ___awmod@divisor:	
   704                           ; 2 bytes @ 0x0
   705                           
   706                           
   707                           ; 2 bytes @ 0x0
   708  0070                     	ds	2
   709  0072                     ??_sendLED:	
   710  0072                     I2C_Write@dat:	
   711                           ; 1 bytes @ 0x2
   712                           
   713  0072                     I2C_Read@i:	
   714                           ; 1 bytes @ 0x2
   715                           
   716  0072                     LCDBusyLoop@busy:	
   717                           ; 1 bytes @ 0x2
   718                           
   719  0072                     ___awdiv@dividend:	
   720                           ; 1 bytes @ 0x2
   721                           
   722  0072                     ___awmod@dividend:	
   723                           ; 2 bytes @ 0x2
   724                           
   725                           
   726                           ; 2 bytes @ 0x2
   727  0072                     	ds	1
   728  0073                     I2C_Write@i:	
   729  0073                     I2C_Read@dat:	
   730                           ; 1 bytes @ 0x3
   731                           
   732  0073                     LCDBusyLoop@temp:	
   733                           ; 1 bytes @ 0x3
   734                           
   735  0073                     readInputs@pinstate:	
   736                           ; 1 bytes @ 0x3
   737                           
   738                           
   739                           ; 1 bytes @ 0x3
   740  0073                     	ds	1
   741  0074                     ??_DS1307_Write:	
   742  0074                     ??_DS1307_Read:	
   743                           ; 1 bytes @ 0x4
   744                           
   745  0074                     ??___awdiv:	
   746                           ; 1 bytes @ 0x4
   747                           
   748  0074                     ??___awmod:	
   749                           ; 1 bytes @ 0x4
   750                           
   751  0074                     DS1307_Write@dat:	
   752                           ; 1 bytes @ 0x4
   753                           
   754  0074                     LCDBusyLoop@status:	
   755                           ; 1 bytes @ 0x4
   756                           
   757  0074                     sendLED@i:	
   758                           ; 1 bytes @ 0x4
   759                           
   760                           
   761                           ; 2 bytes @ 0x4
   762  0074                     	ds	1
   763  0075                     ??_DS1307_Init:	
   764  0075                     ?_DS1307_SetTime:	
   765                           ; 1 bytes @ 0x5
   766                           
   767  0075                     ?_DS1307_SetDate:	
   768                           ; 1 bytes @ 0x5
   769                           
   770  0075                     ?_DS1307_GetTime:	
   771                           ; 1 bytes @ 0x5
   772                           
   773  0075                     ?_DS1307_GetDate:	
   774                           ; 1 bytes @ 0x5
   775                           
   776  0075                     ?_LCDByte:	
   777                           ; 1 bytes @ 0x5
   778                           
   779  0075                     DS1307_SetTime@mm:	
   780                           ; 1 bytes @ 0x5
   781                           
   782  0075                     DS1307_SetDate@dd:	
   783                           ; 1 bytes @ 0x5
   784                           
   785  0075                     DS1307_GetTime@m_ptr:	
   786                           ; 1 bytes @ 0x5
   787                           
   788  0075                     DS1307_GetDate@d_ptr:	
   789                           ; 1 bytes @ 0x5
   790                           
   791  0075                     LCDByte@isdata:	
   792                           ; 1 bytes @ 0x5
   793                           
   794  0075                     ___awdiv@counter:	
   795                           ; 1 bytes @ 0x5
   796                           
   797  0075                     ___awmod@counter:	
   798                           ; 1 bytes @ 0x5
   799                           
   800                           
   801                           ; 1 bytes @ 0x5
   802  0075                     	ds	1
   803  0076                     ??_initLED:	
   804  0076                     ??_LCDByte:	
   805                           ; 1 bytes @ 0x6
   806                           
   807  0076                     DS1307_Init@s:	
   808                           ; 1 bytes @ 0x6
   809                           
   810  0076                     DS1307_SetTime@ss:	
   811                           ; 1 bytes @ 0x6
   812                           
   813  0076                     DS1307_SetDate@mm:	
   814                           ; 1 bytes @ 0x6
   815                           
   816  0076                     DS1307_GetTime@s_ptr:	
   817                           ; 1 bytes @ 0x6
   818                           
   819  0076                     DS1307_GetDate@m_ptr:	
   820                           ; 1 bytes @ 0x6
   821                           
   822  0076                     ___awdiv@sign:	
   823                           ; 1 bytes @ 0x6
   824                           
   825  0076                     ___awmod@sign:	
   826                           ; 1 bytes @ 0x6
   827                           
   828                           
   829                           ; 1 bytes @ 0x6
   830  0076                     	ds	1
   831  0077                     ??_DS1307_SetTime:	
   832  0077                     ??_DS1307_GetTime:	
   833                           ; 1 bytes @ 0x7
   834                           
   835  0077                     DS1307_SetTime@hh:	
   836                           ; 1 bytes @ 0x7
   837                           
   838  0077                     DS1307_SetDate@yy:	
   839                           ; 1 bytes @ 0x7
   840                           
   841  0077                     DS1307_GetDate@y_ptr:	
   842                           ; 1 bytes @ 0x7
   843                           
   844  0077                     ___awdiv@quotient:	
   845                           ; 1 bytes @ 0x7
   846                           
   847                           
   848                           ; 2 bytes @ 0x7
   849  0077                     	ds	1
   850  0078                     ??_DS1307_SetDate:	
   851  0078                     ??_DS1307_GetDate:	
   852                           ; 1 bytes @ 0x8
   853                           
   854  0078                     DS1307_SetDate@nn:	
   855                           ; 1 bytes @ 0x8
   856                           
   857  0078                     DS1307_GetTime@h_ptr:	
   858                           ; 1 bytes @ 0x8
   859                           
   860  0078                     LCDByte@hn:	
   861                           ; 1 bytes @ 0x8
   862                           
   863                           
   864                           ; 1 bytes @ 0x8
   865  0078                     	ds	1
   866  0079                     ?___wmul:	
   867  0079                     DS1307_GetDate@n_ptr:	
   868                           ; 2 bytes @ 0x9
   869                           
   870  0079                     LCDByte@ln:	
   871                           ; 1 bytes @ 0x9
   872                           
   873  0079                     ___wmul@multiplier:	
   874                           ; 1 bytes @ 0x9
   875                           
   876                           
   877                           ; 2 bytes @ 0x9
   878  0079                     	ds	1
   879  007A                     LCDByte@c:	
   880                           
   881                           ; 1 bytes @ 0xA
   882  007A                     	ds	1
   883  007B                     LCDByte@temp:	
   884  007B                     ___wmul@multiplicand:	
   885                           ; 1 bytes @ 0xB
   886                           
   887                           
   888                           ; 2 bytes @ 0xB
   889  007B                     	ds	1
   890  007C                     ??_LCDInit:	
   891  007C                     ??_LCDWriteString:	
   892                           ; 1 bytes @ 0xC
   893                           
   894  007C                     ?_LCDWriteInt:	
   895                           ; 1 bytes @ 0xC
   896                           
   897  007C                     ?_LCDGotoXY:	
   898                           ; 1 bytes @ 0xC
   899                           
   900  007C                     LCDWriteInt@field_length:	
   901                           ; 1 bytes @ 0xC
   902                           
   903  007C                     LCDGotoXY@y:	
   904                           ; 1 bytes @ 0xC
   905                           
   906                           
   907                           ; 1 bytes @ 0xC
   908  007C                     	ds	1
   909  007D                     ??_showTime:	
   910  007D                     ??_showDate:	
   911                           ; 1 bytes @ 0xD
   912                           
   913  007D                     ??_LCDGotoXY:	
   914                           ; 1 bytes @ 0xD
   915                           
   916  007D                     ??___wmul:	
   917                           ; 1 bytes @ 0xD
   918                           
   919                           
   920                           ; 1 bytes @ 0xD
   921  007D                     	ds	1
   922  007E                     ??_showClock:	
   923                           
   924                           	psect	cstackBANK0
   925  0020                     __pcstackBANK0:	
   926                           ; 1 bytes @ 0xE
   927                           
   928  0020                     ??_LCDWriteInt:	
   929  0020                     LCDInit@style:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0020                     LCDWriteString@cc:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0020                     LCDGotoXY@x:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0020                     ___wmul@product:	
   939                           ; 1 bytes @ 0x0
   940                           
   941                           
   942                           ; 2 bytes @ 0x0
   943  0020                     	ds	1
   944  0021                     LCDWriteString@msg:	
   945                           
   946                           ; 1 bytes @ 0x1
   947  0021                     	ds	1
   948  0022                     ??_readClock:	
   949                           
   950                           ; 1 bytes @ 0x2
   951  0022                     	ds	1
   952  0023                     LCDWriteInt@c:	
   953                           
   954                           ; 2 bytes @ 0x3
   955  0023                     	ds	2
   956  0025                     readClock@n:	
   957  0025                     LCDWriteInt@d:	
   958                           ; 1 bytes @ 0x5
   959                           
   960                           
   961                           ; 2 bytes @ 0x5
   962  0025                     	ds	1
   963  0026                     readClock@a:	
   964                           
   965                           ; 1 bytes @ 0x6
   966  0026                     	ds	1
   967  0027                     LCDWriteInt@val:	
   968  0027                     readClock@b:	
   969                           ; 1 bytes @ 0x7
   970                           
   971                           
   972                           ; 1 bytes @ 0x7
   973  0027                     	ds	1
   974  0028                     ??_doMenu:	
   975  0028                     readClock@c:	
   976                           ; 1 bytes @ 0x8
   977                           
   978                           
   979                           ; 1 bytes @ 0x8
   980  0028                     	ds	3
   981  002B                     doMenu@h:	
   982                           
   983                           ; 2 bytes @ 0xB
   984  002B                     	ds	2
   985  002D                     doMenu@m:	
   986                           
   987                           ; 2 bytes @ 0xD
   988  002D                     	ds	2
   989  002F                     doMenu@s:	
   990                           
   991                           ; 2 bytes @ 0xF
   992  002F                     	ds	2
   993  0031                     doMenu@n:	
   994                           
   995                           ; 2 bytes @ 0x11
   996  0031                     	ds	2
   997  0033                     doMenu@d:	
   998                           
   999                           ; 2 bytes @ 0x13
  1000  0033                     	ds	2
  1001  0035                     doMenu@m_251:	
  1002                           
  1003                           ; 2 bytes @ 0x15
  1004  0035                     	ds	2
  1005  0037                     doMenu@y:	
  1006                           
  1007                           ; 2 bytes @ 0x17
  1008  0037                     	ds	2
  1009  0039                     ??_main:	
  1010                           
  1011                           ; 1 bytes @ 0x19
  1012  0039                     	ds	3
  1013                           
  1014                           	psect	maintext
  1015  0099                     __pmaintext:	
  1016 ;;
  1017 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1018 ;;
  1019 ;; *************** function _main *****************
  1020 ;; Defined at:
  1021 ;;		line 45 in file "LCDTime.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : B00/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0
  1037 ;;      Temps:          0       3       0       0       0
  1038 ;;      Totals:         0       3       0       0       0
  1039 ;;Total ram usage:        3 bytes
  1040 ;; Hardware stack levels required when called:    5
  1041 ;; This function calls:
  1042 ;;		_DS1307_Init
  1043 ;;		_I2C_Init
  1044 ;;		_LCDByte
  1045 ;;		_LCDInit
  1046 ;;		_doMenu
  1047 ;;		_initLED
  1048 ;;		_readClock
  1049 ;;		_readInputs
  1050 ;;		_showClock
  1051 ;; This function is called by:
  1052 ;;		Startup code after reset
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _main
  1058  0099                     _main:	
  1059                           
  1060                           ;LCDTime.c: 47: I2C_Init() ;
  1061                           
  1062                           ;incstack = 0
  1063                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1064  0099  120A  158A  232A  120A  118A  	fcall	_I2C_Init
  1065                           
  1066                           ;LCDTime.c: 48: LCDInit(0B00000000);
  1067  009E  3000               	movlw	0
  1068  009F  120A  158A  251E  120A  118A  	fcall	_LCDInit
  1069                           
  1070                           ;LCDTime.c: 49: DS1307_Init() ;
  1071  00A4  120A  158A  25A4  120A  118A  	fcall	_DS1307_Init
  1072                           
  1073                           ;LCDTime.c: 51: (LCDByte(0b00000001,0));
  1074  00A9  01F5               	clrf	LCDByte@isdata
  1075  00AA  3001               	movlw	1
  1076  00AB  120A  158A  25F4  120A  118A  	fcall	_LCDByte
  1077                           
  1078                           ;LCDTime.c: 53: initLED() ;
  1079  00B0  120A  158A  23B0  120A  118A  	fcall	_initLED
  1080  00B5  28BB               	goto	l2469
  1081  00B6                     l2477:	
  1082                           
  1083                           ;LCDTime.c: 64: doMenu();
  1084  00B6  120A  118A  236F  120A  118A  	fcall	_doMenu
  1085  00BB                     l2469:	
  1086                           ;LCDTime.c: 55: while(1)
  1087                           
  1088                           
  1089                           ;LCDTime.c: 56: {
  1090                           ;LCDTime.c: 57: readClock();
  1091  00BB  120A  118A  2249  120A  118A  	fcall	_readClock
  1092                           
  1093                           ;LCDTime.c: 59: showClock() ;
  1094  00C0  120A  158A  2398  120A  118A  	fcall	_showClock
  1095                           
  1096                           ;LCDTime.c: 61: readInputs() ;
  1097  00C5  120A  158A  24BC  120A  118A  	fcall	_readInputs
  1098                           
  1099                           ;LCDTime.c: 63: if (bButton)
  1100  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1101  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1102  00CC  084B               	movf	_bButton,w
  1103  00CD  1D03               	btfss	3,2
  1104  00CE  28B6               	goto	l2477
  1105                           
  1106                           ;LCDTime.c: 65: else
  1107                           ;LCDTime.c: 66: {
  1108                           ;LCDTime.c: 67: initLED() ;
  1109  00CF  120A  158A  23B0  120A  118A  	fcall	_initLED
  1110                           
  1111                           ;LCDTime.c: 68: _delay((unsigned long)((750)*(4000000/4000.0))) ;
  1112  00D4  3004               	movlw	4
  1113  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1114  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1115  00D7  00BB               	movwf	??_main+2
  1116  00D8  30CF               	movlw	207
  1117  00D9  00BA               	movwf	??_main+1
  1118  00DA  3003               	movlw	3
  1119  00DB  00B9               	movwf	??_main
  1120  00DC                     u2317:	
  1121  00DC  0BB9               	decfsz	??_main,f
  1122  00DD  28DC               	goto	u2317
  1123  00DE  0BBA               	decfsz	??_main+1,f
  1124  00DF  28DC               	goto	u2317
  1125  00E0  0BBB               	decfsz	??_main+2,f
  1126  00E1  28DC               	goto	u2317
  1127  00E2  28E3               	nop2
  1128  00E3  28BB               	goto	l2469
  1129  00E4                     __end_of_main:	
  1130                           
  1131                           	psect	text1
  1132  0B98                     __ptext1:	
  1133 ;; *************** function _showClock *****************
  1134 ;; Defined at:
  1135 ;;		line 381 in file "LCDTime.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0
  1152 ;;      Totals:         0       0       0       0       0
  1153 ;;Total ram usage:        0 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:    4
  1156 ;; This function calls:
  1157 ;;		_LCDGotoXY
  1158 ;;		_showDate
  1159 ;;		_showTime
  1160 ;; This function is called by:
  1161 ;;		_main
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           
  1166                           ;psect for function _showClock
  1167  0B98                     _showClock:	
  1168                           
  1169                           ;LCDTime.c: 383: LCDGotoXY(0,0) ;
  1170                           
  1171                           ;incstack = 0
  1172                           ; Regs used in _showClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1173  0B98  01FC               	clrf	LCDGotoXY@y
  1174  0B99  3000               	movlw	0
  1175  0B9A  120A  158A  23EF  120A  158A  	fcall	_LCDGotoXY
  1176                           
  1177                           ;LCDTime.c: 384: showTime() ;
  1178  0B9F  120A  158A  24EB  120A  158A  	fcall	_showTime
  1179                           
  1180                           ;LCDTime.c: 386: LCDGotoXY(0,1) ;
  1181  0BA4  01FC               	clrf	LCDGotoXY@y
  1182  0BA5  0AFC               	incf	LCDGotoXY@y,f
  1183  0BA6  3000               	movlw	0
  1184  0BA7  120A  158A  23EF  120A  158A  	fcall	_LCDGotoXY
  1185                           
  1186                           ;LCDTime.c: 387: showDate() ;
  1187  0BAC  120A  118A  21B2   	fcall	_showDate
  1188  0BAF  0008               	return
  1189  0BB0                     __end_of_showClock:	
  1190                           
  1191                           	psect	text2
  1192  0249                     __ptext2:	
  1193 ;; *************** function _readClock *****************
  1194 ;; Defined at:
  1195 ;;		line 358 in file "LCDTime.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  c               1    8[BANK0 ] unsigned char 
  1200 ;;  b               1    7[BANK0 ] unsigned char 
  1201 ;;  a               1    6[BANK0 ] unsigned char 
  1202 ;;  n               1    5[BANK0 ] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       4       0       0       0
  1214 ;;      Temps:          0       3       0       0       0
  1215 ;;      Totals:         0       7       0       0       0
  1216 ;;Total ram usage:        7 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    4
  1219 ;; This function calls:
  1220 ;;		_DS1307_GetDate
  1221 ;;		_DS1307_GetTime
  1222 ;;		___awdiv
  1223 ;;		___wmul
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _readClock
  1231  0249                     _readClock:	
  1232                           
  1233                           ;LCDTime.c: 360: unsigned char a,b,c,n ;
  1234                           ;LCDTime.c: 362: DS1307_GetTime(&a,&b,&c);
  1235                           
  1236                           ;incstack = 0
  1237                           ; Regs used in _readClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1238  0249  3027               	movlw	(low (readClock@b| 0))& (0+255)
  1239  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1240  024B  1303               	bcf	3,6	;RP1=0, select bank0
  1241  024C  00A2               	movwf	??_readClock
  1242  024D  0822               	movf	??_readClock,w
  1243  024E  00F5               	movwf	DS1307_GetTime@m_ptr
  1244  024F  3028               	movlw	(low (readClock@c| 0))& (0+255)
  1245  0250  00A3               	movwf	??_readClock+1
  1246  0251  0823               	movf	??_readClock+1,w
  1247  0252  00F6               	movwf	DS1307_GetTime@s_ptr
  1248  0253  3026               	movlw	(low (readClock@a| 0))& (0+255)
  1249  0254  120A  158A  2694  120A  118A  	fcall	_DS1307_GetTime
  1250                           
  1251                           ;LCDTime.c: 364: hour = (a % 16) + ((a / 16 ) * 10) ;
  1252  0259  3010               	movlw	16
  1253  025A  00F0               	movwf	___awdiv@divisor
  1254  025B  3000               	movlw	0
  1255  025C  00F1               	movwf	___awdiv@divisor+1
  1256  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1257  025E  1303               	bcf	3,6	;RP1=0, select bank0
  1258  025F  0826               	movf	readClock@a,w
  1259  0260  00A2               	movwf	??_readClock
  1260  0261  01A3               	clrf	??_readClock+1
  1261  0262  0822               	movf	??_readClock,w
  1262  0263  00F2               	movwf	___awdiv@dividend
  1263  0264  0823               	movf	??_readClock+1,w
  1264  0265  00F3               	movwf	___awdiv@dividend+1
  1265  0266  120A  158A  26EA  120A  118A  	fcall	___awdiv
  1266  026B  0871               	movf	?___awdiv+1,w
  1267  026C  00FA               	movwf	___wmul@multiplier+1
  1268  026D  0870               	movf	?___awdiv,w
  1269  026E  00F9               	movwf	___wmul@multiplier
  1270  026F  300A               	movlw	10
  1271  0270  00FB               	movwf	___wmul@multiplicand
  1272  0271  3000               	movlw	0
  1273  0272  00FC               	movwf	___wmul@multiplicand+1
  1274  0273  120A  158A  2415  120A  118A  	fcall	___wmul
  1275  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1277  027A  0826               	movf	readClock@a,w
  1278  027B  390F               	andlw	15
  1279  027C  0779               	addwf	?___wmul,w
  1280  027D  00C0               	movwf	_hour
  1281  027E  087A               	movf	?___wmul+1,w
  1282  027F  1803               	skipnc
  1283  0280  0A7A               	incf	?___wmul+1,w
  1284  0281  00C1               	movwf	_hour+1
  1285                           
  1286                           ;LCDTime.c: 365: minute = (b % 16) + ((b / 16 ) * 10) ;
  1287  0282  3010               	movlw	16
  1288  0283  00F0               	movwf	___awdiv@divisor
  1289  0284  3000               	movlw	0
  1290  0285  00F1               	movwf	___awdiv@divisor+1
  1291  0286  0827               	movf	readClock@b,w
  1292  0287  00A2               	movwf	??_readClock
  1293  0288  01A3               	clrf	??_readClock+1
  1294  0289  0822               	movf	??_readClock,w
  1295  028A  00F2               	movwf	___awdiv@dividend
  1296  028B  0823               	movf	??_readClock+1,w
  1297  028C  00F3               	movwf	___awdiv@dividend+1
  1298  028D  120A  158A  26EA  120A  118A  	fcall	___awdiv
  1299  0292  0871               	movf	?___awdiv+1,w
  1300  0293  00FA               	movwf	___wmul@multiplier+1
  1301  0294  0870               	movf	?___awdiv,w
  1302  0295  00F9               	movwf	___wmul@multiplier
  1303  0296  300A               	movlw	10
  1304  0297  00FB               	movwf	___wmul@multiplicand
  1305  0298  3000               	movlw	0
  1306  0299  00FC               	movwf	___wmul@multiplicand+1
  1307  029A  120A  158A  2415  120A  118A  	fcall	___wmul
  1308  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1309  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1310  02A1  0827               	movf	readClock@b,w
  1311  02A2  390F               	andlw	15
  1312  02A3  0779               	addwf	?___wmul,w
  1313  02A4  00C2               	movwf	_minute
  1314  02A5  087A               	movf	?___wmul+1,w
  1315  02A6  1803               	skipnc
  1316  02A7  0A7A               	incf	?___wmul+1,w
  1317  02A8  00C3               	movwf	_minute+1
  1318                           
  1319                           ;LCDTime.c: 366: seconds = (c % 16) + ((c / 16 ) * 10) ;
  1320  02A9  3010               	movlw	16
  1321  02AA  00F0               	movwf	___awdiv@divisor
  1322  02AB  3000               	movlw	0
  1323  02AC  00F1               	movwf	___awdiv@divisor+1
  1324  02AD  0828               	movf	readClock@c,w
  1325  02AE  00A2               	movwf	??_readClock
  1326  02AF  01A3               	clrf	??_readClock+1
  1327  02B0  0822               	movf	??_readClock,w
  1328  02B1  00F2               	movwf	___awdiv@dividend
  1329  02B2  0823               	movf	??_readClock+1,w
  1330  02B3  00F3               	movwf	___awdiv@dividend+1
  1331  02B4  120A  158A  26EA  120A  118A  	fcall	___awdiv
  1332  02B9  0871               	movf	?___awdiv+1,w
  1333  02BA  00FA               	movwf	___wmul@multiplier+1
  1334  02BB  0870               	movf	?___awdiv,w
  1335  02BC  00F9               	movwf	___wmul@multiplier
  1336  02BD  300A               	movlw	10
  1337  02BE  00FB               	movwf	___wmul@multiplicand
  1338  02BF  3000               	movlw	0
  1339  02C0  00FC               	movwf	___wmul@multiplicand+1
  1340  02C1  120A  158A  2415  120A  118A  	fcall	___wmul
  1341  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1342  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1343  02C8  0828               	movf	readClock@c,w
  1344  02C9  390F               	andlw	15
  1345  02CA  0779               	addwf	?___wmul,w
  1346  02CB  00C6               	movwf	_seconds
  1347  02CC  087A               	movf	?___wmul+1,w
  1348  02CD  1803               	skipnc
  1349  02CE  0A7A               	incf	?___wmul+1,w
  1350  02CF  00C7               	movwf	_seconds+1
  1351                           
  1352                           ;LCDTime.c: 368: if (hour != last_hour)
  1353  02D0  084A               	movf	_last_hour,w
  1354  02D1  00A2               	movwf	??_readClock
  1355  02D2  01A3               	clrf	??_readClock+1
  1356  02D3  0841               	movf	_hour+1,w
  1357  02D4  0623               	xorwf	??_readClock+1,w
  1358  02D5  1D03               	skipz
  1359  02D6  2AD9               	goto	u1685
  1360  02D7  0840               	movf	_hour,w
  1361  02D8  0622               	xorwf	??_readClock,w
  1362  02D9                     u1685:	
  1363  02D9  1903               	skipnz
  1364  02DA  0008               	return
  1365                           
  1366                           ;LCDTime.c: 369: {
  1367                           ;LCDTime.c: 370: last_hour = hour ;
  1368  02DB  0840               	movf	_hour,w
  1369  02DC  00A2               	movwf	??_readClock
  1370  02DD  0822               	movf	??_readClock,w
  1371  02DE  00CA               	movwf	_last_hour
  1372                           
  1373                           ;LCDTime.c: 372: DS1307_GetDate(&n,&a,&b,&c) ;
  1374  02DF  3026               	movlw	(low (readClock@a| 0))& (0+255)
  1375  02E0  00A2               	movwf	??_readClock
  1376  02E1  0822               	movf	??_readClock,w
  1377  02E2  00F5               	movwf	DS1307_GetDate@d_ptr
  1378  02E3  3027               	movlw	(low (readClock@b| 0))& (0+255)
  1379  02E4  00A3               	movwf	??_readClock+1
  1380  02E5  0823               	movf	??_readClock+1,w
  1381  02E6  00F6               	movwf	DS1307_GetDate@m_ptr
  1382  02E7  3028               	movlw	(low (readClock@c| 0))& (0+255)
  1383  02E8  00A4               	movwf	??_readClock+2
  1384  02E9  0824               	movf	??_readClock+2,w
  1385  02EA  00F7               	movwf	DS1307_GetDate@y_ptr
  1386  02EB  3025               	movlw	(low (readClock@n| 0))& (0+255)
  1387  02EC  120A  118A  20E4  120A  118A  	fcall	_DS1307_GetDate
  1388                           
  1389                           ;LCDTime.c: 374: day = (n % 16) ;
  1390  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1391  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1392  02F3  0825               	movf	readClock@n,w
  1393  02F4  390F               	andlw	15
  1394  02F5  00A2               	movwf	??_readClock
  1395  02F6  01A3               	clrf	??_readClock+1
  1396  02F7  0822               	movf	??_readClock,w
  1397  02F8  00BE               	movwf	_day
  1398  02F9  0823               	movf	??_readClock+1,w
  1399  02FA  00BF               	movwf	_day+1
  1400                           
  1401                           ;LCDTime.c: 375: date = (a % 16) + ((a / 16 ) * 10) ;
  1402  02FB  3010               	movlw	16
  1403  02FC  00F0               	movwf	___awdiv@divisor
  1404  02FD  3000               	movlw	0
  1405  02FE  00F1               	movwf	___awdiv@divisor+1
  1406  02FF  0826               	movf	readClock@a,w
  1407  0300  00A2               	movwf	??_readClock
  1408  0301  01A3               	clrf	??_readClock+1
  1409  0302  0822               	movf	??_readClock,w
  1410  0303  00F2               	movwf	___awdiv@dividend
  1411  0304  0823               	movf	??_readClock+1,w
  1412  0305  00F3               	movwf	___awdiv@dividend+1
  1413  0306  120A  158A  26EA  120A  118A  	fcall	___awdiv
  1414  030B  0871               	movf	?___awdiv+1,w
  1415  030C  00FA               	movwf	___wmul@multiplier+1
  1416  030D  0870               	movf	?___awdiv,w
  1417  030E  00F9               	movwf	___wmul@multiplier
  1418  030F  300A               	movlw	10
  1419  0310  00FB               	movwf	___wmul@multiplicand
  1420  0311  3000               	movlw	0
  1421  0312  00FC               	movwf	___wmul@multiplicand+1
  1422  0313  120A  158A  2415  120A  118A  	fcall	___wmul
  1423  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1425  031A  0826               	movf	readClock@a,w
  1426  031B  390F               	andlw	15
  1427  031C  0779               	addwf	?___wmul,w
  1428  031D  00BC               	movwf	_date
  1429  031E  087A               	movf	?___wmul+1,w
  1430  031F  1803               	skipnc
  1431  0320  0A7A               	incf	?___wmul+1,w
  1432  0321  00BD               	movwf	_date+1
  1433                           
  1434                           ;LCDTime.c: 376: month = (b % 16) + ((b / 16 ) * 10) ;
  1435  0322  3010               	movlw	16
  1436  0323  00F0               	movwf	___awdiv@divisor
  1437  0324  3000               	movlw	0
  1438  0325  00F1               	movwf	___awdiv@divisor+1
  1439  0326  0827               	movf	readClock@b,w
  1440  0327  00A2               	movwf	??_readClock
  1441  0328  01A3               	clrf	??_readClock+1
  1442  0329  0822               	movf	??_readClock,w
  1443  032A  00F2               	movwf	___awdiv@dividend
  1444  032B  0823               	movf	??_readClock+1,w
  1445  032C  00F3               	movwf	___awdiv@dividend+1
  1446  032D  120A  158A  26EA  120A  118A  	fcall	___awdiv
  1447  0332  0871               	movf	?___awdiv+1,w
  1448  0333  00FA               	movwf	___wmul@multiplier+1
  1449  0334  0870               	movf	?___awdiv,w
  1450  0335  00F9               	movwf	___wmul@multiplier
  1451  0336  300A               	movlw	10
  1452  0337  00FB               	movwf	___wmul@multiplicand
  1453  0338  3000               	movlw	0
  1454  0339  00FC               	movwf	___wmul@multiplicand+1
  1455  033A  120A  158A  2415  120A  118A  	fcall	___wmul
  1456  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0341  0827               	movf	readClock@b,w
  1459  0342  390F               	andlw	15
  1460  0343  0779               	addwf	?___wmul,w
  1461  0344  00C4               	movwf	_month
  1462  0345  087A               	movf	?___wmul+1,w
  1463  0346  1803               	skipnc
  1464  0347  0A7A               	incf	?___wmul+1,w
  1465  0348  00C5               	movwf	_month+1
  1466                           
  1467                           ;LCDTime.c: 377: year = (c % 16) + ((c / 16 ) * 10) ;
  1468  0349  3010               	movlw	16
  1469  034A  00F0               	movwf	___awdiv@divisor
  1470  034B  3000               	movlw	0
  1471  034C  00F1               	movwf	___awdiv@divisor+1
  1472  034D  0828               	movf	readClock@c,w
  1473  034E  00A2               	movwf	??_readClock
  1474  034F  01A3               	clrf	??_readClock+1
  1475  0350  0822               	movf	??_readClock,w
  1476  0351  00F2               	movwf	___awdiv@dividend
  1477  0352  0823               	movf	??_readClock+1,w
  1478  0353  00F3               	movwf	___awdiv@dividend+1
  1479  0354  120A  158A  26EA  120A  118A  	fcall	___awdiv
  1480  0359  0871               	movf	?___awdiv+1,w
  1481  035A  00FA               	movwf	___wmul@multiplier+1
  1482  035B  0870               	movf	?___awdiv,w
  1483  035C  00F9               	movwf	___wmul@multiplier
  1484  035D  300A               	movlw	10
  1485  035E  00FB               	movwf	___wmul@multiplicand
  1486  035F  3000               	movlw	0
  1487  0360  00FC               	movwf	___wmul@multiplicand+1
  1488  0361  120A  158A  2415   	fcall	___wmul
  1489  0364  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0365  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0366  0828               	movf	readClock@c,w
  1492  0367  390F               	andlw	15
  1493  0368  0779               	addwf	?___wmul,w
  1494  0369  00C8               	movwf	_year
  1495  036A  087A               	movf	?___wmul+1,w
  1496  036B  1803               	skipnc
  1497  036C  0A7A               	incf	?___wmul+1,w
  1498  036D  00C9               	movwf	_year+1
  1499  036E  0008               	return
  1500  036F                     __end_of_readClock:	
  1501                           
  1502                           	psect	text3
  1503  0C15                     __ptext3:	
  1504 ;; *************** function ___wmul *****************
  1505 ;; Defined at:
  1506 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  multiplier      2    9[COMMON] unsigned int 
  1509 ;;  multiplicand    2   11[COMMON] unsigned int 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  product         2    0[BANK0 ] unsigned int 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  2    9[COMMON] unsigned int 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1521 ;;      Params:         4       0       0       0       0
  1522 ;;      Locals:         0       2       0       0       0
  1523 ;;      Temps:          0       0       0       0       0
  1524 ;;      Totals:         4       2       0       0       0
  1525 ;;Total ram usage:        6 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_readClock
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           
  1535                           ;psect for function ___wmul
  1536  0C15                     ___wmul:	
  1537                           
  1538                           ;incstack = 0
  1539                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1540  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  1541  0C16  1303               	bcf	3,6	;RP1=0, select bank0
  1542  0C17  01A0               	clrf	___wmul@product
  1543  0C18  01A1               	clrf	___wmul@product+1
  1544  0C19                     l2087:	
  1545  0C19  1C79               	btfss	___wmul@multiplier,0
  1546  0C1A  2C23               	goto	l451
  1547  0C1B  087B               	movf	___wmul@multiplicand,w
  1548  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0C1E  07A0               	addwf	___wmul@product,f
  1551  0C1F  1803               	skipnc
  1552  0C20  0AA1               	incf	___wmul@product+1,f
  1553  0C21  087C               	movf	___wmul@multiplicand+1,w
  1554  0C22  07A1               	addwf	___wmul@product+1,f
  1555  0C23                     l451:	
  1556  0C23  3001               	movlw	1
  1557  0C24                     u1645:	
  1558  0C24  1003               	clrc
  1559  0C25  0DFB               	rlf	___wmul@multiplicand,f
  1560  0C26  0DFC               	rlf	___wmul@multiplicand+1,f
  1561  0C27  3EFF               	addlw	-1
  1562  0C28  1D03               	skipz
  1563  0C29  2C24               	goto	u1645
  1564  0C2A  3001               	movlw	1
  1565  0C2B                     u1655:	
  1566  0C2B  1003               	clrc
  1567  0C2C  0CFA               	rrf	___wmul@multiplier+1,f
  1568  0C2D  0CF9               	rrf	___wmul@multiplier,f
  1569  0C2E  3EFF               	addlw	-1
  1570  0C2F  1D03               	skipz
  1571  0C30  2C2B               	goto	u1655
  1572  0C31  0879               	movf	___wmul@multiplier,w
  1573  0C32  047A               	iorwf	___wmul@multiplier+1,w
  1574  0C33  1D03               	btfss	3,2
  1575  0C34  2C19               	goto	l2087
  1576  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0C37  0821               	movf	___wmul@product+1,w
  1579  0C38  00FA               	movwf	?___wmul+1
  1580  0C39  0820               	movf	___wmul@product,w
  1581  0C3A  00F9               	movwf	?___wmul
  1582  0C3B  0008               	return
  1583  0C3C                     __end_of___wmul:	
  1584                           
  1585                           	psect	text4
  1586  0E94                     __ptext4:	
  1587 ;; *************** function _DS1307_GetTime *****************
  1588 ;; Defined at:
  1589 ;;		line 66 in file "DS1307.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  h_ptr           1    wreg     PTR unsigned char 
  1592 ;;		 -> readClock@a(1), 
  1593 ;;  m_ptr           1    5[COMMON] PTR unsigned char 
  1594 ;;		 -> readClock@b(1), 
  1595 ;;  s_ptr           1    6[COMMON] PTR unsigned char 
  1596 ;;		 -> readClock@c(1), 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  h_ptr           1    8[COMMON] PTR unsigned char 
  1599 ;;		 -> readClock@a(1), 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1609 ;;      Params:         2       0       0       0       0
  1610 ;;      Locals:         1       0       0       0       0
  1611 ;;      Temps:          1       0       0       0       0
  1612 ;;      Totals:         4       0       0       0       0
  1613 ;;Total ram usage:        4 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    3
  1616 ;; This function calls:
  1617 ;;		_DS1307_Read
  1618 ;;		_DS1307_Write
  1619 ;;		_I2C_Ack
  1620 ;;		_I2C_NoAck
  1621 ;;		_I2C_Start
  1622 ;;		_I2C_Stop
  1623 ;; This function is called by:
  1624 ;;		_readClock
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           
  1629                           ;psect for function _DS1307_GetTime
  1630  0E94                     _DS1307_GetTime:	
  1631                           
  1632                           ;incstack = 0
  1633                           ; Regs used in _DS1307_GetTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1634                           ;DS1307_GetTime@h_ptr stored from wreg
  1635  0E94  00F8               	movwf	DS1307_GetTime@h_ptr
  1636                           
  1637                           ;DS1307.c: 68: I2C_Start();
  1638  0E95  120A  158A  2376  120A  158A  	fcall	_I2C_Start
  1639                           
  1640                           ;DS1307.c: 69: DS1307_Write(0xD0);
  1641  0E9A  30D0               	movlw	208
  1642  0E9B  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  1643                           
  1644                           ;DS1307.c: 70: DS1307_Write(0x00);
  1645  0EA0  3000               	movlw	0
  1646  0EA1  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  1647                           
  1648                           ;DS1307.c: 71: I2C_Stop();
  1649  0EA6  120A  158A  2366  120A  158A  	fcall	_I2C_Stop
  1650                           
  1651                           ;DS1307.c: 72: I2C_Start();
  1652  0EAB  120A  158A  2376  120A  158A  	fcall	_I2C_Start
  1653                           
  1654                           ;DS1307.c: 73: DS1307_Write(0xD1);
  1655  0EB0  30D1               	movlw	209
  1656  0EB1  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  1657                           
  1658                           ;DS1307.c: 74: *s_ptr = DS1307_Read(); I2C_Ack();
  1659  0EB6  120A  158A  2326  120A  158A  	fcall	_DS1307_Read
  1660  0EBB  00F7               	movwf	??_DS1307_GetTime
  1661  0EBC  0876               	movf	DS1307_GetTime@s_ptr,w
  1662  0EBD  0084               	movwf	4
  1663  0EBE  0877               	movf	??_DS1307_GetTime,w
  1664  0EBF  1383               	bcf	3,7	;select IRP bank0
  1665  0EC0  0080               	movwf	0
  1666  0EC1  120A  158A  2342  120A  158A  	fcall	_I2C_Ack
  1667                           
  1668                           ;DS1307.c: 75: *m_ptr = DS1307_Read(); I2C_Ack();
  1669  0EC6  120A  158A  2326  120A  158A  	fcall	_DS1307_Read
  1670  0ECB  00F7               	movwf	??_DS1307_GetTime
  1671  0ECC  0875               	movf	DS1307_GetTime@m_ptr,w
  1672  0ECD  0084               	movwf	4
  1673  0ECE  0877               	movf	??_DS1307_GetTime,w
  1674  0ECF  1383               	bcf	3,7	;select IRP bank0
  1675  0ED0  0080               	movwf	0
  1676  0ED1  120A  158A  2342  120A  158A  	fcall	_I2C_Ack
  1677                           
  1678                           ;DS1307.c: 76: *h_ptr = DS1307_Read(); I2C_NoAck();
  1679  0ED6  120A  158A  2326  120A  158A  	fcall	_DS1307_Read
  1680  0EDB  00F7               	movwf	??_DS1307_GetTime
  1681  0EDC  0878               	movf	DS1307_GetTime@h_ptr,w
  1682  0EDD  0084               	movwf	4
  1683  0EDE  0877               	movf	??_DS1307_GetTime,w
  1684  0EDF  1383               	bcf	3,7	;select IRP bank0
  1685  0EE0  0080               	movwf	0
  1686  0EE1  120A  158A  2338  120A  158A  	fcall	_I2C_NoAck
  1687                           
  1688                           ;DS1307.c: 77: I2C_Stop();
  1689  0EE6  120A  158A  2366   	fcall	_I2C_Stop
  1690  0EE9  0008               	return
  1691  0EEA                     __end_of_DS1307_GetTime:	
  1692                           
  1693                           	psect	text5
  1694  00E4                     __ptext5:	
  1695 ;; *************** function _DS1307_GetDate *****************
  1696 ;; Defined at:
  1697 ;;		line 80 in file "DS1307.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  n_ptr           1    wreg     PTR unsigned char 
  1700 ;;		 -> readClock@n(1), 
  1701 ;;  d_ptr           1    5[COMMON] PTR unsigned char 
  1702 ;;		 -> readClock@a(1), 
  1703 ;;  m_ptr           1    6[COMMON] PTR unsigned char 
  1704 ;;		 -> readClock@b(1), 
  1705 ;;  y_ptr           1    7[COMMON] PTR unsigned char 
  1706 ;;		 -> readClock@c(1), 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  n_ptr           1    9[COMMON] PTR unsigned char 
  1709 ;;		 -> readClock@n(1), 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1719 ;;      Params:         3       0       0       0       0
  1720 ;;      Locals:         1       0       0       0       0
  1721 ;;      Temps:          1       0       0       0       0
  1722 ;;      Totals:         5       0       0       0       0
  1723 ;;Total ram usage:        5 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    3
  1726 ;; This function calls:
  1727 ;;		_DS1307_Read
  1728 ;;		_DS1307_Write
  1729 ;;		_I2C_Ack
  1730 ;;		_I2C_NoAck
  1731 ;;		_I2C_Start
  1732 ;;		_I2C_Stop
  1733 ;; This function is called by:
  1734 ;;		_readClock
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           
  1739                           ;psect for function _DS1307_GetDate
  1740  00E4                     _DS1307_GetDate:	
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _DS1307_GetDate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1744                           ;DS1307_GetDate@n_ptr stored from wreg
  1745  00E4  00F9               	movwf	DS1307_GetDate@n_ptr
  1746                           
  1747                           ;DS1307.c: 82: I2C_Start();
  1748  00E5  120A  158A  2376  120A  118A  	fcall	_I2C_Start
  1749                           
  1750                           ;DS1307.c: 83: DS1307_Write(0xD0);
  1751  00EA  30D0               	movlw	208
  1752  00EB  120A  158A  234C  120A  118A  	fcall	_DS1307_Write
  1753                           
  1754                           ;DS1307.c: 84: DS1307_Write(0x03);
  1755  00F0  3003               	movlw	3
  1756  00F1  120A  158A  234C  120A  118A  	fcall	_DS1307_Write
  1757                           
  1758                           ;DS1307.c: 85: I2C_Stop();
  1759  00F6  120A  158A  2366  120A  118A  	fcall	_I2C_Stop
  1760                           
  1761                           ;DS1307.c: 86: I2C_Start();
  1762  00FB  120A  158A  2376  120A  118A  	fcall	_I2C_Start
  1763                           
  1764                           ;DS1307.c: 87: DS1307_Write(0xD1);
  1765  0100  30D1               	movlw	209
  1766  0101  120A  158A  234C  120A  118A  	fcall	_DS1307_Write
  1767                           
  1768                           ;DS1307.c: 88: *n_ptr = DS1307_Read(); I2C_Ack();
  1769  0106  120A  158A  2326  120A  118A  	fcall	_DS1307_Read
  1770  010B  00F8               	movwf	??_DS1307_GetDate
  1771  010C  0879               	movf	DS1307_GetDate@n_ptr,w
  1772  010D  0084               	movwf	4
  1773  010E  0878               	movf	??_DS1307_GetDate,w
  1774  010F  1383               	bcf	3,7	;select IRP bank0
  1775  0110  0080               	movwf	0
  1776  0111  120A  158A  2342  120A  118A  	fcall	_I2C_Ack
  1777                           
  1778                           ;DS1307.c: 89: *d_ptr = DS1307_Read(); I2C_Ack();
  1779  0116  120A  158A  2326  120A  118A  	fcall	_DS1307_Read
  1780  011B  00F8               	movwf	??_DS1307_GetDate
  1781  011C  0875               	movf	DS1307_GetDate@d_ptr,w
  1782  011D  0084               	movwf	4
  1783  011E  0878               	movf	??_DS1307_GetDate,w
  1784  011F  1383               	bcf	3,7	;select IRP bank0
  1785  0120  0080               	movwf	0
  1786  0121  120A  158A  2342  120A  118A  	fcall	_I2C_Ack
  1787                           
  1788                           ;DS1307.c: 90: *m_ptr = DS1307_Read(); I2C_Ack();
  1789  0126  120A  158A  2326  120A  118A  	fcall	_DS1307_Read
  1790  012B  00F8               	movwf	??_DS1307_GetDate
  1791  012C  0876               	movf	DS1307_GetDate@m_ptr,w
  1792  012D  0084               	movwf	4
  1793  012E  0878               	movf	??_DS1307_GetDate,w
  1794  012F  1383               	bcf	3,7	;select IRP bank0
  1795  0130  0080               	movwf	0
  1796  0131  120A  158A  2342  120A  118A  	fcall	_I2C_Ack
  1797                           
  1798                           ;DS1307.c: 91: *y_ptr = DS1307_Read(); I2C_NoAck();
  1799  0136  120A  158A  2326  120A  118A  	fcall	_DS1307_Read
  1800  013B  00F8               	movwf	??_DS1307_GetDate
  1801  013C  0877               	movf	DS1307_GetDate@y_ptr,w
  1802  013D  0084               	movwf	4
  1803  013E  0878               	movf	??_DS1307_GetDate,w
  1804  013F  1383               	bcf	3,7	;select IRP bank0
  1805  0140  0080               	movwf	0
  1806  0141  120A  158A  2338  120A  118A  	fcall	_I2C_NoAck
  1807                           
  1808                           ;DS1307.c: 92: I2C_Stop();
  1809  0146  120A  158A  2366   	fcall	_I2C_Stop
  1810  0149  0008               	return
  1811  014A                     __end_of_DS1307_GetDate:	
  1812                           
  1813                           	psect	text6
  1814  0B42                     __ptext6:	
  1815 ;; *************** function _I2C_Ack *****************
  1816 ;; Defined at:
  1817 ;;		line 81 in file "i2c.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		status,2, status,0, pclath, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0
  1834 ;;      Totals:         0       0       0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    1
  1838 ;; This function calls:
  1839 ;;		_I2C_Clock
  1840 ;; This function is called by:
  1841 ;;		_DS1307_GetTime
  1842 ;;		_DS1307_GetDate
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function _I2C_Ack
  1848  0B42                     _I2C_Ack:	
  1849                           
  1850                           ;i2c.c: 83: RD0 = 0;
  1851                           
  1852                           ;incstack = 0
  1853                           ; Regs used in _I2C_Ack: [status,2+status,0+pclath+cstack]
  1854  0B42  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0B43  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0B44  1008               	bcf	8,0	;volatile
  1857                           
  1858                           ;i2c.c: 84: I2C_Clock();
  1859  0B45  120A  158A  232F   	fcall	_I2C_Clock
  1860                           
  1861                           ;i2c.c: 85: RD0 = 1;
  1862  0B48  1283               	bcf	3,5	;RP0=0, select bank0
  1863  0B49  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0B4A  1408               	bsf	8,0	;volatile
  1865  0B4B  0008               	return
  1866  0B4C                     __end_of_I2C_Ack:	
  1867                           
  1868                           	psect	text7
  1869  0BB0                     __ptext7:	
  1870 ;; *************** function _initLED *****************
  1871 ;; Defined at:
  1872 ;;		line 422 in file "LCDTime.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1886 ;;      Params:         0       0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0
  1889 ;;      Totals:         0       0       0       0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    1
  1893 ;; This function calls:
  1894 ;;		_sendLED
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _initLED
  1902  0BB0                     _initLED:	
  1903                           
  1904                           ;LCDTime.c: 424: TRISC0 = 0 ;
  1905                           
  1906                           ;incstack = 0
  1907                           ; Regs used in _initLED: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1908  0BB0  1683               	bsf	3,5	;RP0=1, select bank1
  1909  0BB1  1303               	bcf	3,6	;RP1=0, select bank1
  1910  0BB2  1007               	bcf	7,0	;volatile
  1911                           
  1912                           ;LCDTime.c: 425: TRISC1 = 0 ;
  1913  0BB3  1087               	bcf	7,1	;volatile
  1914                           
  1915                           ;LCDTime.c: 426: TRISC2 = 0 ;
  1916  0BB4  1107               	bcf	7,2	;volatile
  1917                           
  1918                           ;LCDTime.c: 428: RC1 = 1 ;
  1919  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  1920  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  1921  0BB7  1487               	bsf	7,1	;volatile
  1922                           
  1923                           ;LCDTime.c: 430: sendLED(0x0C01) ;
  1924  0BB8  3001               	movlw	1
  1925  0BB9  00F0               	movwf	sendLED@c
  1926  0BBA  300C               	movlw	12
  1927  0BBB  00F1               	movwf	sendLED@c+1
  1928  0BBC  120A  158A  27A0  120A  158A  	fcall	_sendLED
  1929                           
  1930                           ;LCDTime.c: 432: sendLED(0x0F01) ;
  1931  0BC1  3001               	movlw	1
  1932  0BC2  00F0               	movwf	sendLED@c
  1933  0BC3  300F               	movlw	15
  1934  0BC4  00F1               	movwf	sendLED@c+1
  1935  0BC5  120A  158A  27A0   	fcall	_sendLED
  1936  0BC8  0008               	return
  1937  0BC9                     __end_of_initLED:	
  1938                           
  1939                           	psect	text8
  1940  0FA0                     __ptext8:	
  1941 ;; *************** function _sendLED *****************
  1942 ;; Defined at:
  1943 ;;		line 436 in file "LCDTime.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  c               2    0[COMMON] unsigned int 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  i               2    4[COMMON] int 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, btemp+1
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1957 ;;      Params:         2       0       0       0       0
  1958 ;;      Locals:         2       0       0       0       0
  1959 ;;      Temps:          2       0       0       0       0
  1960 ;;      Totals:         6       0       0       0       0
  1961 ;;Total ram usage:        6 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_initLED
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _sendLED
  1972  0FA0                     _sendLED:	
  1973                           
  1974                           ;LCDTime.c: 438: int i ;
  1975                           ;LCDTime.c: 440: RC1 = 0 ;
  1976                           
  1977                           ;incstack = 0
  1978                           ; Regs used in _sendLED: [wreg+status,2+btemp+1]
  1979  0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  1981  0FA2  1087               	bcf	7,1	;volatile
  1982                           
  1983                           ;LCDTime.c: 441: _delay((unsigned long)((4)*(4000000/4000.0)));
  1984  0FA3  3006               	movlw	6
  1985  0FA4  00F3               	movwf	??_sendLED+1
  1986  0FA5  3030               	movlw	48
  1987  0FA6  00F2               	movwf	??_sendLED
  1988  0FA7                     u2327:	
  1989  0FA7  0BF2               	decfsz	??_sendLED,f
  1990  0FA8  2FA7               	goto	u2327
  1991  0FA9  0BF3               	decfsz	??_sendLED+1,f
  1992  0FAA  2FA7               	goto	u2327
  1993  0FAB  0000               	nop
  1994                           
  1995                           ;LCDTime.c: 443: for (i=0;i<16;i++)
  1996  0FAC  01F4               	clrf	sendLED@i
  1997  0FAD  01F5               	clrf	sendLED@i+1
  1998  0FAE  0875               	movf	sendLED@i+1,w
  1999  0FAF  3A80               	xorlw	128
  2000  0FB0  00FF               	movwf	127
  2001  0FB1  3080               	movlw	128
  2002  0FB2  027F               	subwf	127,w
  2003  0FB3  1D03               	skipz
  2004  0FB4  2FB7               	goto	u1605
  2005  0FB5  3010               	movlw	16
  2006  0FB6  0274               	subwf	sendLED@i,w
  2007  0FB7                     u1605:	
  2008  0FB7  1803               	btfsc	3,0
  2009  0FB8  2FF3               	goto	l2081
  2010  0FB9                     l2067:	
  2011                           
  2012                           ;LCDTime.c: 444: {
  2013                           ;LCDTime.c: 445: _delay((unsigned long)((1)*(4000000/4000.0)));
  2014  0FB9  30F9               	movlw	249
  2015  0FBA  00F2               	movwf	??_sendLED
  2016  0FBB                     u2337:	
  2017  0FBB  0000               	nop
  2018  0FBC  0BF2               	decfsz	??_sendLED,f
  2019  0FBD  2FBB               	goto	u2337
  2020  0FBE  2FBF               	nop2	;nop
  2021  0FBF  0000               	nop
  2022                           
  2023                           ;LCDTime.c: 447: if (c & 0x8000)
  2024  0FC0  1FF1               	btfss	sendLED@c+1,7
  2025  0FC1  2FC6               	goto	l365
  2026                           
  2027                           ;LCDTime.c: 448: RC0 = 1 ;
  2028  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0FC4  1407               	bsf	7,0	;volatile
  2031  0FC5  2FC9               	goto	l2073
  2032  0FC6                     l365:	
  2033                           
  2034                           ;LCDTime.c: 449: else
  2035                           ;LCDTime.c: 450: RC0 = 0 ;
  2036  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  2037  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0FC8  1007               	bcf	7,0	;volatile
  2039  0FC9                     l2073:	
  2040                           
  2041                           ;LCDTime.c: 452: c = c << 1 ;
  2042  0FC9  1003               	clrc
  2043  0FCA  0D70               	rlf	sendLED@c,w
  2044  0FCB  00F0               	movwf	sendLED@c
  2045  0FCC  0D71               	rlf	sendLED@c+1,w
  2046  0FCD  00F1               	movwf	sendLED@c+1
  2047                           
  2048                           ;LCDTime.c: 454: _delay((unsigned long)((1)*(4000000/4000.0))) ;
  2049  0FCE  30F9               	movlw	249
  2050  0FCF  00F2               	movwf	??_sendLED
  2051  0FD0                     u2347:	
  2052  0FD0  0000               	nop
  2053  0FD1  0BF2               	decfsz	??_sendLED,f
  2054  0FD2  2FD0               	goto	u2347
  2055  0FD3  2FD4               	nop2	;nop
  2056  0FD4  0000               	nop
  2057                           
  2058                           ;LCDTime.c: 455: RC2 = 1 ;
  2059  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  2061  0FD7  1507               	bsf	7,2	;volatile
  2062                           
  2063                           ;LCDTime.c: 456: _delay((unsigned long)((1)*(4000000/4000.0))) ;
  2064  0FD8  30F9               	movlw	249
  2065  0FD9  00F2               	movwf	??_sendLED
  2066  0FDA                     u2357:	
  2067  0FDA  0000               	nop
  2068  0FDB  0BF2               	decfsz	??_sendLED,f
  2069  0FDC  2FDA               	goto	u2357
  2070  0FDD  2FDE               	nop2	;nop
  2071  0FDE  0000               	nop
  2072                           
  2073                           ;LCDTime.c: 457: RC2 = 0 ;
  2074  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0FE1  1107               	bcf	7,2	;volatile
  2077  0FE2  3001               	movlw	1
  2078  0FE3  07F4               	addwf	sendLED@i,f
  2079  0FE4  1803               	skipnc
  2080  0FE5  0AF5               	incf	sendLED@i+1,f
  2081  0FE6  3000               	movlw	0
  2082  0FE7  07F5               	addwf	sendLED@i+1,f
  2083  0FE8  0875               	movf	sendLED@i+1,w
  2084  0FE9  3A80               	xorlw	128
  2085  0FEA  00FF               	movwf	127
  2086  0FEB  3080               	movlw	128
  2087  0FEC  027F               	subwf	127,w
  2088  0FED  1D03               	skipz
  2089  0FEE  2FF1               	goto	u1625
  2090  0FEF  3010               	movlw	16
  2091  0FF0  0274               	subwf	sendLED@i,w
  2092  0FF1                     u1625:	
  2093  0FF1  1C03               	skipc
  2094  0FF2  2FB9               	goto	l2067
  2095  0FF3                     l2081:	
  2096                           
  2097                           ;LCDTime.c: 458: }
  2098                           ;LCDTime.c: 460: _delay((unsigned long)((4)*(4000000/4000.0)));
  2099  0FF3  3006               	movlw	6
  2100  0FF4  00F3               	movwf	??_sendLED+1
  2101  0FF5  3030               	movlw	48
  2102  0FF6  00F2               	movwf	??_sendLED
  2103  0FF7                     u2367:	
  2104  0FF7  0BF2               	decfsz	??_sendLED,f
  2105  0FF8  2FF7               	goto	u2367
  2106  0FF9  0BF3               	decfsz	??_sendLED+1,f
  2107  0FFA  2FF7               	goto	u2367
  2108  0FFB  0000               	nop
  2109                           
  2110                           ;LCDTime.c: 461: RC1 = 1 ;
  2111  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0FFE  1487               	bsf	7,1	;volatile
  2114  0FFF  0008               	return
  2115  1000                     __end_of_sendLED:	
  2116                           
  2117                           	psect	text9
  2118  036F                     __ptext9:	
  2119 ;; *************** function _doMenu *****************
  2120 ;; Defined at:
  2121 ;;		line 74 in file "LCDTime.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  y               2   23[BANK0 ] int 
  2126 ;;  m               2   21[BANK0 ] int 
  2127 ;;  d               2   19[BANK0 ] int 
  2128 ;;  n               2   17[BANK0 ] int 
  2129 ;;  s               2   15[BANK0 ] int 
  2130 ;;  m               2   13[BANK0 ] int 
  2131 ;;  h               2   11[BANK0 ] int 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         0       0       0       0       0
  2142 ;;      Locals:         0      14       0       0       0
  2143 ;;      Temps:          0       3       0       0       0
  2144 ;;      Totals:         0      17       0       0       0
  2145 ;;Total ram usage:       17 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    4
  2148 ;; This function calls:
  2149 ;;		_DS1307_SetDate
  2150 ;;		_DS1307_SetTime
  2151 ;;		_LCDByte
  2152 ;;		_LCDGotoXY
  2153 ;;		_LCDWriteString
  2154 ;;		___awdiv
  2155 ;;		___awmod
  2156 ;;		_readInputs
  2157 ;;		_showDate
  2158 ;;		_showTime
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           
  2165                           ;psect for function _doMenu
  2166  036F                     _doMenu:	
  2167  036F                     l2213:	
  2168                           ;LCDTime.c: 76: while(bButton)
  2169                           
  2170                           ;incstack = 0
  2171                           ; Regs used in _doMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2172                           
  2173  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0371  084B               	movf	_bButton,w
  2176  0372  1903               	btfsc	3,2
  2177  0373  2B7A               	goto	l2215
  2178                           
  2179                           ;LCDTime.c: 77: readInputs();
  2180  0374  120A  158A  24BC  120A  118A  	fcall	_readInputs
  2181  0379  2B6F               	goto	l2213
  2182  037A                     l2215:	
  2183                           
  2184                           ;LCDTime.c: 80: if (menuFunction == 0 | menuFunction == 1)
  2185  037A  084C               	movf	_menuFunction,w
  2186  037B  1D03               	btfss	3,2
  2187  037C  034C               	decf	_menuFunction,w
  2188  037D  1D03               	btfss	3,2
  2189  037E  2D53               	goto	l2325
  2190                           
  2191                           ;LCDTime.c: 81: {
  2192                           ;LCDTime.c: 82: int h,m,s ;
  2193                           ;LCDTime.c: 84: h = hour ;
  2194  037F  0841               	movf	_hour+1,w
  2195  0380  00AC               	movwf	doMenu@h+1
  2196  0381  0840               	movf	_hour,w
  2197  0382  00AB               	movwf	doMenu@h
  2198                           
  2199                           ;LCDTime.c: 85: m = minute ;
  2200  0383  0843               	movf	_minute+1,w
  2201  0384  00AE               	movwf	doMenu@m+1
  2202  0385  0842               	movf	_minute,w
  2203  0386  00AD               	movwf	doMenu@m
  2204                           
  2205                           ;LCDTime.c: 86: s = seconds ;
  2206  0387  0847               	movf	_seconds+1,w
  2207  0388  00B0               	movwf	doMenu@s+1
  2208  0389  0846               	movf	_seconds,w
  2209  038A  00AF               	movwf	doMenu@s
  2210                           
  2211                           ;LCDTime.c: 88: (LCDByte(0b00000001,0));
  2212  038B  01F5               	clrf	LCDByte@isdata
  2213  038C  3001               	movlw	1
  2214  038D  120A  158A  25F4  120A  118A  	fcall	_LCDByte
  2215                           
  2216                           ;LCDTime.c: 89: LCDWriteString("Set Hours");
  2217  0392  305F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2218  0393  120A  158A  2644  120A  118A  	fcall	_LCDWriteString
  2219  0398                     L4:	
  2220                           
  2221                           ;LCDTime.c: 91: LCDGotoXY(0,1) ;
  2222  0398  01FC               	clrf	LCDGotoXY@y
  2223  0399  0AFC               	incf	LCDGotoXY@y,f
  2224  039A  3000               	movlw	0
  2225  039B  120A  158A  23EF  120A  118A  	fcall	_LCDGotoXY
  2226                           
  2227                           ;LCDTime.c: 92: showTime();
  2228  03A0  120A  158A  24EB  120A  118A  	fcall	_showTime
  2229  03A5                     l2251:	
  2230                           ;LCDTime.c: 94: while(!bButton)
  2231                           
  2232  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2233  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2234  03A7  084B               	movf	_bButton,w
  2235  03A8  1D03               	btfss	3,2
  2236  03A9  2BDE               	goto	l2255
  2237                           
  2238                           ;LCDTime.c: 95: {
  2239                           ;LCDTime.c: 96: readInputs();
  2240  03AA  120A  158A  24BC  120A  118A  	fcall	_readInputs
  2241                           
  2242                           ;LCDTime.c: 98: if (state & 0x10)
  2243  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2244  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2245  03B1  1E4D               	btfss	_state,4
  2246  03B2  2BC7               	goto	l239
  2247                           
  2248                           ;LCDTime.c: 99: {
  2249                           ;LCDTime.c: 100: hour++;
  2250  03B3  3001               	movlw	1
  2251  03B4  07C0               	addwf	_hour,f
  2252  03B5  1803               	skipnc
  2253  03B6  0AC1               	incf	_hour+1,f
  2254  03B7  3000               	movlw	0
  2255  03B8  07C1               	addwf	_hour+1,f
  2256                           
  2257                           ;LCDTime.c: 101: if (hour > 23)
  2258  03B9  0841               	movf	_hour+1,w
  2259  03BA  3A80               	xorlw	128
  2260  03BB  00FF               	movwf	127
  2261  03BC  3080               	movlw	128
  2262  03BD  027F               	subwf	127,w
  2263  03BE  1D03               	skipz
  2264  03BF  2BC2               	goto	u1735
  2265  03C0  3018               	movlw	24
  2266  03C1  0240               	subwf	_hour,w
  2267  03C2                     u1735:	
  2268  03C2  1C03               	skipc
  2269  03C3  2BD3               	goto	l2245
  2270                           
  2271                           ;LCDTime.c: 102: hour = 0 ;
  2272  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2273  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2274  03C6  2BD1               	goto	l2243
  2275  03C7                     l239:	
  2276                           ;LCDTime.c: 103: }
  2277                           
  2278                           
  2279                           ;LCDTime.c: 104: else if (state & 0x20)
  2280  03C7  1ECD               	btfss	_state,5
  2281  03C8  2BD3               	goto	l2245
  2282                           
  2283                           ;LCDTime.c: 105: {
  2284                           ;LCDTime.c: 106: hour--;
  2285  03C9  30FF               	movlw	255
  2286  03CA  07C0               	addwf	_hour,f
  2287  03CB  1803               	skipnc
  2288  03CC  0AC1               	incf	_hour+1,f
  2289  03CD  30FF               	movlw	255
  2290  03CE  07C1               	addwf	_hour+1,f
  2291                           
  2292                           ;LCDTime.c: 107: if (hour < 0)
  2293  03CF  1FC1               	btfss	_hour+1,7
  2294  03D0  2BD3               	goto	l2245
  2295  03D1                     l2243:	
  2296                           
  2297                           ;LCDTime.c: 108: hour = 0 ;
  2298  03D1  01C0               	clrf	_hour
  2299  03D2  01C1               	clrf	_hour+1
  2300  03D3                     l2245:	
  2301                           
  2302                           ;LCDTime.c: 109: }
  2303                           ;LCDTime.c: 111: if (state)
  2304  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2305  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2306  03D5  084D               	movf	_state,w
  2307  03D6  1903               	btfsc	3,2
  2308  03D7  2BA5               	goto	l2251
  2309  03D8  2B98               	goto	L4
  2310  03D9                     l2253:	
  2311                           ;LCDTime.c: 115: }
  2312                           ;LCDTime.c: 116: }
  2313                           ;LCDTime.c: 118: while(bButton)
  2314                           
  2315                           ;LCDTime.c: 114: showTime();
  2316                           
  2317                           ;LCDTime.c: 112: {
  2318                           ;LCDTime.c: 113: LCDGotoXY(0,1) ;
  2319                           
  2320                           
  2321                           ;LCDTime.c: 119: readInputs();
  2322  03D9  120A  158A  24BC  120A  118A  	fcall	_readInputs
  2323  03DE                     l2255:	
  2324  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2325  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2326  03E0  084B               	movf	_bButton,w
  2327  03E1  1D03               	btfss	3,2
  2328  03E2  2BD9               	goto	l2253
  2329                           
  2330                           ;LCDTime.c: 121: LCDGotoXY(0,0) ;
  2331  03E3  01FC               	clrf	LCDGotoXY@y
  2332  03E4  3000               	movlw	0
  2333  03E5  120A  158A  23EF  120A  118A  	fcall	_LCDGotoXY
  2334                           
  2335                           ;LCDTime.c: 122: LCDWriteString("Set Minutes");
  2336  03EA  3035               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2337  03EB  120A  158A  2644  120A  118A  	fcall	_LCDWriteString
  2338  03F0                     l2281:	
  2339                           ;LCDTime.c: 124: while(!bButton)
  2340                           
  2341  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2342  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2343  03F2  084B               	movf	_bButton,w
  2344  03F3  1D03               	btfss	3,2
  2345  03F4  2C36               	goto	l2285
  2346                           
  2347                           ;LCDTime.c: 125: {
  2348                           ;LCDTime.c: 126: readInputs();
  2349  03F5  120A  158A  24BC  120A  118A  	fcall	_readInputs
  2350                           
  2351                           ;LCDTime.c: 128: if (state & 0x10)
  2352  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2353  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2354  03FC  1E4D               	btfss	_state,4
  2355  03FD  2C12               	goto	l251
  2356                           
  2357                           ;LCDTime.c: 129: {
  2358                           ;LCDTime.c: 130: minute++;
  2359  03FE  3001               	movlw	1
  2360  03FF  07C2               	addwf	_minute,f
  2361  0400  1803               	skipnc
  2362  0401  0AC3               	incf	_minute+1,f
  2363  0402  3000               	movlw	0
  2364  0403  07C3               	addwf	_minute+1,f
  2365                           
  2366                           ;LCDTime.c: 131: if (minute > 59)
  2367  0404  0843               	movf	_minute+1,w
  2368  0405  3A80               	xorlw	128
  2369  0406  00FF               	movwf	127
  2370  0407  3080               	movlw	128
  2371  0408  027F               	subwf	127,w
  2372  0409  1D03               	skipz
  2373  040A  2C0D               	goto	u1805
  2374  040B  303C               	movlw	60
  2375  040C  0242               	subwf	_minute,w
  2376  040D                     u1805:	
  2377  040D  1C03               	skipc
  2378  040E  2C1E               	goto	l2275
  2379                           
  2380                           ;LCDTime.c: 132: minute = 0 ;
  2381  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2382  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2383  0411  2C1C               	goto	l2273
  2384  0412                     l251:	
  2385                           ;LCDTime.c: 133: }
  2386                           
  2387                           
  2388                           ;LCDTime.c: 134: else if (state & 0x20)
  2389  0412  1ECD               	btfss	_state,5
  2390  0413  2C1E               	goto	l2275
  2391                           
  2392                           ;LCDTime.c: 135: {
  2393                           ;LCDTime.c: 136: minute--;
  2394  0414  30FF               	movlw	255
  2395  0415  07C2               	addwf	_minute,f
  2396  0416  1803               	skipnc
  2397  0417  0AC3               	incf	_minute+1,f
  2398  0418  30FF               	movlw	255
  2399  0419  07C3               	addwf	_minute+1,f
  2400                           
  2401                           ;LCDTime.c: 137: if (minute < 0)
  2402  041A  1FC3               	btfss	_minute+1,7
  2403  041B  2C1E               	goto	l2275
  2404  041C                     l2273:	
  2405                           
  2406                           ;LCDTime.c: 138: minute = 0 ;
  2407  041C  01C2               	clrf	_minute
  2408  041D  01C3               	clrf	_minute+1
  2409  041E                     l2275:	
  2410                           
  2411                           ;LCDTime.c: 139: }
  2412                           ;LCDTime.c: 141: if (state)
  2413  041E  1283               	bcf	3,5	;RP0=0, select bank0
  2414  041F  1303               	bcf	3,6	;RP1=0, select bank0
  2415  0420  084D               	movf	_state,w
  2416  0421  1903               	btfsc	3,2
  2417  0422  2BF0               	goto	l2281
  2418                           
  2419                           ;LCDTime.c: 142: {
  2420                           ;LCDTime.c: 143: LCDGotoXY(0,1) ;
  2421  0423  01FC               	clrf	LCDGotoXY@y
  2422  0424  0AFC               	incf	LCDGotoXY@y,f
  2423  0425  3000               	movlw	0
  2424  0426  120A  158A  23EF  120A  118A  	fcall	_LCDGotoXY
  2425                           
  2426                           ;LCDTime.c: 144: showTime();
  2427  042B  120A  158A  24EB  120A  118A  	fcall	_showTime
  2428  0430  2BF0               	goto	l2281
  2429  0431                     l2283:	
  2430                           ;LCDTime.c: 145: }
  2431                           ;LCDTime.c: 146: }
  2432                           ;LCDTime.c: 148: while(bButton)
  2433                           
  2434                           
  2435                           ;LCDTime.c: 149: readInputs();
  2436  0431  120A  158A  24BC  120A  118A  	fcall	_readInputs
  2437  0436                     l2285:	
  2438  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0438  084B               	movf	_bButton,w
  2441  0439  1D03               	btfss	3,2
  2442  043A  2C31               	goto	l2283
  2443                           
  2444                           ;LCDTime.c: 151: LCDGotoXY(0,0) ;
  2445  043B  01FC               	clrf	LCDGotoXY@y
  2446  043C  3000               	movlw	0
  2447  043D  120A  158A  23EF  120A  118A  	fcall	_LCDGotoXY
  2448                           
  2449                           ;LCDTime.c: 152: LCDWriteString("Set Seconds");
  2450  0442  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2451  0443  120A  158A  2644  120A  118A  	fcall	_LCDWriteString
  2452  0448                     l2311:	
  2453                           ;LCDTime.c: 154: while(!bButton)
  2454                           
  2455  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2456  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2457  044A  084B               	movf	_bButton,w
  2458  044B  1D03               	btfss	3,2
  2459  044C  2C89               	goto	l2313
  2460                           
  2461                           ;LCDTime.c: 155: {
  2462                           ;LCDTime.c: 156: readInputs();
  2463  044D  120A  158A  24BC  120A  118A  	fcall	_readInputs
  2464                           
  2465                           ;LCDTime.c: 158: if (state & 0x10)
  2466  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2467  0453  1303               	bcf	3,6	;RP1=0, select bank0
  2468  0454  1E4D               	btfss	_state,4
  2469  0455  2C6A               	goto	l263
  2470                           
  2471                           ;LCDTime.c: 159: {
  2472                           ;LCDTime.c: 160: seconds++;
  2473  0456  3001               	movlw	1
  2474  0457  07C6               	addwf	_seconds,f
  2475  0458  1803               	skipnc
  2476  0459  0AC7               	incf	_seconds+1,f
  2477  045A  3000               	movlw	0
  2478  045B  07C7               	addwf	_seconds+1,f
  2479                           
  2480                           ;LCDTime.c: 161: if (seconds > 59)
  2481  045C  0847               	movf	_seconds+1,w
  2482  045D  3A80               	xorlw	128
  2483  045E  00FF               	movwf	127
  2484  045F  3080               	movlw	128
  2485  0460  027F               	subwf	127,w
  2486  0461  1D03               	skipz
  2487  0462  2C65               	goto	u1875
  2488  0463  303C               	movlw	60
  2489  0464  0246               	subwf	_seconds,w
  2490  0465                     u1875:	
  2491  0465  1C03               	skipc
  2492  0466  2C76               	goto	l2305
  2493                           
  2494                           ;LCDTime.c: 162: seconds = 0 ;
  2495  0467  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0468  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0469  2C74               	goto	l2303
  2498  046A                     l263:	
  2499                           ;LCDTime.c: 163: }
  2500                           
  2501                           
  2502                           ;LCDTime.c: 164: else if (state & 0x20)
  2503  046A  1ECD               	btfss	_state,5
  2504  046B  2C76               	goto	l2305
  2505                           
  2506                           ;LCDTime.c: 165: {
  2507                           ;LCDTime.c: 166: seconds--;
  2508  046C  30FF               	movlw	255
  2509  046D  07C6               	addwf	_seconds,f
  2510  046E  1803               	skipnc
  2511  046F  0AC7               	incf	_seconds+1,f
  2512  0470  30FF               	movlw	255
  2513  0471  07C7               	addwf	_seconds+1,f
  2514                           
  2515                           ;LCDTime.c: 167: if (seconds < 0)
  2516  0472  1FC7               	btfss	_seconds+1,7
  2517  0473  2C76               	goto	l2305
  2518  0474                     l2303:	
  2519                           
  2520                           ;LCDTime.c: 168: seconds = 0 ;
  2521  0474  01C6               	clrf	_seconds
  2522  0475  01C7               	clrf	_seconds+1
  2523  0476                     l2305:	
  2524                           
  2525                           ;LCDTime.c: 169: }
  2526                           ;LCDTime.c: 171: if (state)
  2527  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2528  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2529  0478  084D               	movf	_state,w
  2530  0479  1903               	btfsc	3,2
  2531  047A  2C48               	goto	l2311
  2532                           
  2533                           ;LCDTime.c: 172: {
  2534                           ;LCDTime.c: 173: LCDGotoXY(0,1) ;
  2535  047B  01FC               	clrf	LCDGotoXY@y
  2536  047C  0AFC               	incf	LCDGotoXY@y,f
  2537  047D  3000               	movlw	0
  2538  047E  120A  158A  23EF  120A  118A  	fcall	_LCDGotoXY
  2539                           
  2540                           ;LCDTime.c: 174: showTime();
  2541  0483  120A  158A  24EB  120A  118A  	fcall	_showTime
  2542  0488  2C48               	goto	l2311
  2543  0489                     l2313:	
  2544                           
  2545                           ;LCDTime.c: 175: }
  2546                           ;LCDTime.c: 176: }
  2547                           ;LCDTime.c: 179: if (h != hour || m != minute || s != seconds)
  2548  0489  0841               	movf	_hour+1,w
  2549  048A  062C               	xorwf	doMenu@h+1,w
  2550  048B  1D03               	skipz
  2551  048C  2C8F               	goto	u1925
  2552  048D  0840               	movf	_hour,w
  2553  048E  062B               	xorwf	doMenu@h,w
  2554  048F                     u1925:	
  2555  048F  1D03               	skipz
  2556  0490  2CA1               	goto	l2319
  2557  0491  0843               	movf	_minute+1,w
  2558  0492  062E               	xorwf	doMenu@m+1,w
  2559  0493  1D03               	skipz
  2560  0494  2C97               	goto	u1935
  2561  0495  0842               	movf	_minute,w
  2562  0496  062D               	xorwf	doMenu@m,w
  2563  0497                     u1935:	
  2564  0497  1D03               	skipz
  2565  0498  2CA1               	goto	l2319
  2566  0499  0847               	movf	_seconds+1,w
  2567  049A  0630               	xorwf	doMenu@s+1,w
  2568  049B  1D03               	skipz
  2569  049C  2C9F               	goto	u1945
  2570  049D  0846               	movf	_seconds,w
  2571  049E  062F               	xorwf	doMenu@s,w
  2572  049F                     u1945:	
  2573  049F  1903               	skipnz
  2574  04A0  2D48               	goto	l2323
  2575  04A1                     l2319:	
  2576                           
  2577                           ;LCDTime.c: 180: {
  2578                           ;LCDTime.c: 181: h = ((hour / 10) << 4) + hour % 10 ;
  2579  04A1  300A               	movlw	10
  2580  04A2  00F0               	movwf	___awdiv@divisor
  2581  04A3  3000               	movlw	0
  2582  04A4  00F1               	movwf	___awdiv@divisor+1
  2583  04A5  0841               	movf	_hour+1,w
  2584  04A6  00F3               	movwf	___awdiv@dividend+1
  2585  04A7  0840               	movf	_hour,w
  2586  04A8  00F2               	movwf	___awdiv@dividend
  2587  04A9  120A  158A  26EA  120A  118A  	fcall	___awdiv
  2588  04AE  0870               	movf	?___awdiv,w
  2589  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2590  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2591  04B1  00A8               	movwf	??_doMenu
  2592  04B2  0871               	movf	?___awdiv+1,w
  2593  04B3  00A9               	movwf	??_doMenu+1
  2594  04B4  0EA8               	swapf	??_doMenu,f
  2595  04B5  0EA9               	swapf	??_doMenu+1,f
  2596  04B6  30F0               	movlw	240
  2597  04B7  05A9               	andwf	??_doMenu+1,f
  2598  04B8  0828               	movf	??_doMenu,w
  2599  04B9  390F               	andlw	15
  2600  04BA  04A9               	iorwf	??_doMenu+1,f
  2601  04BB  30F0               	movlw	240
  2602  04BC  05A8               	andwf	??_doMenu,f
  2603  04BD  300A               	movlw	10
  2604  04BE  00F0               	movwf	___awmod@divisor
  2605  04BF  3000               	movlw	0
  2606  04C0  00F1               	movwf	___awmod@divisor+1
  2607  04C1  0841               	movf	_hour+1,w
  2608  04C2  00F3               	movwf	___awmod@dividend+1
  2609  04C3  0840               	movf	_hour,w
  2610  04C4  00F2               	movwf	___awmod@dividend
  2611  04C5  120A  158A  2559  120A  118A  	fcall	___awmod
  2612  04CA  0870               	movf	?___awmod,w
  2613  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2614  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2615  04CD  0728               	addwf	??_doMenu,w
  2616  04CE  00AB               	movwf	doMenu@h
  2617  04CF  0871               	movf	?___awmod+1,w
  2618  04D0  1803               	skipnc
  2619  04D1  0A71               	incf	?___awmod+1,w
  2620  04D2  0729               	addwf	??_doMenu+1,w
  2621  04D3  00AC               	movwf	doMenu@h+1
  2622                           
  2623                           ;LCDTime.c: 182: m = ((minute / 10) << 4) + minute % 10 ;
  2624  04D4  300A               	movlw	10
  2625  04D5  00F0               	movwf	___awdiv@divisor
  2626  04D6  3000               	movlw	0
  2627  04D7  00F1               	movwf	___awdiv@divisor+1
  2628  04D8  0843               	movf	_minute+1,w
  2629  04D9  00F3               	movwf	___awdiv@dividend+1
  2630  04DA  0842               	movf	_minute,w
  2631  04DB  00F2               	movwf	___awdiv@dividend
  2632  04DC  120A  158A  26EA  120A  118A  	fcall	___awdiv
  2633  04E1  0870               	movf	?___awdiv,w
  2634  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2635  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  2636  04E4  00A8               	movwf	??_doMenu
  2637  04E5  0871               	movf	?___awdiv+1,w
  2638  04E6  00A9               	movwf	??_doMenu+1
  2639  04E7  0EA8               	swapf	??_doMenu,f
  2640  04E8  0EA9               	swapf	??_doMenu+1,f
  2641  04E9  30F0               	movlw	240
  2642  04EA  05A9               	andwf	??_doMenu+1,f
  2643  04EB  0828               	movf	??_doMenu,w
  2644  04EC  390F               	andlw	15
  2645  04ED  04A9               	iorwf	??_doMenu+1,f
  2646  04EE  30F0               	movlw	240
  2647  04EF  05A8               	andwf	??_doMenu,f
  2648  04F0  300A               	movlw	10
  2649  04F1  00F0               	movwf	___awmod@divisor
  2650  04F2  3000               	movlw	0
  2651  04F3  00F1               	movwf	___awmod@divisor+1
  2652  04F4  0843               	movf	_minute+1,w
  2653  04F5  00F3               	movwf	___awmod@dividend+1
  2654  04F6  0842               	movf	_minute,w
  2655  04F7  00F2               	movwf	___awmod@dividend
  2656  04F8  120A  158A  2559  120A  118A  	fcall	___awmod
  2657  04FD  0870               	movf	?___awmod,w
  2658  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2659  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2660  0500  0728               	addwf	??_doMenu,w
  2661  0501  00AD               	movwf	doMenu@m
  2662  0502  0871               	movf	?___awmod+1,w
  2663  0503  1803               	skipnc
  2664  0504  0A71               	incf	?___awmod+1,w
  2665  0505  0729               	addwf	??_doMenu+1,w
  2666  0506  00AE               	movwf	doMenu@m+1
  2667                           
  2668                           ;LCDTime.c: 183: s = ((seconds / 10) << 4) + seconds % 10 ;
  2669  0507  300A               	movlw	10
  2670  0508  00F0               	movwf	___awdiv@divisor
  2671  0509  3000               	movlw	0
  2672  050A  00F1               	movwf	___awdiv@divisor+1
  2673  050B  0847               	movf	_seconds+1,w
  2674  050C  00F3               	movwf	___awdiv@dividend+1
  2675  050D  0846               	movf	_seconds,w
  2676  050E  00F2               	movwf	___awdiv@dividend
  2677  050F  120A  158A  26EA  120A  118A  	fcall	___awdiv
  2678  0514  0870               	movf	?___awdiv,w
  2679  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0517  00A8               	movwf	??_doMenu
  2682  0518  0871               	movf	?___awdiv+1,w
  2683  0519  00A9               	movwf	??_doMenu+1
  2684  051A  0EA8               	swapf	??_doMenu,f
  2685  051B  0EA9               	swapf	??_doMenu+1,f
  2686  051C  30F0               	movlw	240
  2687  051D  05A9               	andwf	??_doMenu+1,f
  2688  051E  0828               	movf	??_doMenu,w
  2689  051F  390F               	andlw	15
  2690  0520  04A9               	iorwf	??_doMenu+1,f
  2691  0521  30F0               	movlw	240
  2692  0522  05A8               	andwf	??_doMenu,f
  2693  0523  300A               	movlw	10
  2694  0524  00F0               	movwf	___awmod@divisor
  2695  0525  3000               	movlw	0
  2696  0526  00F1               	movwf	___awmod@divisor+1
  2697  0527  0847               	movf	_seconds+1,w
  2698  0528  00F3               	movwf	___awmod@dividend+1
  2699  0529  0846               	movf	_seconds,w
  2700  052A  00F2               	movwf	___awmod@dividend
  2701  052B  120A  158A  2559  120A  118A  	fcall	___awmod
  2702  0530  0870               	movf	?___awmod,w
  2703  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0533  0728               	addwf	??_doMenu,w
  2706  0534  00AF               	movwf	doMenu@s
  2707  0535  0871               	movf	?___awmod+1,w
  2708  0536  1803               	skipnc
  2709  0537  0A71               	incf	?___awmod+1,w
  2710  0538  0729               	addwf	??_doMenu+1,w
  2711  0539  00B0               	movwf	doMenu@s+1
  2712                           
  2713                           ;LCDTime.c: 185: DS1307_SetTime(h,m,s) ;
  2714  053A  082D               	movf	doMenu@m,w
  2715  053B  00A8               	movwf	??_doMenu
  2716  053C  0828               	movf	??_doMenu,w
  2717  053D  00F5               	movwf	DS1307_SetTime@mm
  2718  053E  082F               	movf	doMenu@s,w
  2719  053F  00A9               	movwf	??_doMenu+1
  2720  0540  0829               	movf	??_doMenu+1,w
  2721  0541  00F6               	movwf	DS1307_SetTime@ss
  2722  0542  082B               	movf	doMenu@h,w
  2723  0543  120A  158A  243C  120A  118A  	fcall	_DS1307_SetTime
  2724  0548                     l2323:	
  2725                           ;LCDTime.c: 186: }
  2726                           ;LCDTime.c: 188: while(bButton)
  2727                           
  2728  0548  1283               	bcf	3,5	;RP0=0, select bank0
  2729  0549  1303               	bcf	3,6	;RP1=0, select bank0
  2730  054A  084B               	movf	_bButton,w
  2731  054B  1903               	btfsc	3,2
  2732  054C  2D53               	goto	l2325
  2733                           
  2734                           ;LCDTime.c: 189: readInputs();
  2735  054D  120A  158A  24BC  120A  118A  	fcall	_readInputs
  2736  0552  2D48               	goto	l2323
  2737  0553                     l2325:	
  2738                           
  2739                           ;LCDTime.c: 190: }
  2740                           ;LCDTime.c: 193: if (menuFunction == 0 | menuFunction == 2)
  2741  0553  084C               	movf	_menuFunction,w
  2742  0554  1903               	btfsc	3,2
  2743  0555  2D5A               	goto	l2329
  2744  0556  3002               	movlw	2
  2745  0557  064C               	xorwf	_menuFunction,w
  2746  0558  1D03               	btfss	3,2
  2747  0559  0008               	return
  2748  055A                     l2329:	
  2749                           
  2750                           ;LCDTime.c: 194: {
  2751                           ;LCDTime.c: 195: int n,d,m,y ;
  2752                           ;LCDTime.c: 197: n = day ;
  2753  055A  083F               	movf	_day+1,w
  2754  055B  00B2               	movwf	doMenu@n+1
  2755  055C  083E               	movf	_day,w
  2756  055D  00B1               	movwf	doMenu@n
  2757                           
  2758                           ;LCDTime.c: 198: d = date ;
  2759  055E  083D               	movf	_date+1,w
  2760  055F  00B4               	movwf	doMenu@d+1
  2761  0560  083C               	movf	_date,w
  2762  0561  00B3               	movwf	doMenu@d
  2763                           
  2764                           ;LCDTime.c: 199: m = month ;
  2765  0562  0845               	movf	_month+1,w
  2766  0563  00B6               	movwf	doMenu@m_251+1
  2767  0564  0844               	movf	_month,w
  2768  0565  00B5               	movwf	doMenu@m_251
  2769                           
  2770                           ;LCDTime.c: 200: y = year ;
  2771  0566  0849               	movf	_year+1,w
  2772  0567  00B8               	movwf	doMenu@y+1
  2773  0568  0848               	movf	_year,w
  2774  0569  00B7               	movwf	doMenu@y
  2775                           
  2776                           ;LCDTime.c: 202: (LCDByte(0b00000001,0));
  2777  056A  01F5               	clrf	LCDByte@isdata
  2778  056B  3001               	movlw	1
  2779  056C  120A  158A  25F4  120A  118A  	fcall	_LCDByte
  2780                           
  2781                           ;LCDTime.c: 203: LCDWriteString("Set Year");
  2782  0571  3069               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2783  0572  120A  158A  2644  120A  118A  	fcall	_LCDWriteString
  2784  0577                     L5:	
  2785                           
  2786                           ;LCDTime.c: 205: LCDGotoXY(0,1) ;
  2787  0577  01FC               	clrf	LCDGotoXY@y
  2788  0578  0AFC               	incf	LCDGotoXY@y,f
  2789  0579  3000               	movlw	0
  2790  057A  120A  158A  23EF  120A  118A  	fcall	_LCDGotoXY
  2791                           
  2792                           ;LCDTime.c: 206: showDate();
  2793  057F  120A  118A  21B2  120A  118A  	fcall	_showDate
  2794  0584                     l2359:	
  2795                           ;LCDTime.c: 208: while(!bButton)
  2796                           
  2797  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2798  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2799  0586  084B               	movf	_bButton,w
  2800  0587  1D03               	btfss	3,2
  2801  0588  2DC1               	goto	l2363
  2802                           
  2803                           ;LCDTime.c: 209: {
  2804                           ;LCDTime.c: 210: readInputs();
  2805  0589  120A  158A  24BC  120A  118A  	fcall	_readInputs
  2806                           
  2807                           ;LCDTime.c: 212: if (state & 0x10)
  2808  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2809  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2810  0590  1E4D               	btfss	_state,4
  2811  0591  2DA8               	goto	l281
  2812                           
  2813                           ;LCDTime.c: 213: {
  2814                           ;LCDTime.c: 214: year++;
  2815  0592  3001               	movlw	1
  2816  0593  07C8               	addwf	_year,f
  2817  0594  1803               	skipnc
  2818  0595  0AC9               	incf	_year+1,f
  2819  0596  3000               	movlw	0
  2820  0597  07C9               	addwf	_year+1,f
  2821                           
  2822                           ;LCDTime.c: 215: if (year > 99)
  2823  0598  0849               	movf	_year+1,w
  2824  0599  3A80               	xorlw	128
  2825  059A  00FF               	movwf	127
  2826  059B  3080               	movlw	128
  2827  059C  027F               	subwf	127,w
  2828  059D  1D03               	skipz
  2829  059E  2DA1               	goto	u1995
  2830  059F  3064               	movlw	100
  2831  05A0  0248               	subwf	_year,w
  2832  05A1                     u1995:	
  2833  05A1  1C03               	skipc
  2834  05A2  2DB6               	goto	l2355
  2835                           
  2836                           ;LCDTime.c: 216: year = 0 ;
  2837  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  2838  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  2839  05A5  01C8               	clrf	_year
  2840  05A6  01C9               	clrf	_year+1
  2841                           
  2842                           ;LCDTime.c: 217: }
  2843  05A7  2DB6               	goto	l2355
  2844  05A8                     l281:	
  2845                           
  2846                           ;LCDTime.c: 218: else if (state & 0x20)
  2847  05A8  1ECD               	btfss	_state,5
  2848  05A9  2DB6               	goto	l2355
  2849                           
  2850                           ;LCDTime.c: 219: {
  2851                           ;LCDTime.c: 220: year--;
  2852  05AA  30FF               	movlw	255
  2853  05AB  07C8               	addwf	_year,f
  2854  05AC  1803               	skipnc
  2855  05AD  0AC9               	incf	_year+1,f
  2856  05AE  30FF               	movlw	255
  2857  05AF  07C9               	addwf	_year+1,f
  2858                           
  2859                           ;LCDTime.c: 221: if (year < 0)
  2860  05B0  1FC9               	btfss	_year+1,7
  2861  05B1  2DB6               	goto	l2355
  2862                           
  2863                           ;LCDTime.c: 222: date = 99 ;
  2864  05B2  3063               	movlw	99
  2865  05B3  00BC               	movwf	_date
  2866  05B4  3000               	movlw	0
  2867  05B5  00BD               	movwf	_date+1
  2868  05B6                     l2355:	
  2869                           
  2870                           ;LCDTime.c: 223: }
  2871                           ;LCDTime.c: 225: if (state)
  2872  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2873  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2874  05B8  084D               	movf	_state,w
  2875  05B9  1903               	btfsc	3,2
  2876  05BA  2D84               	goto	l2359
  2877  05BB  2D77               	goto	L5
  2878  05BC                     l2361:	
  2879                           ;LCDTime.c: 229: }
  2880                           ;LCDTime.c: 230: }
  2881                           ;LCDTime.c: 232: while(bButton)
  2882                           
  2883                           ;LCDTime.c: 228: showDate();
  2884                           
  2885                           ;LCDTime.c: 226: {
  2886                           ;LCDTime.c: 227: LCDGotoXY(0,1) ;
  2887                           
  2888                           
  2889                           ;LCDTime.c: 233: readInputs();
  2890  05BC  120A  158A  24BC  120A  118A  	fcall	_readInputs
  2891  05C1                     l2363:	
  2892  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2893  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2894  05C3  084B               	movf	_bButton,w
  2895  05C4  1D03               	btfss	3,2
  2896  05C5  2DBC               	goto	l2361
  2897                           
  2898                           ;LCDTime.c: 235: LCDGotoXY(0,0) ;
  2899  05C6  01FC               	clrf	LCDGotoXY@y
  2900  05C7  3000               	movlw	0
  2901  05C8  120A  158A  23EF  120A  118A  	fcall	_LCDGotoXY
  2902                           
  2903                           ;LCDTime.c: 236: LCDWriteString("Set Month");
  2904  05CD  3055               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2905  05CE  120A  158A  2644  120A  118A  	fcall	_LCDWriteString
  2906  05D3                     l2387:	
  2907                           ;LCDTime.c: 238: while(!bButton)
  2908                           
  2909  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2910  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2911  05D5  084B               	movf	_bButton,w
  2912  05D6  1D03               	btfss	3,2
  2913  05D7  2E1E               	goto	l2391
  2914                           
  2915                           ;LCDTime.c: 239: {
  2916                           ;LCDTime.c: 240: readInputs();
  2917  05D8  120A  158A  24BC  120A  118A  	fcall	_readInputs
  2918                           
  2919                           ;LCDTime.c: 242: if (state & 0x10)
  2920  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2921  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2922  05DF  1E4D               	btfss	_state,4
  2923  05E0  2DF6               	goto	l293
  2924                           
  2925                           ;LCDTime.c: 243: {
  2926                           ;LCDTime.c: 244: month++;
  2927  05E1  3001               	movlw	1
  2928  05E2  07C4               	addwf	_month,f
  2929  05E3  1803               	skipnc
  2930  05E4  0AC5               	incf	_month+1,f
  2931  05E5  3000               	movlw	0
  2932  05E6  07C5               	addwf	_month+1,f
  2933                           
  2934                           ;LCDTime.c: 245: if (month > 12)
  2935  05E7  0845               	movf	_month+1,w
  2936  05E8  3A80               	xorlw	128
  2937  05E9  00FF               	movwf	127
  2938  05EA  3080               	movlw	128
  2939  05EB  027F               	subwf	127,w
  2940  05EC  1D03               	skipz
  2941  05ED  2DF0               	goto	u2065
  2942  05EE  300D               	movlw	13
  2943  05EF  0244               	subwf	_month,w
  2944  05F0                     u2065:	
  2945  05F0  1C03               	skipc
  2946  05F1  2E06               	goto	l2383
  2947                           
  2948                           ;LCDTime.c: 246: month = 1 ;
  2949  05F2  3001               	movlw	1
  2950  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  2951  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  2952  05F5  2E03               	goto	L1
  2953  05F6                     l293:	
  2954                           ;LCDTime.c: 247: }
  2955                           
  2956                           
  2957                           ;LCDTime.c: 248: else if (state & 0x20)
  2958  05F6  1ECD               	btfss	_state,5
  2959  05F7  2E06               	goto	l2383
  2960                           
  2961                           ;LCDTime.c: 249: {
  2962                           ;LCDTime.c: 250: month--;
  2963  05F8  30FF               	movlw	255
  2964  05F9  07C4               	addwf	_month,f
  2965  05FA  1803               	skipnc
  2966  05FB  0AC5               	incf	_month+1,f
  2967  05FC  30FF               	movlw	255
  2968  05FD  07C5               	addwf	_month+1,f
  2969                           
  2970                           ;LCDTime.c: 251: if (!month)
  2971  05FE  0844               	movf	_month,w
  2972  05FF  0445               	iorwf	_month+1,w
  2973  0600  1D03               	btfss	3,2
  2974  0601  2E06               	goto	l2383
  2975                           
  2976                           ;LCDTime.c: 252: month = 12 ;
  2977  0602  300C               	movlw	12
  2978  0603                     L1:	
  2979  0603  00C4               	movwf	_month
  2980  0604  3000               	movlw	0
  2981  0605  00C5               	movwf	_month+1
  2982  0606                     l2383:	
  2983                           
  2984                           ;LCDTime.c: 253: }
  2985                           ;LCDTime.c: 255: if (state)
  2986  0606  1283               	bcf	3,5	;RP0=0, select bank0
  2987  0607  1303               	bcf	3,6	;RP1=0, select bank0
  2988  0608  084D               	movf	_state,w
  2989  0609  1903               	btfsc	3,2
  2990  060A  2DD3               	goto	l2387
  2991                           
  2992                           ;LCDTime.c: 256: {
  2993                           ;LCDTime.c: 257: LCDGotoXY(0,1) ;
  2994  060B  01FC               	clrf	LCDGotoXY@y
  2995  060C  0AFC               	incf	LCDGotoXY@y,f
  2996  060D  3000               	movlw	0
  2997  060E  120A  158A  23EF  120A  118A  	fcall	_LCDGotoXY
  2998                           
  2999                           ;LCDTime.c: 258: showDate();
  3000  0613  120A  118A  21B2  120A  118A  	fcall	_showDate
  3001  0618  2DD3               	goto	l2387
  3002  0619                     l2389:	
  3003                           ;LCDTime.c: 259: }
  3004                           ;LCDTime.c: 260: }
  3005                           ;LCDTime.c: 262: while(bButton)
  3006                           
  3007                           
  3008                           ;LCDTime.c: 263: readInputs();
  3009  0619  120A  158A  24BC  120A  118A  	fcall	_readInputs
  3010  061E                     l2391:	
  3011  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3012  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3013  0620  084B               	movf	_bButton,w
  3014  0621  1D03               	btfss	3,2
  3015  0622  2E19               	goto	l2389
  3016                           
  3017                           ;LCDTime.c: 265: LCDGotoXY(0,0) ;
  3018  0623  01FC               	clrf	LCDGotoXY@y
  3019  0624  3000               	movlw	0
  3020  0625  120A  158A  23EF  120A  118A  	fcall	_LCDGotoXY
  3021                           
  3022                           ;LCDTime.c: 266: LCDWriteString("Set Date ");
  3023  062A  304B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3024  062B  120A  158A  2644  120A  118A  	fcall	_LCDWriteString
  3025  0630                     l2415:	
  3026                           ;LCDTime.c: 268: while(!bButton)
  3027                           
  3028  0630  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0631  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0632  084B               	movf	_bButton,w
  3031  0633  1D03               	btfss	3,2
  3032  0634  2E8E               	goto	l2419
  3033                           
  3034                           ;LCDTime.c: 269: {
  3035                           ;LCDTime.c: 270: readInputs();
  3036  0635  120A  158A  24BC  120A  118A  	fcall	_readInputs
  3037                           
  3038                           ;LCDTime.c: 272: if (state & 0x10)
  3039  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3040  063B  1303               	bcf	3,6	;RP1=0, select bank0
  3041  063C  1E4D               	btfss	_state,4
  3042  063D  2E5D               	goto	l305
  3043                           
  3044                           ;LCDTime.c: 273: {
  3045                           ;LCDTime.c: 274: date++;
  3046  063E  3001               	movlw	1
  3047  063F  07BC               	addwf	_date,f
  3048  0640  1803               	skipnc
  3049  0641  0ABD               	incf	_date+1,f
  3050  0642  3000               	movlw	0
  3051  0643  07BD               	addwf	_date+1,f
  3052                           
  3053                           ;LCDTime.c: 275: if (date > monthDays[month-1])
  3054  0644  0844               	movf	_month,w
  3055  0645  3EFF               	addlw	255
  3056  0646  3E1D               	addlw	low ((_monthDays-__stringbase)| (0+32768))
  3057  0647  0084               	movwf	4
  3058  0648  120A  118A  2003  120A  118A  	fcall	stringdir
  3059  064D  00A8               	movwf	??_doMenu
  3060  064E  083D               	movf	_date+1,w
  3061  064F  3A80               	xorlw	128
  3062  0650  3C80               	sublw	128
  3063  0651  1D03               	skipz
  3064  0652  2E55               	goto	u2135
  3065  0653  083C               	movf	_date,w
  3066  0654  0228               	subwf	??_doMenu,w
  3067  0655                     u2135:	
  3068  0655  1803               	skipnc
  3069  0656  2E76               	goto	l2411
  3070                           
  3071                           ;LCDTime.c: 276: date = 1 ;
  3072  0657  3001               	movlw	1
  3073  0658  1283               	bcf	3,5	;RP0=0, select bank0
  3074  0659  1303               	bcf	3,6	;RP1=0, select bank0
  3075  065A  00BC               	movwf	_date
  3076  065B  3000               	movlw	0
  3077  065C  2E75               	goto	L2
  3078  065D                     l305:	
  3079                           ;LCDTime.c: 277: }
  3080                           
  3081                           
  3082                           ;LCDTime.c: 278: else if (state & 0x20)
  3083  065D  1ECD               	btfss	_state,5
  3084  065E  2E76               	goto	l2411
  3085                           
  3086                           ;LCDTime.c: 279: {
  3087                           ;LCDTime.c: 280: date--;
  3088  065F  30FF               	movlw	255
  3089  0660  07BC               	addwf	_date,f
  3090  0661  1803               	skipnc
  3091  0662  0ABD               	incf	_date+1,f
  3092  0663  30FF               	movlw	255
  3093  0664  07BD               	addwf	_date+1,f
  3094                           
  3095                           ;LCDTime.c: 281: if (date < 0)
  3096  0665  1FBD               	btfss	_date+1,7
  3097  0666  2E76               	goto	l2411
  3098                           
  3099                           ;LCDTime.c: 282: date = monthDays[month-1] ;
  3100  0667  0844               	movf	_month,w
  3101  0668  3EFF               	addlw	255
  3102  0669  3E1D               	addlw	low ((_monthDays-__stringbase)| (0+32768))
  3103  066A  0084               	movwf	4
  3104  066B  120A  118A  2003  120A  118A  	fcall	stringdir
  3105  0670  00A8               	movwf	??_doMenu
  3106  0671  01A9               	clrf	??_doMenu+1
  3107  0672  0828               	movf	??_doMenu,w
  3108  0673  00BC               	movwf	_date
  3109  0674  0829               	movf	??_doMenu+1,w
  3110  0675                     L2:	
  3111  0675  00BD               	movwf	_date+1
  3112  0676                     l2411:	
  3113                           
  3114                           ;LCDTime.c: 283: }
  3115                           ;LCDTime.c: 285: if (state)
  3116  0676  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0677  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0678  084D               	movf	_state,w
  3119  0679  1903               	btfsc	3,2
  3120  067A  2E30               	goto	l2415
  3121                           
  3122                           ;LCDTime.c: 286: {
  3123                           ;LCDTime.c: 287: LCDGotoXY(0,1) ;
  3124  067B  01FC               	clrf	LCDGotoXY@y
  3125  067C  0AFC               	incf	LCDGotoXY@y,f
  3126  067D  3000               	movlw	0
  3127  067E  120A  158A  23EF  120A  118A  	fcall	_LCDGotoXY
  3128                           
  3129                           ;LCDTime.c: 288: showDate();
  3130  0683  120A  118A  21B2  120A  118A  	fcall	_showDate
  3131  0688  2E30               	goto	l2415
  3132  0689                     l2417:	
  3133                           ;LCDTime.c: 289: }
  3134                           ;LCDTime.c: 290: }
  3135                           ;LCDTime.c: 292: while(bButton)
  3136                           
  3137                           
  3138                           ;LCDTime.c: 293: readInputs();
  3139  0689  120A  158A  24BC  120A  118A  	fcall	_readInputs
  3140  068E                     l2419:	
  3141  068E  1283               	bcf	3,5	;RP0=0, select bank0
  3142  068F  1303               	bcf	3,6	;RP1=0, select bank0
  3143  0690  084B               	movf	_bButton,w
  3144  0691  1D03               	btfss	3,2
  3145  0692  2E89               	goto	l2417
  3146                           
  3147                           ;LCDTime.c: 295: LCDGotoXY(0,0) ;
  3148  0693  01FC               	clrf	LCDGotoXY@y
  3149  0694  3000               	movlw	0
  3150  0695  120A  158A  23EF  120A  118A  	fcall	_LCDGotoXY
  3151                           
  3152                           ;LCDTime.c: 296: LCDWriteString("Set Day  ");
  3153  069A  3041               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3154  069B  120A  158A  2644  120A  118A  	fcall	_LCDWriteString
  3155  06A0                     l2443:	
  3156                           ;LCDTime.c: 298: while(!bButton)
  3157                           
  3158  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  3159  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  3160  06A2  084B               	movf	_bButton,w
  3161  06A3  1D03               	btfss	3,2
  3162  06A4  2EE4               	goto	l2445
  3163                           
  3164                           ;LCDTime.c: 299: {
  3165                           ;LCDTime.c: 300: readInputs();
  3166  06A5  120A  158A  24BC  120A  118A  	fcall	_readInputs
  3167                           
  3168                           ;LCDTime.c: 302: if (state & 0x10)
  3169  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3170  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  3171  06AC  1E4D               	btfss	_state,4
  3172  06AD  2EC3               	goto	l317
  3173                           
  3174                           ;LCDTime.c: 303: {
  3175                           ;LCDTime.c: 304: day++;
  3176  06AE  3001               	movlw	1
  3177  06AF  07BE               	addwf	_day,f
  3178  06B0  1803               	skipnc
  3179  06B1  0ABF               	incf	_day+1,f
  3180  06B2  3000               	movlw	0
  3181  06B3  07BF               	addwf	_day+1,f
  3182                           
  3183                           ;LCDTime.c: 305: if (day > 7)
  3184  06B4  083F               	movf	_day+1,w
  3185  06B5  3A80               	xorlw	128
  3186  06B6  00FF               	movwf	127
  3187  06B7  3080               	movlw	128
  3188  06B8  027F               	subwf	127,w
  3189  06B9  1D03               	skipz
  3190  06BA  2EBD               	goto	u2205
  3191  06BB  3008               	movlw	8
  3192  06BC  023E               	subwf	_day,w
  3193  06BD                     u2205:	
  3194  06BD  1C03               	skipc
  3195  06BE  2ED1               	goto	l2439
  3196                           
  3197                           ;LCDTime.c: 306: day = 1 ;
  3198  06BF  3001               	movlw	1
  3199  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  3200  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  3201  06C2  2ECE               	goto	L3
  3202  06C3                     l317:	
  3203                           ;LCDTime.c: 307: }
  3204                           
  3205                           
  3206                           ;LCDTime.c: 308: else if (state & 0x20)
  3207  06C3  1ECD               	btfss	_state,5
  3208  06C4  2ED1               	goto	l2439
  3209                           
  3210                           ;LCDTime.c: 309: {
  3211                           ;LCDTime.c: 310: day--;
  3212  06C5  30FF               	movlw	255
  3213  06C6  07BE               	addwf	_day,f
  3214  06C7  1803               	skipnc
  3215  06C8  0ABF               	incf	_day+1,f
  3216  06C9  30FF               	movlw	255
  3217  06CA  07BF               	addwf	_day+1,f
  3218                           
  3219                           ;LCDTime.c: 311: if (day < 0)
  3220  06CB  1FBF               	btfss	_day+1,7
  3221  06CC  2ED1               	goto	l2439
  3222                           
  3223                           ;LCDTime.c: 312: day = 7 ;
  3224  06CD  3007               	movlw	7
  3225  06CE                     L3:	
  3226  06CE  00BE               	movwf	_day
  3227  06CF  3000               	movlw	0
  3228  06D0  00BF               	movwf	_day+1
  3229  06D1                     l2439:	
  3230                           
  3231                           ;LCDTime.c: 313: }
  3232                           ;LCDTime.c: 315: if (state)
  3233  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  3234  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  3235  06D3  084D               	movf	_state,w
  3236  06D4  1903               	btfsc	3,2
  3237  06D5  2EA0               	goto	l2443
  3238                           
  3239                           ;LCDTime.c: 316: {
  3240                           ;LCDTime.c: 317: LCDGotoXY(0,1) ;
  3241  06D6  01FC               	clrf	LCDGotoXY@y
  3242  06D7  0AFC               	incf	LCDGotoXY@y,f
  3243  06D8  3000               	movlw	0
  3244  06D9  120A  158A  23EF  120A  118A  	fcall	_LCDGotoXY
  3245                           
  3246                           ;LCDTime.c: 318: showDate();
  3247  06DE  120A  118A  21B2  120A  118A  	fcall	_showDate
  3248  06E3  2EA0               	goto	l2443
  3249  06E4                     l2445:	
  3250                           
  3251                           ;LCDTime.c: 319: }
  3252                           ;LCDTime.c: 320: }
  3253                           ;LCDTime.c: 322: if (n != day || d != date || m != month || y != year)
  3254  06E4  083F               	movf	_day+1,w
  3255  06E5  0632               	xorwf	doMenu@n+1,w
  3256  06E6  1D03               	skipz
  3257  06E7  2EEA               	goto	u2255
  3258  06E8  083E               	movf	_day,w
  3259  06E9  0631               	xorwf	doMenu@n,w
  3260  06EA                     u2255:	
  3261  06EA  1D03               	skipz
  3262  06EB  2F04               	goto	l2453
  3263  06EC  083D               	movf	_date+1,w
  3264  06ED  0634               	xorwf	doMenu@d+1,w
  3265  06EE  1D03               	skipz
  3266  06EF  2EF2               	goto	u2265
  3267  06F0  083C               	movf	_date,w
  3268  06F1  0633               	xorwf	doMenu@d,w
  3269  06F2                     u2265:	
  3270  06F2  1D03               	skipz
  3271  06F3  2F04               	goto	l2453
  3272  06F4  0845               	movf	_month+1,w
  3273  06F5  0636               	xorwf	doMenu@m_251+1,w
  3274  06F6  1D03               	skipz
  3275  06F7  2EFA               	goto	u2275
  3276  06F8  0844               	movf	_month,w
  3277  06F9  0635               	xorwf	doMenu@m_251,w
  3278  06FA                     u2275:	
  3279  06FA  1D03               	skipz
  3280  06FB  2F04               	goto	l2453
  3281  06FC  0849               	movf	_year+1,w
  3282  06FD  0638               	xorwf	doMenu@y+1,w
  3283  06FE  1D03               	skipz
  3284  06FF  2F02               	goto	u2285
  3285  0700  0848               	movf	_year,w
  3286  0701  0637               	xorwf	doMenu@y,w
  3287  0702                     u2285:	
  3288  0702  1903               	skipnz
  3289  0703  2FE2               	goto	l2457
  3290  0704                     l2453:	
  3291                           
  3292                           ;LCDTime.c: 323: {
  3293                           ;LCDTime.c: 324: n = ((day / 10) << 4) + day % 10 ;
  3294  0704  300A               	movlw	10
  3295  0705  00F0               	movwf	___awdiv@divisor
  3296  0706  3000               	movlw	0
  3297  0707  00F1               	movwf	___awdiv@divisor+1
  3298  0708  083F               	movf	_day+1,w
  3299  0709  00F3               	movwf	___awdiv@dividend+1
  3300  070A  083E               	movf	_day,w
  3301  070B  00F2               	movwf	___awdiv@dividend
  3302  070C  120A  158A  26EA  120A  118A  	fcall	___awdiv
  3303  0711  0870               	movf	?___awdiv,w
  3304  0712  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0713  1303               	bcf	3,6	;RP1=0, select bank0
  3306  0714  00A8               	movwf	??_doMenu
  3307  0715  0871               	movf	?___awdiv+1,w
  3308  0716  00A9               	movwf	??_doMenu+1
  3309  0717  0EA8               	swapf	??_doMenu,f
  3310  0718  0EA9               	swapf	??_doMenu+1,f
  3311  0719  30F0               	movlw	240
  3312  071A  05A9               	andwf	??_doMenu+1,f
  3313  071B  0828               	movf	??_doMenu,w
  3314  071C  390F               	andlw	15
  3315  071D  04A9               	iorwf	??_doMenu+1,f
  3316  071E  30F0               	movlw	240
  3317  071F  05A8               	andwf	??_doMenu,f
  3318  0720  300A               	movlw	10
  3319  0721  00F0               	movwf	___awmod@divisor
  3320  0722  3000               	movlw	0
  3321  0723  00F1               	movwf	___awmod@divisor+1
  3322  0724  083F               	movf	_day+1,w
  3323  0725  00F3               	movwf	___awmod@dividend+1
  3324  0726  083E               	movf	_day,w
  3325  0727  00F2               	movwf	___awmod@dividend
  3326  0728  120A  158A  2559  120A  118A  	fcall	___awmod
  3327  072D  0870               	movf	?___awmod,w
  3328  072E  1283               	bcf	3,5	;RP0=0, select bank0
  3329  072F  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0730  0728               	addwf	??_doMenu,w
  3331  0731  00B1               	movwf	doMenu@n
  3332  0732  0871               	movf	?___awmod+1,w
  3333  0733  1803               	skipnc
  3334  0734  0A71               	incf	?___awmod+1,w
  3335  0735  0729               	addwf	??_doMenu+1,w
  3336  0736  00B2               	movwf	doMenu@n+1
  3337                           
  3338                           ;LCDTime.c: 325: d = ((date / 10) << 4) + date % 10 ;
  3339  0737  300A               	movlw	10
  3340  0738  00F0               	movwf	___awdiv@divisor
  3341  0739  3000               	movlw	0
  3342  073A  00F1               	movwf	___awdiv@divisor+1
  3343  073B  083D               	movf	_date+1,w
  3344  073C  00F3               	movwf	___awdiv@dividend+1
  3345  073D  083C               	movf	_date,w
  3346  073E  00F2               	movwf	___awdiv@dividend
  3347  073F  120A  158A  26EA  120A  118A  	fcall	___awdiv
  3348  0744  0870               	movf	?___awdiv,w
  3349  0745  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0746  1303               	bcf	3,6	;RP1=0, select bank0
  3351  0747  00A8               	movwf	??_doMenu
  3352  0748  0871               	movf	?___awdiv+1,w
  3353  0749  00A9               	movwf	??_doMenu+1
  3354  074A  0EA8               	swapf	??_doMenu,f
  3355  074B  0EA9               	swapf	??_doMenu+1,f
  3356  074C  30F0               	movlw	240
  3357  074D  05A9               	andwf	??_doMenu+1,f
  3358  074E  0828               	movf	??_doMenu,w
  3359  074F  390F               	andlw	15
  3360  0750  04A9               	iorwf	??_doMenu+1,f
  3361  0751  30F0               	movlw	240
  3362  0752  05A8               	andwf	??_doMenu,f
  3363  0753  300A               	movlw	10
  3364  0754  00F0               	movwf	___awmod@divisor
  3365  0755  3000               	movlw	0
  3366  0756  00F1               	movwf	___awmod@divisor+1
  3367  0757  083D               	movf	_date+1,w
  3368  0758  00F3               	movwf	___awmod@dividend+1
  3369  0759  083C               	movf	_date,w
  3370  075A  00F2               	movwf	___awmod@dividend
  3371  075B  120A  158A  2559  120A  118A  	fcall	___awmod
  3372  0760  0870               	movf	?___awmod,w
  3373  0761  1283               	bcf	3,5	;RP0=0, select bank0
  3374  0762  1303               	bcf	3,6	;RP1=0, select bank0
  3375  0763  0728               	addwf	??_doMenu,w
  3376  0764  00B3               	movwf	doMenu@d
  3377  0765  0871               	movf	?___awmod+1,w
  3378  0766  1803               	skipnc
  3379  0767  0A71               	incf	?___awmod+1,w
  3380  0768  0729               	addwf	??_doMenu+1,w
  3381  0769  00B4               	movwf	doMenu@d+1
  3382                           
  3383                           ;LCDTime.c: 326: m = ((month / 10) << 4) + month % 10 ;
  3384  076A  300A               	movlw	10
  3385  076B  00F0               	movwf	___awdiv@divisor
  3386  076C  3000               	movlw	0
  3387  076D  00F1               	movwf	___awdiv@divisor+1
  3388  076E  0845               	movf	_month+1,w
  3389  076F  00F3               	movwf	___awdiv@dividend+1
  3390  0770  0844               	movf	_month,w
  3391  0771  00F2               	movwf	___awdiv@dividend
  3392  0772  120A  158A  26EA  120A  118A  	fcall	___awdiv
  3393  0777  0870               	movf	?___awdiv,w
  3394  0778  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0779  1303               	bcf	3,6	;RP1=0, select bank0
  3396  077A  00A8               	movwf	??_doMenu
  3397  077B  0871               	movf	?___awdiv+1,w
  3398  077C  00A9               	movwf	??_doMenu+1
  3399  077D  0EA8               	swapf	??_doMenu,f
  3400  077E  0EA9               	swapf	??_doMenu+1,f
  3401  077F  30F0               	movlw	240
  3402  0780  05A9               	andwf	??_doMenu+1,f
  3403  0781  0828               	movf	??_doMenu,w
  3404  0782  390F               	andlw	15
  3405  0783  04A9               	iorwf	??_doMenu+1,f
  3406  0784  30F0               	movlw	240
  3407  0785  05A8               	andwf	??_doMenu,f
  3408  0786  300A               	movlw	10
  3409  0787  00F0               	movwf	___awmod@divisor
  3410  0788  3000               	movlw	0
  3411  0789  00F1               	movwf	___awmod@divisor+1
  3412  078A  0845               	movf	_month+1,w
  3413  078B  00F3               	movwf	___awmod@dividend+1
  3414  078C  0844               	movf	_month,w
  3415  078D  00F2               	movwf	___awmod@dividend
  3416  078E  120A  158A  2559  120A  118A  	fcall	___awmod
  3417  0793  0870               	movf	?___awmod,w
  3418  0794  1283               	bcf	3,5	;RP0=0, select bank0
  3419  0795  1303               	bcf	3,6	;RP1=0, select bank0
  3420  0796  0728               	addwf	??_doMenu,w
  3421  0797  00B5               	movwf	doMenu@m_251
  3422  0798  0871               	movf	?___awmod+1,w
  3423  0799  1803               	skipnc
  3424  079A  0A71               	incf	?___awmod+1,w
  3425  079B  0729               	addwf	??_doMenu+1,w
  3426  079C  00B6               	movwf	doMenu@m_251+1
  3427                           
  3428                           ;LCDTime.c: 327: y = ((year / 10) << 4) + year % 10 ;
  3429  079D  300A               	movlw	10
  3430  079E  00F0               	movwf	___awdiv@divisor
  3431  079F  3000               	movlw	0
  3432  07A0  00F1               	movwf	___awdiv@divisor+1
  3433  07A1  0849               	movf	_year+1,w
  3434  07A2  00F3               	movwf	___awdiv@dividend+1
  3435  07A3  0848               	movf	_year,w
  3436  07A4  00F2               	movwf	___awdiv@dividend
  3437  07A5  120A  158A  26EA  120A  118A  	fcall	___awdiv
  3438  07AA  0870               	movf	?___awdiv,w
  3439  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  3440  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  3441  07AD  00A8               	movwf	??_doMenu
  3442  07AE  0871               	movf	?___awdiv+1,w
  3443  07AF  00A9               	movwf	??_doMenu+1
  3444  07B0  0EA8               	swapf	??_doMenu,f
  3445  07B1  0EA9               	swapf	??_doMenu+1,f
  3446  07B2  30F0               	movlw	240
  3447  07B3  05A9               	andwf	??_doMenu+1,f
  3448  07B4  0828               	movf	??_doMenu,w
  3449  07B5  390F               	andlw	15
  3450  07B6  04A9               	iorwf	??_doMenu+1,f
  3451  07B7  30F0               	movlw	240
  3452  07B8  05A8               	andwf	??_doMenu,f
  3453  07B9  300A               	movlw	10
  3454  07BA  00F0               	movwf	___awmod@divisor
  3455  07BB  3000               	movlw	0
  3456  07BC  00F1               	movwf	___awmod@divisor+1
  3457  07BD  0849               	movf	_year+1,w
  3458  07BE  00F3               	movwf	___awmod@dividend+1
  3459  07BF  0848               	movf	_year,w
  3460  07C0  00F2               	movwf	___awmod@dividend
  3461  07C1  120A  158A  2559  120A  118A  	fcall	___awmod
  3462  07C6  0870               	movf	?___awmod,w
  3463  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  3464  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  3465  07C9  0728               	addwf	??_doMenu,w
  3466  07CA  00B7               	movwf	doMenu@y
  3467  07CB  0871               	movf	?___awmod+1,w
  3468  07CC  1803               	skipnc
  3469  07CD  0A71               	incf	?___awmod+1,w
  3470  07CE  0729               	addwf	??_doMenu+1,w
  3471  07CF  00B8               	movwf	doMenu@y+1
  3472                           
  3473                           ;LCDTime.c: 329: DS1307_SetDate(n,d,m,y) ;
  3474  07D0  0833               	movf	doMenu@d,w
  3475  07D1  00A8               	movwf	??_doMenu
  3476  07D2  0828               	movf	??_doMenu,w
  3477  07D3  00F5               	movwf	DS1307_SetDate@dd
  3478  07D4  0835               	movf	doMenu@m_251,w
  3479  07D5  00A9               	movwf	??_doMenu+1
  3480  07D6  0829               	movf	??_doMenu+1,w
  3481  07D7  00F6               	movwf	DS1307_SetDate@mm
  3482  07D8  0837               	movf	doMenu@y,w
  3483  07D9  00AA               	movwf	??_doMenu+2
  3484  07DA  082A               	movf	??_doMenu+2,w
  3485  07DB  00F7               	movwf	DS1307_SetDate@yy
  3486  07DC  0831               	movf	doMenu@n,w
  3487  07DD  120A  158A  248E  120A  118A  	fcall	_DS1307_SetDate
  3488  07E2                     l2457:	
  3489                           ;LCDTime.c: 330: }
  3490                           ;LCDTime.c: 333: while(bButton)
  3491                           
  3492  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  3493  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  3494  07E4  084B               	movf	_bButton,w
  3495  07E5  1903               	btfsc	3,2
  3496  07E6  0008               	return
  3497                           
  3498                           ;LCDTime.c: 334: readInputs();
  3499  07E7  120A  158A  24BC  120A  118A  	fcall	_readInputs
  3500  07EC  2FE2               	goto	l2457
  3501  07ED                     __end_of_doMenu:	
  3502                           
  3503                           	psect	text10
  3504  0CEB                     __ptext10:	
  3505 ;; *************** function _showTime *****************
  3506 ;; Defined at:
  3507 ;;		line 390 in file "LCDTime.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0, pclath, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         0       0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0
  3523 ;;      Temps:          1       0       0       0       0
  3524 ;;      Totals:         1       0       0       0       0
  3525 ;;Total ram usage:        1 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    3
  3528 ;; This function calls:
  3529 ;;		_LCDByte
  3530 ;;		_LCDWriteInt
  3531 ;; This function is called by:
  3532 ;;		_doMenu
  3533 ;;		_showClock
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           
  3538                           ;psect for function _showTime
  3539  0CEB                     _showTime:	
  3540                           
  3541                           ;LCDTime.c: 392: LCDWriteInt(hour,2);
  3542                           
  3543                           ;incstack = 0
  3544                           ; Regs used in _showTime: [wreg+status,2+status,0+pclath+cstack]
  3545  0CEB  3002               	movlw	2
  3546  0CEC  00FD               	movwf	??_showTime
  3547  0CED  087D               	movf	??_showTime,w
  3548  0CEE  00FC               	movwf	LCDWriteInt@field_length
  3549  0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  3550  0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  3551  0CF1  0840               	movf	_hour,w
  3552  0CF2  120A  118A  214A  120A  158A  	fcall	_LCDWriteInt
  3553                           
  3554                           ;LCDTime.c: 393: (LCDByte(':',1)) ;
  3555  0CF7  01F5               	clrf	LCDByte@isdata
  3556  0CF8  0AF5               	incf	LCDByte@isdata,f
  3557  0CF9  303A               	movlw	58
  3558  0CFA  120A  158A  25F4  120A  158A  	fcall	_LCDByte
  3559                           
  3560                           ;LCDTime.c: 394: LCDWriteInt(minute,2);
  3561  0CFF  3002               	movlw	2
  3562  0D00  00FD               	movwf	??_showTime
  3563  0D01  087D               	movf	??_showTime,w
  3564  0D02  00FC               	movwf	LCDWriteInt@field_length
  3565  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0D05  0842               	movf	_minute,w
  3568  0D06  120A  118A  214A  120A  158A  	fcall	_LCDWriteInt
  3569                           
  3570                           ;LCDTime.c: 395: (LCDByte(':',1)) ;
  3571  0D0B  01F5               	clrf	LCDByte@isdata
  3572  0D0C  0AF5               	incf	LCDByte@isdata,f
  3573  0D0D  303A               	movlw	58
  3574  0D0E  120A  158A  25F4  120A  158A  	fcall	_LCDByte
  3575                           
  3576                           ;LCDTime.c: 396: LCDWriteInt(seconds,2);
  3577  0D13  3002               	movlw	2
  3578  0D14  00FD               	movwf	??_showTime
  3579  0D15  087D               	movf	??_showTime,w
  3580  0D16  00FC               	movwf	LCDWriteInt@field_length
  3581  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  3582  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  3583  0D19  0846               	movf	_seconds,w
  3584  0D1A  120A  118A  214A   	fcall	_LCDWriteInt
  3585  0D1D  0008               	return
  3586  0D1E                     __end_of_showTime:	
  3587                           
  3588                           	psect	text11
  3589  01B2                     __ptext11:	
  3590 ;; *************** function _showDate *****************
  3591 ;; Defined at:
  3592 ;;		line 399 in file "LCDTime.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3606 ;;      Params:         0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0
  3608 ;;      Temps:          1       0       0       0       0
  3609 ;;      Totals:         1       0       0       0       0
  3610 ;;Total ram usage:        1 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    3
  3613 ;; This function calls:
  3614 ;;		_LCDByte
  3615 ;;		_LCDWriteInt
  3616 ;;		_LCDWriteString
  3617 ;; This function is called by:
  3618 ;;		_doMenu
  3619 ;;		_showClock
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           
  3624                           ;psect for function _showDate
  3625  01B2                     _showDate:	
  3626                           
  3627                           ;LCDTime.c: 401: LCDWriteInt(date,2);
  3628                           
  3629                           ;incstack = 0
  3630                           ; Regs used in _showDate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3631  01B2  3002               	movlw	2
  3632  01B3  00FD               	movwf	??_showDate
  3633  01B4  087D               	movf	??_showDate,w
  3634  01B5  00FC               	movwf	LCDWriteInt@field_length
  3635  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  3636  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  3637  01B8  083C               	movf	_date,w
  3638  01B9  120A  118A  214A  120A  118A  	fcall	_LCDWriteInt
  3639                           
  3640                           ;LCDTime.c: 402: (LCDByte('/',1)) ;
  3641  01BE  01F5               	clrf	LCDByte@isdata
  3642  01BF  0AF5               	incf	LCDByte@isdata,f
  3643  01C0  302F               	movlw	47
  3644  01C1  120A  158A  25F4  120A  118A  	fcall	_LCDByte
  3645                           
  3646                           ;LCDTime.c: 403: LCDWriteInt(month,2);
  3647  01C6  3002               	movlw	2
  3648  01C7  00FD               	movwf	??_showDate
  3649  01C8  087D               	movf	??_showDate,w
  3650  01C9  00FC               	movwf	LCDWriteInt@field_length
  3651  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  3652  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  3653  01CC  0844               	movf	_month,w
  3654  01CD  120A  118A  214A  120A  118A  	fcall	_LCDWriteInt
  3655                           
  3656                           ;LCDTime.c: 404: (LCDByte('/',1)) ;
  3657  01D2  01F5               	clrf	LCDByte@isdata
  3658  01D3  0AF5               	incf	LCDByte@isdata,f
  3659  01D4  302F               	movlw	47
  3660  01D5  120A  158A  25F4  120A  118A  	fcall	_LCDByte
  3661                           
  3662                           ;LCDTime.c: 405: (LCDByte('2',1)) ;
  3663  01DA  01F5               	clrf	LCDByte@isdata
  3664  01DB  0AF5               	incf	LCDByte@isdata,f
  3665  01DC  3032               	movlw	50
  3666  01DD  120A  158A  25F4  120A  118A  	fcall	_LCDByte
  3667                           
  3668                           ;LCDTime.c: 406: (LCDByte('0',1)) ;
  3669  01E2  01F5               	clrf	LCDByte@isdata
  3670  01E3  0AF5               	incf	LCDByte@isdata,f
  3671  01E4  3030               	movlw	48
  3672  01E5  120A  158A  25F4  120A  118A  	fcall	_LCDByte
  3673                           
  3674                           ;LCDTime.c: 407: LCDWriteInt(year,2);
  3675  01EA  3002               	movlw	2
  3676  01EB  00FD               	movwf	??_showDate
  3677  01EC  087D               	movf	??_showDate,w
  3678  01ED  00FC               	movwf	LCDWriteInt@field_length
  3679  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  3680  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  3681  01F0  0848               	movf	_year,w
  3682  01F1  120A  118A  214A  120A  118A  	fcall	_LCDWriteInt
  3683                           
  3684                           ;LCDTime.c: 408: (LCDByte(32,1)) ;
  3685  01F6  01F5               	clrf	LCDByte@isdata
  3686  01F7  0AF5               	incf	LCDByte@isdata,f
  3687  01F8  3020               	movlw	32
  3688  01F9  120A  158A  25F4  120A  118A  	fcall	_LCDByte
  3689                           
  3690                           ;LCDTime.c: 409: (LCDByte(32,1)) ;
  3691  01FE  01F5               	clrf	LCDByte@isdata
  3692  01FF  0AF5               	incf	LCDByte@isdata,f
  3693  0200  3020               	movlw	32
  3694  0201  120A  158A  25F4  120A  118A  	fcall	_LCDByte
  3695                           
  3696                           ;LCDTime.c: 410: switch(day)
  3697  0206  2A2A               	goto	l2051
  3698  0207                     l2035:	
  3699                           ;LCDTime.c: 411: {
  3700                           ;LCDTime.c: 412: case 1 : LCDWriteString("Mon") ; break ;
  3701                           
  3702  0207  307E               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3703  0208  120A  158A  2644   	fcall	_LCDWriteString
  3704  020B  0008               	return
  3705  020C                     l2037:	
  3706                           ;LCDTime.c: 413: case 2 : LCDWriteString("Tue") ; break ;
  3707                           
  3708  020C  3076               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3709  020D  120A  158A  2644   	fcall	_LCDWriteString
  3710  0210  0008               	return
  3711  0211                     l2039:	
  3712                           ;LCDTime.c: 414: case 3 : LCDWriteString("Wed") ; break ;
  3713                           
  3714  0211  3072               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3715  0212  120A  158A  2644   	fcall	_LCDWriteString
  3716  0215  0008               	return
  3717  0216                     l2041:	
  3718                           ;LCDTime.c: 415: case 4 : LCDWriteString("Thu") ; break ;
  3719                           
  3720  0216  308A               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3721  0217  120A  158A  2644   	fcall	_LCDWriteString
  3722  021A  0008               	return
  3723  021B                     l2043:	
  3724                           ;LCDTime.c: 416: case 5 : LCDWriteString("Fri") ; break ;
  3725                           
  3726  021B  307A               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3727  021C  120A  158A  2644   	fcall	_LCDWriteString
  3728  021F  0008               	return
  3729  0220                     l2045:	
  3730                           ;LCDTime.c: 417: case 6 : LCDWriteString("Sat") ; break ;
  3731                           
  3732  0220  3086               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3733  0221  120A  158A  2644   	fcall	_LCDWriteString
  3734  0224  0008               	return
  3735  0225                     l2047:	
  3736                           ;LCDTime.c: 418: case 7 : LCDWriteString("Sun") ; break ;
  3737                           
  3738  0225  3082               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3739  0226  120A  158A  2644   	fcall	_LCDWriteString
  3740                           
  3741                           ;LCDTime.c: 419: } ;
  3742  0229  0008               	return
  3743  022A                     l2051:	
  3744                           
  3745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3746                           ; Switch size 1, requested type "space"
  3747                           ; Number of cases is 1, Range of values is 0 to 0
  3748                           ; switch strategies available:
  3749                           ; Name         Instructions Cycles
  3750                           ; simple_byte            4     3 (average)
  3751                           ; direct_byte           11     8 (fixed)
  3752                           ; jumptable            260     6 (fixed)
  3753                           ;	Chosen strategy is simple_byte
  3754  022A  1283               	bcf	3,5	;RP0=0, select bank0
  3755  022B  1303               	bcf	3,6	;RP1=0, select bank0
  3756  022C  083F               	movf	_day+1,w
  3757  022D  3A00               	xorlw	0	; case 0
  3758  022E  1903               	skipnz
  3759  022F  2A31               	goto	l2503
  3760  0230  2A48               	goto	l357
  3761  0231                     l2503:	
  3762                           
  3763                           ; Switch size 1, requested type "space"
  3764                           ; Number of cases is 7, Range of values is 1 to 7
  3765                           ; switch strategies available:
  3766                           ; Name         Instructions Cycles
  3767                           ; simple_byte           22    12 (average)
  3768                           ; direct_byte           32    11 (fixed)
  3769                           ; jumptable            263     9 (fixed)
  3770                           ;	Chosen strategy is simple_byte
  3771  0231  083E               	movf	_day,w
  3772  0232  3A01               	xorlw	1	; case 1
  3773  0233  1903               	skipnz
  3774  0234  2A07               	goto	l2035
  3775  0235  3A03               	xorlw	3	; case 2
  3776  0236  1903               	skipnz
  3777  0237  2A0C               	goto	l2037
  3778  0238  3A01               	xorlw	1	; case 3
  3779  0239  1903               	skipnz
  3780  023A  2A11               	goto	l2039
  3781  023B  3A07               	xorlw	7	; case 4
  3782  023C  1903               	skipnz
  3783  023D  2A16               	goto	l2041
  3784  023E  3A01               	xorlw	1	; case 5
  3785  023F  1903               	skipnz
  3786  0240  2A1B               	goto	l2043
  3787  0241  3A03               	xorlw	3	; case 6
  3788  0242  1903               	skipnz
  3789  0243  2A20               	goto	l2045
  3790  0244  3A01               	xorlw	1	; case 7
  3791  0245  1903               	skipnz
  3792  0246  2A25               	goto	l2047
  3793  0247  2A48               	goto	l357
  3794  0248                     l357:	
  3795  0248  0008               	return
  3796  0249                     __end_of_showDate:	
  3797                           
  3798                           	psect	text12
  3799  0E44                     __ptext12:	
  3800 ;; *************** function _LCDWriteString *****************
  3801 ;; Defined at:
  3802 ;;		line 225 in file "lcd_hd44780_pic16.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  msg             1    wreg     PTR const unsigned char 
  3805 ;;		 -> STR_14(4), STR_13(4), STR_12(4), STR_11(4), 
  3806 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(10), 
  3807 ;;		 -> STR_6(10), STR_5(10), STR_4(9), STR_3(12), 
  3808 ;;		 -> STR_2(12), STR_1(10), 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  msg             1    1[BANK0 ] PTR const unsigned char 
  3811 ;;		 -> STR_14(4), STR_13(4), STR_12(4), STR_11(4), 
  3812 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(10), 
  3813 ;;		 -> STR_6(10), STR_5(10), STR_4(9), STR_3(12), 
  3814 ;;		 -> STR_2(12), STR_1(10), 
  3815 ;;  cc              1    0[BANK0 ] char 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3825 ;;      Params:         0       0       0       0       0
  3826 ;;      Locals:         0       2       0       0       0
  3827 ;;      Temps:          1       0       0       0       0
  3828 ;;      Totals:         1       2       0       0       0
  3829 ;;Total ram usage:        3 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:    2
  3832 ;; This function calls:
  3833 ;;		_LCDByte
  3834 ;; This function is called by:
  3835 ;;		_doMenu
  3836 ;;		_showDate
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           
  3841                           ;psect for function _LCDWriteString
  3842  0E44                     _LCDWriteString:	
  3843                           
  3844                           ;incstack = 0
  3845                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3846                           ;LCDWriteString@msg stored from wreg
  3847  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  3848  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  3849  0E46  00A1               	movwf	LCDWriteString@msg
  3850  0E47                     l1909:	
  3851                           ;lcd_hd44780_pic16.c: 255: while(*msg!='\0')
  3852                           
  3853  0E47  0821               	movf	LCDWriteString@msg,w
  3854  0E48  0084               	movwf	4
  3855  0E49  120A  118A  2003  120A  158A  	fcall	stringdir
  3856  0E4E  3A00               	xorlw	0
  3857  0E4F  1903               	btfsc	3,2
  3858  0E50  0008               	return
  3859                           
  3860                           ;lcd_hd44780_pic16.c: 256: {
  3861                           ;lcd_hd44780_pic16.c: 258: if(*msg=='%')
  3862  0E51  0821               	movf	LCDWriteString@msg,w
  3863  0E52  0084               	movwf	4
  3864  0E53  120A  118A  2003  120A  158A  	fcall	stringdir
  3865  0E58  3A25               	xorlw	37
  3866  0E59  1D03               	skipz
  3867  0E5A  2E7D               	goto	l1905
  3868                           
  3869                           ;lcd_hd44780_pic16.c: 259: {
  3870                           ;lcd_hd44780_pic16.c: 260: msg++;
  3871  0E5B  3001               	movlw	1
  3872  0E5C  00FC               	movwf	??_LCDWriteString
  3873  0E5D  087C               	movf	??_LCDWriteString,w
  3874  0E5E  07A1               	addwf	LCDWriteString@msg,f
  3875                           
  3876                           ;lcd_hd44780_pic16.c: 261: int8_t cc=*msg-'0';
  3877  0E5F  0821               	movf	LCDWriteString@msg,w
  3878  0E60  0084               	movwf	4
  3879  0E61  120A  118A  2003  120A  158A  	fcall	stringdir
  3880  0E66  3ED0               	addlw	-48
  3881  0E67  00FC               	movwf	??_LCDWriteString
  3882  0E68  087C               	movf	??_LCDWriteString,w
  3883  0E69  00A0               	movwf	LCDWriteString@cc
  3884                           
  3885                           ;lcd_hd44780_pic16.c: 263: if(cc>=0 && cc<=7)
  3886  0E6A  1BA0               	btfsc	LCDWriteString@cc,7
  3887  0E6B  2E75               	goto	l1901
  3888  0E6C  0820               	movf	LCDWriteString@cc,w
  3889  0E6D  3A80               	xorlw	128
  3890  0E6E  3E78               	addlw	-136
  3891  0E6F  1803               	skipnc
  3892  0E70  2E75               	goto	l1901
  3893                           
  3894                           ;lcd_hd44780_pic16.c: 264: {
  3895                           ;lcd_hd44780_pic16.c: 265: (LCDByte(cc,1));
  3896  0E71  01F5               	clrf	LCDByte@isdata
  3897  0E72  0AF5               	incf	LCDByte@isdata,f
  3898  0E73  0820               	movf	LCDWriteString@cc,w
  3899  0E74  2E88               	goto	L6
  3900  0E75                     l1901:	
  3901                           ;lcd_hd44780_pic16.c: 266: }
  3902                           
  3903                           
  3904                           ;lcd_hd44780_pic16.c: 267: else
  3905                           ;lcd_hd44780_pic16.c: 268: {
  3906                           ;lcd_hd44780_pic16.c: 269: (LCDByte('%',1));
  3907  0E75  01F5               	clrf	LCDByte@isdata
  3908  0E76  0AF5               	incf	LCDByte@isdata,f
  3909  0E77  3025               	movlw	37
  3910  0E78  120A  158A  25F4  120A  158A  	fcall	_LCDByte
  3911  0E7D                     l1905:	
  3912                           ;lcd_hd44780_pic16.c: 271: }
  3913                           ;lcd_hd44780_pic16.c: 272: }
  3914                           
  3915                           ;lcd_hd44780_pic16.c: 270: (LCDByte(*msg,1));
  3916                           
  3917                           
  3918                           ;lcd_hd44780_pic16.c: 273: else
  3919                           ;lcd_hd44780_pic16.c: 274: {
  3920                           ;lcd_hd44780_pic16.c: 275: (LCDByte(*msg,1));
  3921  0E7D  01F5               	clrf	LCDByte@isdata
  3922  0E7E  0AF5               	incf	LCDByte@isdata,f
  3923  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3924  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  3925  0E81  0821               	movf	LCDWriteString@msg,w
  3926  0E82  0084               	movwf	4
  3927  0E83  120A  118A  2003  120A  158A  	fcall	stringdir
  3928  0E88                     L6:	
  3929  0E88  120A  158A  25F4  120A  158A  	fcall	_LCDByte
  3930                           
  3931                           ;lcd_hd44780_pic16.c: 276: }
  3932                           ;lcd_hd44780_pic16.c: 277: msg++;
  3933  0E8D  3001               	movlw	1
  3934  0E8E  00FC               	movwf	??_LCDWriteString
  3935  0E8F  087C               	movf	??_LCDWriteString,w
  3936  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  3937  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  3938  0E92  07A1               	addwf	LCDWriteString@msg,f
  3939  0E93  2E47               	goto	l1909
  3940  0E94                     __end_of_LCDWriteString:	
  3941                           
  3942                           	psect	text13
  3943  014A                     __ptext13:	
  3944 ;; *************** function _LCDWriteInt *****************
  3945 ;; Defined at:
  3946 ;;		line 323 in file "lcd_hd44780_pic16.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  val             1    wreg     unsigned char 
  3949 ;;  field_length    1   12[COMMON] char 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  val             1    7[BANK0 ] unsigned char 
  3952 ;;  d               2    5[BANK0 ] unsigned int 
  3953 ;;  c               2    3[BANK0 ] unsigned int 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2, status,0, pclath, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3963 ;;      Params:         1       0       0       0       0
  3964 ;;      Locals:         0       5       0       0       0
  3965 ;;      Temps:          0       3       0       0       0
  3966 ;;      Totals:         1       8       0       0       0
  3967 ;;Total ram usage:        9 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    2
  3970 ;; This function calls:
  3971 ;;		_LCDByte
  3972 ;;		___awdiv
  3973 ;;		___awmod
  3974 ;; This function is called by:
  3975 ;;		_showTime
  3976 ;;		_showDate
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           
  3981                           ;psect for function _LCDWriteInt
  3982  014A                     _LCDWriteInt:	
  3983                           
  3984                           ;incstack = 0
  3985                           ; Regs used in _LCDWriteInt: [wreg+status,2+status,0+pclath+cstack]
  3986                           ;LCDWriteInt@val stored from wreg
  3987  014A  1283               	bcf	3,5	;RP0=0, select bank0
  3988  014B  1303               	bcf	3,6	;RP1=0, select bank0
  3989  014C  00A7               	movwf	LCDWriteInt@val
  3990                           
  3991                           ;lcd_hd44780_pic16.c: 325: unsigned int c,d ;
  3992                           ;lcd_hd44780_pic16.c: 327: c = 0x30 + (val % 10) ;
  3993  014D  300A               	movlw	10
  3994  014E  00F0               	movwf	___awmod@divisor
  3995  014F  3000               	movlw	0
  3996  0150  00F1               	movwf	___awmod@divisor+1
  3997  0151  0827               	movf	LCDWriteInt@val,w
  3998  0152  00A0               	movwf	??_LCDWriteInt
  3999  0153  01A1               	clrf	??_LCDWriteInt+1
  4000  0154  0820               	movf	??_LCDWriteInt,w
  4001  0155  00F2               	movwf	___awmod@dividend
  4002  0156  0821               	movf	??_LCDWriteInt+1,w
  4003  0157  00F3               	movwf	___awmod@dividend+1
  4004  0158  120A  158A  2559  120A  118A  	fcall	___awmod
  4005  015D  0870               	movf	?___awmod,w
  4006  015E  3E30               	addlw	48
  4007  015F  1283               	bcf	3,5	;RP0=0, select bank0
  4008  0160  1303               	bcf	3,6	;RP1=0, select bank0
  4009  0161  00A3               	movwf	LCDWriteInt@c
  4010  0162  0871               	movf	?___awmod+1,w
  4011  0163  1803               	skipnc
  4012  0164  3E01               	addlw	1
  4013  0165  3E00               	addlw	0
  4014  0166  00A4               	movwf	LCDWriteInt@c+1
  4015                           
  4016                           ;lcd_hd44780_pic16.c: 328: val=val/10;
  4017  0167  300A               	movlw	10
  4018  0168  00F0               	movwf	___awdiv@divisor
  4019  0169  3000               	movlw	0
  4020  016A  00F1               	movwf	___awdiv@divisor+1
  4021  016B  0827               	movf	LCDWriteInt@val,w
  4022  016C  00A0               	movwf	??_LCDWriteInt
  4023  016D  01A1               	clrf	??_LCDWriteInt+1
  4024  016E  0820               	movf	??_LCDWriteInt,w
  4025  016F  00F2               	movwf	___awdiv@dividend
  4026  0170  0821               	movf	??_LCDWriteInt+1,w
  4027  0171  00F3               	movwf	___awdiv@dividend+1
  4028  0172  120A  158A  26EA  120A  118A  	fcall	___awdiv
  4029  0177  0870               	movf	?___awdiv,w
  4030  0178  1283               	bcf	3,5	;RP0=0, select bank0
  4031  0179  1303               	bcf	3,6	;RP1=0, select bank0
  4032  017A  00A2               	movwf	??_LCDWriteInt+2
  4033  017B  0822               	movf	??_LCDWriteInt+2,w
  4034  017C  00A7               	movwf	LCDWriteInt@val
  4035                           
  4036                           ;lcd_hd44780_pic16.c: 329: d = 0x30 + val ;
  4037  017D  0827               	movf	LCDWriteInt@val,w
  4038  017E  3E30               	addlw	48
  4039  017F  00A5               	movwf	LCDWriteInt@d
  4040  0180  3000               	movlw	0
  4041  0181  1803               	skipnc
  4042  0182  3001               	movlw	1
  4043  0183  00A6               	movwf	LCDWriteInt@d+1
  4044                           
  4045                           ;lcd_hd44780_pic16.c: 331: if (d > 0x39)
  4046  0184  3000               	movlw	0
  4047  0185  0226               	subwf	LCDWriteInt@d+1,w
  4048  0186  303A               	movlw	58
  4049  0187  1903               	skipnz
  4050  0188  0225               	subwf	LCDWriteInt@d,w
  4051  0189  1C03               	skipc
  4052  018A  298F               	goto	l1919
  4053                           
  4054                           ;lcd_hd44780_pic16.c: 332: (LCDByte('?',1)) ;
  4055  018B  01F5               	clrf	LCDByte@isdata
  4056  018C  0AF5               	incf	LCDByte@isdata,f
  4057  018D  303F               	movlw	63
  4058  018E  2994               	goto	L7
  4059  018F                     l1919:	
  4060                           
  4061                           ;lcd_hd44780_pic16.c: 333: else
  4062                           ;lcd_hd44780_pic16.c: 334: (LCDByte(d,1));
  4063  018F  01F5               	clrf	LCDByte@isdata
  4064  0190  0AF5               	incf	LCDByte@isdata,f
  4065  0191  1283               	bcf	3,5	;RP0=0, select bank0
  4066  0192  1303               	bcf	3,6	;RP1=0, select bank0
  4067  0193  0825               	movf	LCDWriteInt@d,w
  4068  0194                     L7:	
  4069  0194  120A  158A  25F4  120A  118A  	fcall	_LCDByte
  4070                           
  4071                           ;lcd_hd44780_pic16.c: 335: if (c > 0x39)
  4072  0199  3000               	movlw	0
  4073  019A  1283               	bcf	3,5	;RP0=0, select bank0
  4074  019B  1303               	bcf	3,6	;RP1=0, select bank0
  4075  019C  0224               	subwf	LCDWriteInt@c+1,w
  4076  019D  303A               	movlw	58
  4077  019E  1903               	skipnz
  4078  019F  0223               	subwf	LCDWriteInt@c,w
  4079  01A0  1C03               	skipc
  4080  01A1  29A9               	goto	l1925
  4081                           
  4082                           ;lcd_hd44780_pic16.c: 336: (LCDByte('?',1)) ;
  4083  01A2  01F5               	clrf	LCDByte@isdata
  4084  01A3  0AF5               	incf	LCDByte@isdata,f
  4085  01A4  303F               	movlw	63
  4086  01A5  120A  158A  25F4   	fcall	_LCDByte
  4087  01A8  0008               	return
  4088  01A9                     l1925:	
  4089                           
  4090                           ;lcd_hd44780_pic16.c: 337: else
  4091                           ;lcd_hd44780_pic16.c: 338: (LCDByte(c,1));
  4092  01A9  01F5               	clrf	LCDByte@isdata
  4093  01AA  0AF5               	incf	LCDByte@isdata,f
  4094  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  4095  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  4096  01AD  0823               	movf	LCDWriteInt@c,w
  4097  01AE  120A  158A  25F4   	fcall	_LCDByte
  4098  01B1  0008               	return
  4099  01B2                     __end_of_LCDWriteInt:	
  4100                           
  4101                           	psect	text14
  4102  0D59                     __ptext14:	
  4103 ;; *************** function ___awmod *****************
  4104 ;; Defined at:
  4105 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  divisor         2    0[COMMON] int 
  4108 ;;  dividend        2    2[COMMON] int 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  sign            1    6[COMMON] unsigned char 
  4111 ;;  counter         1    5[COMMON] unsigned char 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  2    0[COMMON] int 
  4114 ;; Registers used:
  4115 ;;		wreg, status,2, status,0
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4121 ;;      Params:         4       0       0       0       0
  4122 ;;      Locals:         2       0       0       0       0
  4123 ;;      Temps:          1       0       0       0       0
  4124 ;;      Totals:         7       0       0       0       0
  4125 ;;Total ram usage:        7 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_LCDWriteInt
  4131 ;;		_doMenu
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           
  4136                           ;psect for function ___awmod
  4137  0D59                     ___awmod:	
  4138                           
  4139                           ;incstack = 0
  4140                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4141  0D59  01F6               	clrf	___awmod@sign
  4142  0D5A  1FF3               	btfss	___awmod@dividend+1,7
  4143  0D5B  2D63               	goto	l1833
  4144  0D5C  09F2               	comf	___awmod@dividend,f
  4145  0D5D  09F3               	comf	___awmod@dividend+1,f
  4146  0D5E  0AF2               	incf	___awmod@dividend,f
  4147  0D5F  1903               	skipnz
  4148  0D60  0AF3               	incf	___awmod@dividend+1,f
  4149  0D61  01F6               	clrf	___awmod@sign
  4150  0D62  0AF6               	incf	___awmod@sign,f
  4151  0D63                     l1833:	
  4152  0D63  1FF1               	btfss	___awmod@divisor+1,7
  4153  0D64  2D6A               	goto	l1837
  4154  0D65  09F0               	comf	___awmod@divisor,f
  4155  0D66  09F1               	comf	___awmod@divisor+1,f
  4156  0D67  0AF0               	incf	___awmod@divisor,f
  4157  0D68  1903               	skipnz
  4158  0D69  0AF1               	incf	___awmod@divisor+1,f
  4159  0D6A                     l1837:	
  4160  0D6A  0870               	movf	___awmod@divisor,w
  4161  0D6B  0471               	iorwf	___awmod@divisor+1,w
  4162  0D6C  1903               	btfsc	3,2
  4163  0D6D  2D97               	goto	l1855
  4164  0D6E  01F5               	clrf	___awmod@counter
  4165  0D6F  0AF5               	incf	___awmod@counter,f
  4166  0D70                     l1845:	
  4167  0D70  1BF1               	btfsc	___awmod@divisor+1,7
  4168  0D71  2D7E               	goto	l1847
  4169  0D72  3001               	movlw	1
  4170  0D73                     u1445:	
  4171  0D73  1003               	clrc
  4172  0D74  0DF0               	rlf	___awmod@divisor,f
  4173  0D75  0DF1               	rlf	___awmod@divisor+1,f
  4174  0D76  3EFF               	addlw	-1
  4175  0D77  1D03               	skipz
  4176  0D78  2D73               	goto	u1445
  4177  0D79  3001               	movlw	1
  4178  0D7A  00F4               	movwf	??___awmod
  4179  0D7B  0874               	movf	??___awmod,w
  4180  0D7C  07F5               	addwf	___awmod@counter,f
  4181  0D7D  2D70               	goto	l1845
  4182  0D7E                     l1847:	
  4183  0D7E  0871               	movf	___awmod@divisor+1,w
  4184  0D7F  0273               	subwf	___awmod@dividend+1,w
  4185  0D80  1D03               	skipz
  4186  0D81  2D84               	goto	u1465
  4187  0D82  0870               	movf	___awmod@divisor,w
  4188  0D83  0272               	subwf	___awmod@dividend,w
  4189  0D84                     u1465:	
  4190  0D84  1C03               	skipc
  4191  0D85  2D8C               	goto	l1851
  4192  0D86  0870               	movf	___awmod@divisor,w
  4193  0D87  02F2               	subwf	___awmod@dividend,f
  4194  0D88  0871               	movf	___awmod@divisor+1,w
  4195  0D89  1C03               	skipc
  4196  0D8A  03F3               	decf	___awmod@dividend+1,f
  4197  0D8B  02F3               	subwf	___awmod@dividend+1,f
  4198  0D8C                     l1851:	
  4199  0D8C  3001               	movlw	1
  4200  0D8D                     u1475:	
  4201  0D8D  1003               	clrc
  4202  0D8E  0CF1               	rrf	___awmod@divisor+1,f
  4203  0D8F  0CF0               	rrf	___awmod@divisor,f
  4204  0D90  3EFF               	addlw	-1
  4205  0D91  1D03               	skipz
  4206  0D92  2D8D               	goto	u1475
  4207  0D93  3001               	movlw	1
  4208  0D94  02F5               	subwf	___awmod@counter,f
  4209  0D95  1D03               	btfss	3,2
  4210  0D96  2D7E               	goto	l1847
  4211  0D97                     l1855:	
  4212  0D97  0876               	movf	___awmod@sign,w
  4213  0D98  1903               	btfsc	3,2
  4214  0D99  2D9F               	goto	l1859
  4215  0D9A  09F2               	comf	___awmod@dividend,f
  4216  0D9B  09F3               	comf	___awmod@dividend+1,f
  4217  0D9C  0AF2               	incf	___awmod@dividend,f
  4218  0D9D  1903               	skipnz
  4219  0D9E  0AF3               	incf	___awmod@dividend+1,f
  4220  0D9F                     l1859:	
  4221  0D9F  0873               	movf	___awmod@dividend+1,w
  4222  0DA0  00F1               	movwf	?___awmod+1
  4223  0DA1  0872               	movf	___awmod@dividend,w
  4224  0DA2  00F0               	movwf	?___awmod
  4225  0DA3  0008               	return
  4226  0DA4                     __end_of___awmod:	
  4227                           
  4228                           	psect	text15
  4229  0EEA                     __ptext15:	
  4230 ;; *************** function ___awdiv *****************
  4231 ;; Defined at:
  4232 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  divisor         2    0[COMMON] int 
  4235 ;;  dividend        2    2[COMMON] int 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  quotient        2    7[COMMON] int 
  4238 ;;  sign            1    6[COMMON] unsigned char 
  4239 ;;  counter         1    5[COMMON] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  2    0[COMMON] int 
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4249 ;;      Params:         4       0       0       0       0
  4250 ;;      Locals:         4       0       0       0       0
  4251 ;;      Temps:          1       0       0       0       0
  4252 ;;      Totals:         9       0       0       0       0
  4253 ;;Total ram usage:        9 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_LCDWriteInt
  4259 ;;		_doMenu
  4260 ;;		_readClock
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           
  4265                           ;psect for function ___awdiv
  4266  0EEA                     ___awdiv:	
  4267                           
  4268                           ;incstack = 0
  4269                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4270  0EEA  01F6               	clrf	___awdiv@sign
  4271  0EEB  1FF1               	btfss	___awdiv@divisor+1,7
  4272  0EEC  2EF4               	goto	l1789
  4273  0EED  09F0               	comf	___awdiv@divisor,f
  4274  0EEE  09F1               	comf	___awdiv@divisor+1,f
  4275  0EEF  0AF0               	incf	___awdiv@divisor,f
  4276  0EF0  1903               	skipnz
  4277  0EF1  0AF1               	incf	___awdiv@divisor+1,f
  4278  0EF2  01F6               	clrf	___awdiv@sign
  4279  0EF3  0AF6               	incf	___awdiv@sign,f
  4280  0EF4                     l1789:	
  4281  0EF4  1FF3               	btfss	___awdiv@dividend+1,7
  4282  0EF5  2EFF               	goto	l1795
  4283  0EF6  09F2               	comf	___awdiv@dividend,f
  4284  0EF7  09F3               	comf	___awdiv@dividend+1,f
  4285  0EF8  0AF2               	incf	___awdiv@dividend,f
  4286  0EF9  1903               	skipnz
  4287  0EFA  0AF3               	incf	___awdiv@dividend+1,f
  4288  0EFB  3001               	movlw	1
  4289  0EFC  00F4               	movwf	??___awdiv
  4290  0EFD  0874               	movf	??___awdiv,w
  4291  0EFE  06F6               	xorwf	___awdiv@sign,f
  4292  0EFF                     l1795:	
  4293  0EFF  01F7               	clrf	___awdiv@quotient
  4294  0F00  01F8               	clrf	___awdiv@quotient+1
  4295  0F01  0870               	movf	___awdiv@divisor,w
  4296  0F02  0471               	iorwf	___awdiv@divisor+1,w
  4297  0F03  1903               	btfsc	3,2
  4298  0F04  2F36               	goto	l1817
  4299  0F05  01F5               	clrf	___awdiv@counter
  4300  0F06  0AF5               	incf	___awdiv@counter,f
  4301  0F07                     l1805:	
  4302  0F07  1BF1               	btfsc	___awdiv@divisor+1,7
  4303  0F08  2F15               	goto	l1807
  4304  0F09  3001               	movlw	1
  4305  0F0A                     u1345:	
  4306  0F0A  1003               	clrc
  4307  0F0B  0DF0               	rlf	___awdiv@divisor,f
  4308  0F0C  0DF1               	rlf	___awdiv@divisor+1,f
  4309  0F0D  3EFF               	addlw	-1
  4310  0F0E  1D03               	skipz
  4311  0F0F  2F0A               	goto	u1345
  4312  0F10  3001               	movlw	1
  4313  0F11  00F4               	movwf	??___awdiv
  4314  0F12  0874               	movf	??___awdiv,w
  4315  0F13  07F5               	addwf	___awdiv@counter,f
  4316  0F14  2F07               	goto	l1805
  4317  0F15                     l1807:	
  4318  0F15  3001               	movlw	1
  4319  0F16                     u1365:	
  4320  0F16  1003               	clrc
  4321  0F17  0DF7               	rlf	___awdiv@quotient,f
  4322  0F18  0DF8               	rlf	___awdiv@quotient+1,f
  4323  0F19  3EFF               	addlw	-1
  4324  0F1A  1D03               	skipz
  4325  0F1B  2F16               	goto	u1365
  4326  0F1C  0871               	movf	___awdiv@divisor+1,w
  4327  0F1D  0273               	subwf	___awdiv@dividend+1,w
  4328  0F1E  1D03               	skipz
  4329  0F1F  2F22               	goto	u1375
  4330  0F20  0870               	movf	___awdiv@divisor,w
  4331  0F21  0272               	subwf	___awdiv@dividend,w
  4332  0F22                     u1375:	
  4333  0F22  1C03               	skipc
  4334  0F23  2F2B               	goto	l1813
  4335  0F24  0870               	movf	___awdiv@divisor,w
  4336  0F25  02F2               	subwf	___awdiv@dividend,f
  4337  0F26  0871               	movf	___awdiv@divisor+1,w
  4338  0F27  1C03               	skipc
  4339  0F28  03F3               	decf	___awdiv@dividend+1,f
  4340  0F29  02F3               	subwf	___awdiv@dividend+1,f
  4341  0F2A  1477               	bsf	___awdiv@quotient,0
  4342  0F2B                     l1813:	
  4343  0F2B  3001               	movlw	1
  4344  0F2C                     u1385:	
  4345  0F2C  1003               	clrc
  4346  0F2D  0CF1               	rrf	___awdiv@divisor+1,f
  4347  0F2E  0CF0               	rrf	___awdiv@divisor,f
  4348  0F2F  3EFF               	addlw	-1
  4349  0F30  1D03               	skipz
  4350  0F31  2F2C               	goto	u1385
  4351  0F32  3001               	movlw	1
  4352  0F33  02F5               	subwf	___awdiv@counter,f
  4353  0F34  1D03               	btfss	3,2
  4354  0F35  2F15               	goto	l1807
  4355  0F36                     l1817:	
  4356  0F36  0876               	movf	___awdiv@sign,w
  4357  0F37  1903               	btfsc	3,2
  4358  0F38  2F3E               	goto	l1821
  4359  0F39  09F7               	comf	___awdiv@quotient,f
  4360  0F3A  09F8               	comf	___awdiv@quotient+1,f
  4361  0F3B  0AF7               	incf	___awdiv@quotient,f
  4362  0F3C  1903               	skipnz
  4363  0F3D  0AF8               	incf	___awdiv@quotient+1,f
  4364  0F3E                     l1821:	
  4365  0F3E  0878               	movf	___awdiv@quotient+1,w
  4366  0F3F  00F1               	movwf	?___awdiv+1
  4367  0F40  0877               	movf	___awdiv@quotient,w
  4368  0F41  00F0               	movwf	?___awdiv
  4369  0F42  0008               	return
  4370  0F43                     __end_of___awdiv:	
  4371                           
  4372                           	psect	text16
  4373  0CBC                     __ptext16:	
  4374 ;; *************** function _readInputs *****************
  4375 ;; Defined at:
  4376 ;;		line 338 in file "LCDTime.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;		None
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;  pinstate        1    3[COMMON] unsigned char 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      void 
  4383 ;; Registers used:
  4384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4390 ;;      Params:         0       0       0       0       0
  4391 ;;      Locals:         1       0       0       0       0
  4392 ;;      Temps:          3       0       0       0       0
  4393 ;;      Totals:         4       0       0       0       0
  4394 ;;Total ram usage:        4 bytes
  4395 ;; Hardware stack levels used:    2
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_main
  4400 ;;		_doMenu
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           
  4405                           ;psect for function _readInputs
  4406  0CBC                     _readInputs:	
  4407                           
  4408                           ;LCDTime.c: 341: bButton = 0 ;
  4409                           
  4410                           ;incstack = 0
  4411                           ; Regs used in _readInputs: [wreg-fsr0h+status,2+status,0+pclath]
  4412  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  4413  0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  4414  0CBE  01CB               	clrf	_bButton
  4415                           
  4416                           ;LCDTime.c: 343: if (RB4 == 1)
  4417  0CBF  1E06               	btfss	6,4	;volatile
  4418  0CC0  2CCD               	goto	l2027
  4419                           
  4420                           ;LCDTime.c: 344: {
  4421                           ;LCDTime.c: 345: _delay((unsigned long)((15)*(4000000/4000000.0))) ;
  4422  0CC1  3004               	movlw	4
  4423  0CC2  00F0               	movwf	??_readInputs
  4424  0CC3                     u2377:	
  4425  0CC3  0BF0               	decfsz	??_readInputs,f
  4426  0CC4  2CC3               	goto	u2377
  4427  0CC5  2CC6               	nop2	;nop
  4428                           
  4429                           ;LCDTime.c: 346: if (RB4 == 1)
  4430  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  4431  0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  4432  0CC8  1E06               	btfss	6,4	;volatile
  4433  0CC9  2CCD               	goto	l2027
  4434                           
  4435                           ;LCDTime.c: 347: {
  4436                           ;LCDTime.c: 348: bButton = 1 ;
  4437  0CCA  01CB               	clrf	_bButton
  4438  0CCB  0ACB               	incf	_bButton,f
  4439                           
  4440                           ;LCDTime.c: 349: return ;
  4441  0CCC  0008               	return
  4442  0CCD                     l2027:	
  4443                           
  4444                           ;LCDTime.c: 350: }
  4445                           ;LCDTime.c: 351: }
  4446                           ;LCDTime.c: 353: unsigned char pinstate = (RB1 << 1) | RB2 ;
  4447  0CCD  3000               	movlw	0
  4448  0CCE  1886               	btfsc	6,1	;volatile
  4449  0CCF  3002               	movlw	2
  4450  0CD0  1906               	btfsc	6,2	;volatile
  4451  0CD1  3801               	iorlw	1
  4452  0CD2  00F0               	movwf	??_readInputs
  4453  0CD3  0870               	movf	??_readInputs,w
  4454  0CD4  00F3               	movwf	readInputs@pinstate
  4455                           
  4456                           ;LCDTime.c: 355: state = ttable[state & 0xf][pinstate];
  4457  0CD5  084D               	movf	_state,w
  4458  0CD6  390F               	andlw	15
  4459  0CD7  00F0               	movwf	??_readInputs
  4460  0CD8  3002               	movlw	2
  4461  0CD9                     u1595:	
  4462  0CD9  1003               	clrc
  4463  0CDA  0DF0               	rlf	??_readInputs,f
  4464  0CDB  3EFF               	addlw	-1
  4465  0CDC  1D03               	skipz
  4466  0CDD  2CD9               	goto	u1595
  4467  0CDE  3001               	movlw	(low ((_ttable-__stringbase)| (0+32768)))& (0+255)
  4468  0CDF  0770               	addwf	??_readInputs,w
  4469  0CE0  00F1               	movwf	??_readInputs+1
  4470  0CE1  0873               	movf	readInputs@pinstate,w
  4471  0CE2  0771               	addwf	??_readInputs+1,w
  4472  0CE3  0084               	movwf	4
  4473  0CE4  120A  118A  2003   	fcall	stringdir
  4474  0CE7  00F2               	movwf	??_readInputs+2
  4475  0CE8  0872               	movf	??_readInputs+2,w
  4476  0CE9  00CD               	movwf	_state
  4477  0CEA  0008               	return
  4478  0CEB                     __end_of_readInputs:	
  4479                           
  4480                           	psect	text17
  4481  0BEF                     __ptext17:	
  4482 ;; *************** function _LCDGotoXY *****************
  4483 ;; Defined at:
  4484 ;;		line 345 in file "lcd_hd44780_pic16.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  x               1    wreg     unsigned char 
  4487 ;;  y               1   12[COMMON] unsigned char 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  x               1    0[BANK0 ] unsigned char 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  1    wreg      void 
  4492 ;; Registers used:
  4493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4499 ;;      Params:         1       0       0       0       0
  4500 ;;      Locals:         0       1       0       0       0
  4501 ;;      Temps:          1       0       0       0       0
  4502 ;;      Totals:         2       1       0       0       0
  4503 ;;Total ram usage:        3 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    2
  4506 ;; This function calls:
  4507 ;;		_LCDByte
  4508 ;; This function is called by:
  4509 ;;		_doMenu
  4510 ;;		_showClock
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           
  4515                           ;psect for function _LCDGotoXY
  4516  0BEF                     _LCDGotoXY:	
  4517                           
  4518                           ;incstack = 0
  4519                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4520                           ;LCDGotoXY@x stored from wreg
  4521  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  4522  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  4523  0BF1  00A0               	movwf	LCDGotoXY@x
  4524                           
  4525                           ;lcd_hd44780_pic16.c: 347: if(x>=20) return;
  4526  0BF2  3014               	movlw	20
  4527  0BF3  0220               	subwf	LCDGotoXY@x,w
  4528  0BF4  1803               	btfsc	3,0
  4529  0BF5  0008               	return
  4530  0BF6  2C00               	goto	l2013
  4531  0BF7                     l134:	
  4532                           ;lcd_hd44780_pic16.c: 355: case 1:
  4533                           
  4534                           ;lcd_hd44780_pic16.c: 354: break;
  4535                           
  4536                           ;lcd_hd44780_pic16.c: 352: {
  4537                           ;lcd_hd44780_pic16.c: 353: case 0:
  4538                           
  4539                           ;lcd_hd44780_pic16.c: 351: switch(y)
  4540                           
  4541                           
  4542                           ;lcd_hd44780_pic16.c: 356: x|=0b01000000;
  4543  0BF7  1720               	bsf	LCDGotoXY@x,6
  4544                           
  4545                           ;lcd_hd44780_pic16.c: 357: break;
  4546  0BF8  2C0E               	goto	l133
  4547  0BF9                     l2007:	
  4548                           ;lcd_hd44780_pic16.c: 358: case 2:
  4549                           
  4550                           
  4551                           ;lcd_hd44780_pic16.c: 359: x+=0x14;
  4552  0BF9  3014               	movlw	20
  4553  0BFA  2BFC               	goto	L8
  4554  0BFB                     l2009:	
  4555                           ;lcd_hd44780_pic16.c: 361: case 3:
  4556                           
  4557                           ;lcd_hd44780_pic16.c: 360: break;
  4558                           
  4559                           
  4560                           ;lcd_hd44780_pic16.c: 362: x+=0x54;
  4561  0BFB  3054               	movlw	84
  4562  0BFC                     L8:	
  4563  0BFC  00FD               	movwf	??_LCDGotoXY
  4564  0BFD  087D               	movf	??_LCDGotoXY,w
  4565  0BFE  07A0               	addwf	LCDGotoXY@x,f
  4566                           
  4567                           ;lcd_hd44780_pic16.c: 364: }
  4568                           
  4569                           ;lcd_hd44780_pic16.c: 363: break;
  4570  0BFF  2C0E               	goto	l133
  4571  0C00                     l2013:	
  4572  0C00  087C               	movf	LCDGotoXY@y,w
  4573                           
  4574                           ; Switch size 1, requested type "space"
  4575                           ; Number of cases is 4, Range of values is 0 to 3
  4576                           ; switch strategies available:
  4577                           ; Name         Instructions Cycles
  4578                           ; simple_byte           13     7 (average)
  4579                           ; direct_byte           20     8 (fixed)
  4580                           ; jumptable            260     6 (fixed)
  4581                           ;	Chosen strategy is simple_byte
  4582  0C01  3A00               	xorlw	0	; case 0
  4583  0C02  1903               	skipnz
  4584  0C03  2C0E               	goto	l133
  4585  0C04  3A01               	xorlw	1	; case 1
  4586  0C05  1903               	skipnz
  4587  0C06  2BF7               	goto	l134
  4588  0C07  3A03               	xorlw	3	; case 2
  4589  0C08  1903               	skipnz
  4590  0C09  2BF9               	goto	l2007
  4591  0C0A  3A01               	xorlw	1	; case 3
  4592  0C0B  1903               	skipnz
  4593  0C0C  2BFB               	goto	l2009
  4594  0C0D  2C0E               	goto	l133
  4595  0C0E                     l133:	
  4596                           
  4597                           ;lcd_hd44780_pic16.c: 386: x|=0b10000000;
  4598  0C0E  17A0               	bsf	LCDGotoXY@x,7
  4599                           
  4600                           ;lcd_hd44780_pic16.c: 387: (LCDByte(x,0));
  4601  0C0F  01F5               	clrf	LCDByte@isdata
  4602  0C10  0820               	movf	LCDGotoXY@x,w
  4603  0C11  120A  158A  25F4   	fcall	_LCDByte
  4604  0C14  0008               	return
  4605  0C15                     __end_of_LCDGotoXY:	
  4606                           
  4607                           	psect	text18
  4608  0C3C                     __ptext18:	
  4609 ;; *************** function _DS1307_SetTime *****************
  4610 ;; Defined at:
  4611 ;;		line 43 in file "DS1307.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  hh              1    wreg     unsigned char 
  4614 ;;  mm              1    5[COMMON] unsigned char 
  4615 ;;  ss              1    6[COMMON] unsigned char 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  hh              1    7[COMMON] unsigned char 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0, pclath, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4627 ;;      Params:         2       0       0       0       0
  4628 ;;      Locals:         1       0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0
  4630 ;;      Totals:         3       0       0       0       0
  4631 ;;Total ram usage:        3 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    3
  4634 ;; This function calls:
  4635 ;;		_DS1307_Write
  4636 ;;		_I2C_Start
  4637 ;;		_I2C_Stop
  4638 ;; This function is called by:
  4639 ;;		_doMenu
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           
  4644                           ;psect for function _DS1307_SetTime
  4645  0C3C                     _DS1307_SetTime:	
  4646                           
  4647                           ;incstack = 0
  4648                           ; Regs used in _DS1307_SetTime: [wreg+status,2+status,0+pclath+cstack]
  4649                           ;DS1307_SetTime@hh stored from wreg
  4650  0C3C  00F7               	movwf	DS1307_SetTime@hh
  4651                           
  4652                           ;DS1307.c: 45: I2C_Start();
  4653  0C3D  120A  158A  2376  120A  158A  	fcall	_I2C_Start
  4654                           
  4655                           ;DS1307.c: 46: DS1307_Write(0xD0);
  4656  0C42  30D0               	movlw	208
  4657  0C43  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  4658                           
  4659                           ;DS1307.c: 47: DS1307_Write(0x00);
  4660  0C48  3000               	movlw	0
  4661  0C49  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  4662                           
  4663                           ;DS1307.c: 48: DS1307_Write(ss);
  4664  0C4E  0876               	movf	DS1307_SetTime@ss,w
  4665  0C4F  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  4666                           
  4667                           ;DS1307.c: 49: DS1307_Write(mm);
  4668  0C54  0875               	movf	DS1307_SetTime@mm,w
  4669  0C55  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  4670                           
  4671                           ;DS1307.c: 50: DS1307_Write(hh);
  4672  0C5A  0877               	movf	DS1307_SetTime@hh,w
  4673  0C5B  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  4674                           
  4675                           ;DS1307.c: 51: I2C_Stop();
  4676  0C60  120A  158A  2366   	fcall	_I2C_Stop
  4677  0C63  0008               	return
  4678  0C64                     __end_of_DS1307_SetTime:	
  4679                           
  4680                           	psect	text19
  4681  0C8E                     __ptext19:	
  4682 ;; *************** function _DS1307_SetDate *****************
  4683 ;; Defined at:
  4684 ;;		line 54 in file "DS1307.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  nn              1    wreg     unsigned char 
  4687 ;;  dd              1    5[COMMON] unsigned char 
  4688 ;;  mm              1    6[COMMON] unsigned char 
  4689 ;;  yy              1    7[COMMON] unsigned char 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  nn              1    8[COMMON] unsigned char 
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  1    wreg      void 
  4694 ;; Registers used:
  4695 ;;		wreg, status,2, status,0, pclath, cstack
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4701 ;;      Params:         3       0       0       0       0
  4702 ;;      Locals:         1       0       0       0       0
  4703 ;;      Temps:          0       0       0       0       0
  4704 ;;      Totals:         4       0       0       0       0
  4705 ;;Total ram usage:        4 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; Hardware stack levels required when called:    3
  4708 ;; This function calls:
  4709 ;;		_DS1307_Write
  4710 ;;		_I2C_Start
  4711 ;;		_I2C_Stop
  4712 ;; This function is called by:
  4713 ;;		_doMenu
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           
  4718                           ;psect for function _DS1307_SetDate
  4719  0C8E                     _DS1307_SetDate:	
  4720                           
  4721                           ;incstack = 0
  4722                           ; Regs used in _DS1307_SetDate: [wreg+status,2+status,0+pclath+cstack]
  4723                           ;DS1307_SetDate@nn stored from wreg
  4724  0C8E  00F8               	movwf	DS1307_SetDate@nn
  4725                           
  4726                           ;DS1307.c: 56: I2C_Start();
  4727  0C8F  120A  158A  2376  120A  158A  	fcall	_I2C_Start
  4728                           
  4729                           ;DS1307.c: 57: DS1307_Write(0xD0);
  4730  0C94  30D0               	movlw	208
  4731  0C95  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  4732                           
  4733                           ;DS1307.c: 58: DS1307_Write(0x03);
  4734  0C9A  3003               	movlw	3
  4735  0C9B  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  4736                           
  4737                           ;DS1307.c: 59: DS1307_Write(nn);
  4738  0CA0  0878               	movf	DS1307_SetDate@nn,w
  4739  0CA1  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  4740                           
  4741                           ;DS1307.c: 60: DS1307_Write(dd);
  4742  0CA6  0875               	movf	DS1307_SetDate@dd,w
  4743  0CA7  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  4744                           
  4745                           ;DS1307.c: 61: DS1307_Write(mm);
  4746  0CAC  0876               	movf	DS1307_SetDate@mm,w
  4747  0CAD  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  4748                           
  4749                           ;DS1307.c: 62: DS1307_Write(yy);
  4750  0CB2  0877               	movf	DS1307_SetDate@yy,w
  4751  0CB3  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  4752                           
  4753                           ;DS1307.c: 63: I2C_Stop();
  4754  0CB8  120A  158A  2366   	fcall	_I2C_Stop
  4755  0CBB  0008               	return
  4756  0CBC                     __end_of_DS1307_SetDate:	
  4757                           
  4758                           	psect	text20
  4759  0D1E                     __ptext20:	
  4760 ;; *************** function _LCDInit *****************
  4761 ;; Defined at:
  4762 ;;		line 167 in file "lcd_hd44780_pic16.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  style           1    wreg     unsigned char 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  style           1    0[BANK0 ] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0, pclath, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4776 ;;      Params:         0       0       0       0       0
  4777 ;;      Locals:         0       1       0       0       0
  4778 ;;      Temps:          2       0       0       0       0
  4779 ;;      Totals:         2       1       0       0       0
  4780 ;;Total ram usage:        3 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    2
  4783 ;; This function calls:
  4784 ;;		_LCDBusyLoop
  4785 ;;		_LCDByte
  4786 ;; This function is called by:
  4787 ;;		_main
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           
  4792                           ;psect for function _LCDInit
  4793  0D1E                     _LCDInit:	
  4794                           
  4795                           ;incstack = 0
  4796                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  4797                           ;LCDInit@style stored from wreg
  4798  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  4799  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  4800  0D20  00A0               	movwf	LCDInit@style
  4801                           
  4802                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((30)*(4000000/4000.0)));
  4803  0D21  3027               	movlw	39
  4804  0D22  00FD               	movwf	??_LCDInit+1
  4805  0D23  30F5               	movlw	245
  4806  0D24  00FC               	movwf	??_LCDInit
  4807  0D25                     u2387:	
  4808  0D25  0BFC               	decfsz	??_LCDInit,f
  4809  0D26  2D25               	goto	u2387
  4810  0D27  0BFD               	decfsz	??_LCDInit+1,f
  4811  0D28  2D25               	goto	u2387
  4812                           
  4813                           ;lcd_hd44780_pic16.c: 186: TRISD&=(~(0x0F<<4));
  4814  0D29  300F               	movlw	15
  4815  0D2A  00FC               	movwf	??_LCDInit
  4816  0D2B  087C               	movf	??_LCDInit,w
  4817  0D2C  1683               	bsf	3,5	;RP0=1, select bank1
  4818  0D2D  1303               	bcf	3,6	;RP1=0, select bank1
  4819  0D2E  0588               	andwf	8,f	;volatile
  4820                           
  4821                           ;lcd_hd44780_pic16.c: 188: TRISBbits.TRISB5=0;
  4822  0D2F  1286               	bcf	6,5	;volatile
  4823                           
  4824                           ;lcd_hd44780_pic16.c: 189: TRISBbits.TRISB7=0;
  4825  0D30  1386               	bcf	6,7	;volatile
  4826                           
  4827                           ;lcd_hd44780_pic16.c: 190: TRISBbits.TRISB6=0;
  4828  0D31  1306               	bcf	6,6	;volatile
  4829                           
  4830                           ;lcd_hd44780_pic16.c: 192: PORTD&=(~(0x0F<<4));
  4831  0D32  300F               	movlw	15
  4832  0D33  00FC               	movwf	??_LCDInit
  4833  0D34  087C               	movf	??_LCDInit,w
  4834  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  4835  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  4836  0D37  0588               	andwf	8,f	;volatile
  4837                           
  4838                           ;lcd_hd44780_pic16.c: 194: (RB5=0);
  4839  0D38  1286               	bcf	6,5	;volatile
  4840                           
  4841                           ;lcd_hd44780_pic16.c: 195: (RB6=0);
  4842  0D39  1306               	bcf	6,6	;volatile
  4843                           
  4844                           ;lcd_hd44780_pic16.c: 196: (RB7=0);
  4845  0D3A  1386               	bcf	6,7	;volatile
  4846                           
  4847                           ;lcd_hd44780_pic16.c: 201: (RB5=1);
  4848                           
  4849                           ;lcd_hd44780_pic16.c: 199: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  4850  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  4851  0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  4852  0D3D  1686               	bsf	6,5	;volatile
  4853                           
  4854                           ;lcd_hd44780_pic16.c: 202: PORTD|=((0b00000010)<<4);
  4855  0D3E  1688               	bsf	8,5	;volatile
  4856                           
  4857                           ;lcd_hd44780_pic16.c: 203: _delay((unsigned long)((1)*(4000000/4000000.0)));
  4858  0D3F  0000               	nop
  4859                           
  4860                           ;lcd_hd44780_pic16.c: 204: (RB5=0);
  4861  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  4862  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  4863  0D42  1286               	bcf	6,5	;volatile
  4864                           
  4865                           ;lcd_hd44780_pic16.c: 205: _delay((unsigned long)((1)*(4000000/4000000.0)));
  4866  0D43  0000               	nop
  4867                           
  4868                           ;lcd_hd44780_pic16.c: 208: LCDBusyLoop();
  4869  0D44  120A  158A  2743  120A  158A  	fcall	_LCDBusyLoop
  4870                           
  4871                           ;lcd_hd44780_pic16.c: 213: (LCDByte(0b00101000,0));
  4872  0D49  01F5               	clrf	LCDByte@isdata
  4873  0D4A  3028               	movlw	40
  4874  0D4B  120A  158A  25F4  120A  158A  	fcall	_LCDByte
  4875                           
  4876                           ;lcd_hd44780_pic16.c: 214: (LCDByte(0b00001100|style,0));
  4877  0D50  01F5               	clrf	LCDByte@isdata
  4878  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  4879  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  4880  0D53  0820               	movf	LCDInit@style,w
  4881  0D54  380C               	iorlw	12
  4882  0D55  120A  158A  25F4   	fcall	_LCDByte
  4883  0D58  0008               	return
  4884  0D59                     __end_of_LCDInit:	
  4885                           
  4886                           	psect	text21
  4887  0DF4                     __ptext21:	
  4888 ;; *************** function _LCDByte *****************
  4889 ;; Defined at:
  4890 ;;		line 54 in file "lcd_hd44780_pic16.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  c               1    wreg     unsigned char 
  4893 ;;  isdata          1    5[COMMON] unsigned char 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  c               1   10[COMMON] unsigned char 
  4896 ;;  temp            1   11[COMMON] unsigned char 
  4897 ;;  ln              1    9[COMMON] unsigned char 
  4898 ;;  hn              1    8[COMMON] unsigned char 
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2, status,0, pclath, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4908 ;;      Params:         1       0       0       0       0
  4909 ;;      Locals:         4       0       0       0       0
  4910 ;;      Temps:          2       0       0       0       0
  4911 ;;      Totals:         7       0       0       0       0
  4912 ;;Total ram usage:        7 bytes
  4913 ;; Hardware stack levels used:    1
  4914 ;; Hardware stack levels required when called:    1
  4915 ;; This function calls:
  4916 ;;		_LCDBusyLoop
  4917 ;; This function is called by:
  4918 ;;		_LCDInit
  4919 ;;		_LCDWriteString
  4920 ;;		_LCDWriteInt
  4921 ;;		_LCDGotoXY
  4922 ;;		_main
  4923 ;;		_doMenu
  4924 ;;		_showTime
  4925 ;;		_showDate
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           
  4930                           ;psect for function _LCDByte
  4931  0DF4                     _LCDByte:	
  4932                           
  4933                           ;incstack = 0
  4934                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  4935                           ;LCDByte@c stored from wreg
  4936  0DF4  00FA               	movwf	LCDByte@c
  4937                           
  4938                           ;lcd_hd44780_pic16.c: 63: uint8_t hn,ln;
  4939                           ;lcd_hd44780_pic16.c: 64: uint8_t temp;
  4940                           ;lcd_hd44780_pic16.c: 66: hn=c>>4;
  4941  0DF5  087A               	movf	LCDByte@c,w
  4942  0DF6  00F6               	movwf	??_LCDByte
  4943  0DF7  3004               	movlw	4
  4944  0DF8                     u1275:	
  4945  0DF8  1003               	clrc
  4946  0DF9  0CF6               	rrf	??_LCDByte,f
  4947  0DFA  3EFF               	addlw	-1
  4948  0DFB  1D03               	skipz
  4949  0DFC  2DF8               	goto	u1275
  4950  0DFD  0876               	movf	??_LCDByte,w
  4951  0DFE  00F7               	movwf	??_LCDByte+1
  4952  0DFF  0877               	movf	??_LCDByte+1,w
  4953  0E00  00F8               	movwf	LCDByte@hn
  4954                           
  4955                           ;lcd_hd44780_pic16.c: 67: ln=(c & 0x0F);
  4956  0E01  087A               	movf	LCDByte@c,w
  4957  0E02  390F               	andlw	15
  4958  0E03  00F6               	movwf	??_LCDByte
  4959  0E04  0876               	movf	??_LCDByte,w
  4960  0E05  00F9               	movwf	LCDByte@ln
  4961                           
  4962                           ;lcd_hd44780_pic16.c: 69: if(isdata==0)
  4963  0E06  0875               	movf	LCDByte@isdata,w
  4964  0E07  1D03               	btfss	3,2
  4965  0E08  2E0D               	goto	l99
  4966                           
  4967                           ;lcd_hd44780_pic16.c: 70: (RB7=0);
  4968  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  4969  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  4970  0E0B  1386               	bcf	6,7	;volatile
  4971  0E0C  2E10               	goto	l100
  4972  0E0D                     l99:	
  4973                           
  4974                           ;lcd_hd44780_pic16.c: 71: else
  4975                           ;lcd_hd44780_pic16.c: 72: (RB7=1);
  4976  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  4977  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  4978  0E0F  1786               	bsf	6,7	;volatile
  4979  0E10                     l100:	
  4980                           
  4981                           ;lcd_hd44780_pic16.c: 74: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  4982                           ;lcd_hd44780_pic16.c: 76: (RB5=1);
  4983  0E10  1283               	bcf	3,5	;RP0=0, select bank0
  4984  0E11  1303               	bcf	3,6	;RP1=0, select bank0
  4985  0E12  1686               	bsf	6,5	;volatile
  4986                           
  4987                           ;lcd_hd44780_pic16.c: 80: temp=(PORTD & (~(0X0F<<4)))|((hn<<4));
  4988  0E13  0878               	movf	LCDByte@hn,w
  4989  0E14  00F6               	movwf	??_LCDByte
  4990  0E15  3004               	movlw	4
  4991  0E16                     u1295:	
  4992  0E16  1003               	clrc
  4993  0E17  0DF6               	rlf	??_LCDByte,f
  4994  0E18  3EFF               	addlw	-1
  4995  0E19  1D03               	skipz
  4996  0E1A  2E16               	goto	u1295
  4997  0E1B  0808               	movf	8,w	;volatile
  4998  0E1C  390F               	andlw	15
  4999  0E1D  0476               	iorwf	??_LCDByte,w
  5000  0E1E  00F7               	movwf	??_LCDByte+1
  5001  0E1F  0877               	movf	??_LCDByte+1,w
  5002  0E20  00FB               	movwf	LCDByte@temp
  5003                           
  5004                           ;lcd_hd44780_pic16.c: 81: PORTD=temp;
  5005  0E21  087B               	movf	LCDByte@temp,w
  5006  0E22  0088               	movwf	8	;volatile
  5007                           
  5008                           ;lcd_hd44780_pic16.c: 83: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5009  0E23  0000               	nop
  5010                           
  5011                           ;lcd_hd44780_pic16.c: 87: (RB5=0);
  5012  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  5013  0E25  1303               	bcf	3,6	;RP1=0, select bank0
  5014  0E26  1286               	bcf	6,5	;volatile
  5015                           
  5016                           ;lcd_hd44780_pic16.c: 89: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5017  0E27  0000               	nop
  5018                           
  5019                           ;lcd_hd44780_pic16.c: 92: (RB5=1);
  5020  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  5021  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  5022  0E2A  1686               	bsf	6,5	;volatile
  5023                           
  5024                           ;lcd_hd44780_pic16.c: 94: temp=(PORTD & (~(0X0F<<4)))|((ln<<4));
  5025  0E2B  0879               	movf	LCDByte@ln,w
  5026  0E2C  00F6               	movwf	??_LCDByte
  5027  0E2D  3004               	movlw	4
  5028  0E2E                     u1305:	
  5029  0E2E  1003               	clrc
  5030  0E2F  0DF6               	rlf	??_LCDByte,f
  5031  0E30  3EFF               	addlw	-1
  5032  0E31  1D03               	skipz
  5033  0E32  2E2E               	goto	u1305
  5034  0E33  0808               	movf	8,w	;volatile
  5035  0E34  390F               	andlw	15
  5036  0E35  0476               	iorwf	??_LCDByte,w
  5037  0E36  00F7               	movwf	??_LCDByte+1
  5038  0E37  0877               	movf	??_LCDByte+1,w
  5039  0E38  00FB               	movwf	LCDByte@temp
  5040                           
  5041                           ;lcd_hd44780_pic16.c: 96: PORTD=temp;
  5042  0E39  087B               	movf	LCDByte@temp,w
  5043  0E3A  0088               	movwf	8	;volatile
  5044                           
  5045                           ;lcd_hd44780_pic16.c: 98: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5046  0E3B  0000               	nop
  5047                           
  5048                           ;lcd_hd44780_pic16.c: 102: (RB5=0);
  5049  0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  5050  0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  5051  0E3E  1286               	bcf	6,5	;volatile
  5052                           
  5053                           ;lcd_hd44780_pic16.c: 104: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5054  0E3F  0000               	nop
  5055                           
  5056                           ;lcd_hd44780_pic16.c: 106: LCDBusyLoop();
  5057  0E40  120A  158A  2743   	fcall	_LCDBusyLoop
  5058  0E43  0008               	return
  5059  0E44                     __end_of_LCDByte:	
  5060                           
  5061                           	psect	text22
  5062  0F43                     __ptext22:	
  5063 ;; *************** function _LCDBusyLoop *****************
  5064 ;; Defined at:
  5065 ;;		line 109 in file "lcd_hd44780_pic16.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  status          1    4[COMMON] unsigned char 
  5070 ;;  temp            1    3[COMMON] unsigned char 
  5071 ;;  busy            1    2[COMMON] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5081 ;;      Params:         0       0       0       0       0
  5082 ;;      Locals:         3       0       0       0       0
  5083 ;;      Temps:          2       0       0       0       0
  5084 ;;      Totals:         5       0       0       0       0
  5085 ;;Total ram usage:        5 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_LCDByte
  5091 ;;		_LCDInit
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           
  5096                           ;psect for function _LCDBusyLoop
  5097  0F43                     _LCDBusyLoop:	
  5098                           
  5099                           ;lcd_hd44780_pic16.c: 113: uint8_t busy,status=0x00,temp;
  5100                           
  5101                           ;incstack = 0
  5102                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  5103  0F43  01F4               	clrf	LCDBusyLoop@status
  5104                           
  5105                           ;lcd_hd44780_pic16.c: 116: TRISD|=(0x0f<<4);
  5106  0F44  30F0               	movlw	240
  5107  0F45  00F0               	movwf	??_LCDBusyLoop
  5108  0F46  0870               	movf	??_LCDBusyLoop,w
  5109  0F47  1683               	bsf	3,5	;RP0=1, select bank1
  5110  0F48  1303               	bcf	3,6	;RP1=0, select bank1
  5111  0F49  0488               	iorwf	8,f	;volatile
  5112                           
  5113                           ;lcd_hd44780_pic16.c: 119: (RB6=1);
  5114  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  5115  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  5116  0F4C  1706               	bsf	6,6	;volatile
  5117                           
  5118                           ;lcd_hd44780_pic16.c: 120: (RB7=0);
  5119  0F4D  1386               	bcf	6,7	;volatile
  5120  0F4E                     l1677:	
  5121                           ;lcd_hd44780_pic16.c: 127: do
  5122                           
  5123                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  5124                           
  5125                           
  5126                           ;lcd_hd44780_pic16.c: 128: {
  5127                           ;lcd_hd44780_pic16.c: 130: (RB5=1);
  5128  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  5129  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  5130  0F50  1686               	bsf	6,5	;volatile
  5131                           
  5132                           ;lcd_hd44780_pic16.c: 135: status=(PORTD>>4);
  5133                           
  5134                           ;lcd_hd44780_pic16.c: 133: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  5135  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  5136  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  5137  0F53  0808               	movf	8,w	;volatile
  5138  0F54  00F0               	movwf	??_LCDBusyLoop
  5139  0F55  3004               	movlw	4
  5140  0F56                     u1165:	
  5141  0F56  1003               	clrc
  5142  0F57  0CF0               	rrf	??_LCDBusyLoop,f
  5143  0F58  3EFF               	addlw	-1
  5144  0F59  1D03               	skipz
  5145  0F5A  2F56               	goto	u1165
  5146  0F5B  0870               	movf	??_LCDBusyLoop,w
  5147  0F5C  00F1               	movwf	??_LCDBusyLoop+1
  5148  0F5D  0871               	movf	??_LCDBusyLoop+1,w
  5149  0F5E  00F4               	movwf	LCDBusyLoop@status
  5150                           
  5151                           ;lcd_hd44780_pic16.c: 136: status=status<<4;
  5152  0F5F  0874               	movf	LCDBusyLoop@status,w
  5153  0F60  00F0               	movwf	??_LCDBusyLoop
  5154  0F61  3003               	movlw	3
  5155  0F62                     u1175:	
  5156  0F62  1003               	clrc
  5157  0F63  0DF0               	rlf	??_LCDBusyLoop,f
  5158  0F64  3EFF               	addlw	-1
  5159  0F65  1D03               	skipz
  5160  0F66  2F62               	goto	u1175
  5161  0F67  1003               	clrc
  5162  0F68  0D70               	rlf	??_LCDBusyLoop,w
  5163  0F69  00F1               	movwf	??_LCDBusyLoop+1
  5164  0F6A  0871               	movf	??_LCDBusyLoop+1,w
  5165  0F6B  00F4               	movwf	LCDBusyLoop@status
  5166                           
  5167                           ;lcd_hd44780_pic16.c: 141: (RB5=0);
  5168                           
  5169                           ;lcd_hd44780_pic16.c: 138: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  5170  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  5171  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  5172  0F6E  1286               	bcf	6,5	;volatile
  5173                           
  5174                           ;lcd_hd44780_pic16.c: 142: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5175  0F6F  0000               	nop
  5176                           
  5177                           ;lcd_hd44780_pic16.c: 144: (RB5=1);
  5178  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  5179  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  5180  0F72  1686               	bsf	6,5	;volatile
  5181                           
  5182                           ;lcd_hd44780_pic16.c: 147: temp=(PORTD>>4);
  5183                           
  5184                           ;lcd_hd44780_pic16.c: 145: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  5185  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  5186  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  5187  0F75  0808               	movf	8,w	;volatile
  5188  0F76  00F0               	movwf	??_LCDBusyLoop
  5189  0F77  3004               	movlw	4
  5190  0F78                     u1185:	
  5191  0F78  1003               	clrc
  5192  0F79  0CF0               	rrf	??_LCDBusyLoop,f
  5193  0F7A  3EFF               	addlw	-1
  5194  0F7B  1D03               	skipz
  5195  0F7C  2F78               	goto	u1185
  5196  0F7D  0870               	movf	??_LCDBusyLoop,w
  5197  0F7E  00F1               	movwf	??_LCDBusyLoop+1
  5198  0F7F  0871               	movf	??_LCDBusyLoop+1,w
  5199  0F80  00F3               	movwf	LCDBusyLoop@temp
  5200                           
  5201                           ;lcd_hd44780_pic16.c: 148: temp&=0x0F;
  5202  0F81  300F               	movlw	15
  5203  0F82  00F0               	movwf	??_LCDBusyLoop
  5204  0F83  0870               	movf	??_LCDBusyLoop,w
  5205  0F84  05F3               	andwf	LCDBusyLoop@temp,f
  5206                           
  5207                           ;lcd_hd44780_pic16.c: 150: status=status|temp;
  5208  0F85  0874               	movf	LCDBusyLoop@status,w
  5209  0F86  0473               	iorwf	LCDBusyLoop@temp,w
  5210  0F87  00F0               	movwf	??_LCDBusyLoop
  5211  0F88  0870               	movf	??_LCDBusyLoop,w
  5212  0F89  00F4               	movwf	LCDBusyLoop@status
  5213                           
  5214                           ;lcd_hd44780_pic16.c: 152: busy=status & 0b10000000;
  5215  0F8A  0874               	movf	LCDBusyLoop@status,w
  5216  0F8B  3980               	andlw	128
  5217  0F8C  00F0               	movwf	??_LCDBusyLoop
  5218  0F8D  0870               	movf	??_LCDBusyLoop,w
  5219  0F8E  00F2               	movwf	LCDBusyLoop@busy
  5220                           
  5221                           ;lcd_hd44780_pic16.c: 156: (RB5=0);
  5222                           
  5223                           ;lcd_hd44780_pic16.c: 154: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  5224  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  5225  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  5226  0F91  1286               	bcf	6,5	;volatile
  5227                           
  5228                           ;lcd_hd44780_pic16.c: 157: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5229  0F92  0000               	nop
  5230                           
  5231                           ;lcd_hd44780_pic16.c: 158: }while(busy);
  5232  0F93  0872               	movf	LCDBusyLoop@busy,w
  5233  0F94  1D03               	btfss	3,2
  5234  0F95  2F4E               	goto	l1677
  5235                           
  5236                           ;lcd_hd44780_pic16.c: 160: (RB6=0);
  5237  0F96  1283               	bcf	3,5	;RP0=0, select bank0
  5238  0F97  1303               	bcf	3,6	;RP1=0, select bank0
  5239  0F98  1306               	bcf	6,6	;volatile
  5240                           
  5241                           ;lcd_hd44780_pic16.c: 163: TRISD&=(~(0x0F<<4));
  5242  0F99  300F               	movlw	15
  5243  0F9A  00F0               	movwf	??_LCDBusyLoop
  5244  0F9B  0870               	movf	??_LCDBusyLoop,w
  5245  0F9C  1683               	bsf	3,5	;RP0=1, select bank1
  5246  0F9D  1303               	bcf	3,6	;RP1=0, select bank1
  5247  0F9E  0588               	andwf	8,f	;volatile
  5248  0F9F  0008               	return
  5249  0FA0                     __end_of_LCDBusyLoop:	
  5250                           
  5251                           	psect	text23
  5252  0B2A                     __ptext23:	
  5253 ;; *************** function _I2C_Init *****************
  5254 ;; Defined at:
  5255 ;;		line 3 in file "i2c.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;		None
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;		None
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		None
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5269 ;;      Params:         0       0       0       0       0
  5270 ;;      Locals:         0       0       0       0       0
  5271 ;;      Temps:          0       0       0       0       0
  5272 ;;      Totals:         0       0       0       0       0
  5273 ;;Total ram usage:        0 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_main
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           
  5283                           ;psect for function _I2C_Init
  5284  0B2A                     _I2C_Init:	
  5285                           
  5286                           ;i2c.c: 5: TRISD1 = 0 ;
  5287                           
  5288                           ;incstack = 0
  5289                           ; Regs used in _I2C_Init: []
  5290  0B2A  1683               	bsf	3,5	;RP0=1, select bank1
  5291  0B2B  1303               	bcf	3,6	;RP1=0, select bank1
  5292  0B2C  1088               	bcf	8,1	;volatile
  5293                           
  5294                           ;i2c.c: 6: TRISD0 = 0 ;
  5295  0B2D  1008               	bcf	8,0	;volatile
  5296  0B2E  0008               	return
  5297  0B2F                     __end_of_I2C_Init:	
  5298                           
  5299                           	psect	text24
  5300  0DA4                     __ptext24:	
  5301 ;; *************** function _DS1307_Init *****************
  5302 ;; Defined at:
  5303 ;;		line 4 in file "DS1307.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;		None
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  s               1    6[COMMON] unsigned char 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  2   20[None  ] int 
  5310 ;; Registers used:
  5311 ;;		wreg, status,2, status,0, pclath, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5317 ;;      Params:         0       0       0       0       0
  5318 ;;      Locals:         1       0       0       0       0
  5319 ;;      Temps:          1       0       0       0       0
  5320 ;;      Totals:         2       0       0       0       0
  5321 ;;Total ram usage:        2 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    3
  5324 ;; This function calls:
  5325 ;;		_DS1307_Read
  5326 ;;		_DS1307_Write
  5327 ;;		_I2C_NoAck
  5328 ;;		_I2C_Start
  5329 ;;		_I2C_Stop
  5330 ;; This function is called by:
  5331 ;;		_main
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           
  5336                           ;psect for function _DS1307_Init
  5337  0DA4                     _DS1307_Init:	
  5338                           
  5339                           ;DS1307.c: 6: unsigned char s = 0 ;
  5340                           
  5341                           ;incstack = 0
  5342                           ; Regs used in _DS1307_Init: [wreg+status,2+status,0+pclath+cstack]
  5343  0DA4  01F6               	clrf	DS1307_Init@s
  5344                           
  5345                           ;DS1307.c: 8: I2C_Start();
  5346  0DA5  120A  158A  2376  120A  158A  	fcall	_I2C_Start
  5347                           
  5348                           ;DS1307.c: 9: DS1307_Write(0xd0);
  5349  0DAA  30D0               	movlw	208
  5350  0DAB  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  5351                           
  5352                           ;DS1307.c: 10: DS1307_Write(0x00);
  5353  0DB0  3000               	movlw	0
  5354  0DB1  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  5355                           
  5356                           ;DS1307.c: 11: I2C_Start();
  5357  0DB6  120A  158A  2376  120A  158A  	fcall	_I2C_Start
  5358                           
  5359                           ;DS1307.c: 12: DS1307_Write(0xd1);
  5360  0DBB  30D1               	movlw	209
  5361  0DBC  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  5362                           
  5363                           ;DS1307.c: 13: s = DS1307_Read();
  5364  0DC1  120A  158A  2326  120A  158A  	fcall	_DS1307_Read
  5365  0DC6  00F5               	movwf	??_DS1307_Init
  5366  0DC7  0875               	movf	??_DS1307_Init,w
  5367  0DC8  00F6               	movwf	DS1307_Init@s
  5368                           
  5369                           ;DS1307.c: 14: I2C_NoAck();
  5370  0DC9  120A  158A  2338  120A  158A  	fcall	_I2C_NoAck
  5371                           
  5372                           ;DS1307.c: 16: if (s & 0x80)
  5373  0DCE  1FF6               	btfss	DS1307_Init@s,7
  5374  0DCF  2DF0               	goto	l2133
  5375                           
  5376                           ;DS1307.c: 17: {
  5377                           ;DS1307.c: 18: s = s & 0x7f ;
  5378  0DD0  0876               	movf	DS1307_Init@s,w
  5379  0DD1  397F               	andlw	127
  5380  0DD2  00F5               	movwf	??_DS1307_Init
  5381  0DD3  0875               	movf	??_DS1307_Init,w
  5382  0DD4  00F6               	movwf	DS1307_Init@s
  5383                           
  5384                           ;DS1307.c: 19: I2C_Start();
  5385  0DD5  120A  158A  2376  120A  158A  	fcall	_I2C_Start
  5386                           
  5387                           ;DS1307.c: 20: DS1307_Write(0xD0);
  5388  0DDA  30D0               	movlw	208
  5389  0DDB  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  5390                           
  5391                           ;DS1307.c: 21: DS1307_Write(0x00);
  5392  0DE0  3000               	movlw	0
  5393  0DE1  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  5394                           
  5395                           ;DS1307.c: 22: DS1307_Write(s);
  5396  0DE6  0876               	movf	DS1307_Init@s,w
  5397  0DE7  120A  158A  234C  120A  158A  	fcall	_DS1307_Write
  5398                           
  5399                           ;DS1307.c: 23: I2C_Stop();
  5400  0DEC  120A  158A  2366   	fcall	_I2C_Stop
  5401                           
  5402                           ;DS1307.c: 25: }
  5403                           
  5404                           ;DS1307.c: 24: return 1 ;
  5405                           ;	Return value of _DS1307_Init is never used
  5406  0DEF  0008               	return
  5407  0DF0                     l2133:	
  5408                           
  5409                           ;DS1307.c: 26: else
  5410                           ;DS1307.c: 27: I2C_Stop();
  5411  0DF0  120A  158A  2366   	fcall	_I2C_Stop
  5412  0DF3  0008               	return
  5413  0DF4                     __end_of_DS1307_Init:	
  5414                           ;DS1307.c: 29: return 0 ;
  5415                           ;	Return value of _DS1307_Init is never used
  5416                           
  5417                           
  5418                           	psect	text25
  5419  0B66                     __ptext25:	
  5420 ;; *************** function _I2C_Stop *****************
  5421 ;; Defined at:
  5422 ;;		line 29 in file "i2c.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;		None
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  1    wreg      void 
  5429 ;; Registers used:
  5430 ;;		None
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5436 ;;      Params:         0       0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0
  5438 ;;      Temps:          0       0       0       0       0
  5439 ;;      Totals:         0       0       0       0       0
  5440 ;;Total ram usage:        0 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_DS1307_Init
  5446 ;;		_DS1307_SetTime
  5447 ;;		_DS1307_SetDate
  5448 ;;		_DS1307_GetTime
  5449 ;;		_DS1307_GetDate
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           
  5454                           ;psect for function _I2C_Stop
  5455  0B66                     _I2C_Stop:	
  5456                           
  5457                           ;i2c.c: 31: RD1 = 0;
  5458                           
  5459                           ;incstack = 0
  5460                           ; Regs used in _I2C_Stop: []
  5461  0B66  1283               	bcf	3,5	;RP0=0, select bank0
  5462  0B67  1303               	bcf	3,6	;RP1=0, select bank0
  5463  0B68  1088               	bcf	8,1	;volatile
  5464                           
  5465                           ;i2c.c: 32: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5466  0B69  0000               	nop
  5467                           
  5468                           ;i2c.c: 33: RD0 = 0;
  5469  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  5470  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  5471  0B6C  1008               	bcf	8,0	;volatile
  5472                           
  5473                           ;i2c.c: 34: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5474  0B6D  0000               	nop
  5475                           
  5476                           ;i2c.c: 35: RD1 = 1;
  5477  0B6E  1283               	bcf	3,5	;RP0=0, select bank0
  5478  0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  5479  0B70  1488               	bsf	8,1	;volatile
  5480                           
  5481                           ;i2c.c: 36: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5482  0B71  0000               	nop
  5483                           
  5484                           ;i2c.c: 37: RD0 = 1;
  5485  0B72  1283               	bcf	3,5	;RP0=0, select bank0
  5486  0B73  1303               	bcf	3,6	;RP1=0, select bank0
  5487  0B74  1408               	bsf	8,0	;volatile
  5488  0B75  0008               	return
  5489  0B76                     __end_of_I2C_Stop:	
  5490                           
  5491                           	psect	text26
  5492  0B76                     __ptext26:	
  5493 ;; *************** function _I2C_Start *****************
  5494 ;; Defined at:
  5495 ;;		line 17 in file "i2c.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;		None
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;		None
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      void 
  5502 ;; Registers used:
  5503 ;;		None
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5509 ;;      Params:         0       0       0       0       0
  5510 ;;      Locals:         0       0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0
  5512 ;;      Totals:         0       0       0       0       0
  5513 ;;Total ram usage:        0 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; This function calls:
  5516 ;;		Nothing
  5517 ;; This function is called by:
  5518 ;;		_DS1307_Init
  5519 ;;		_DS1307_SetTime
  5520 ;;		_DS1307_SetDate
  5521 ;;		_DS1307_GetTime
  5522 ;;		_DS1307_GetDate
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           
  5527                           ;psect for function _I2C_Start
  5528  0B76                     _I2C_Start:	
  5529                           
  5530                           ;i2c.c: 19: RD1 = 0;
  5531                           
  5532                           ;incstack = 0
  5533                           ; Regs used in _I2C_Start: []
  5534  0B76  1283               	bcf	3,5	;RP0=0, select bank0
  5535  0B77  1303               	bcf	3,6	;RP1=0, select bank0
  5536  0B78  1088               	bcf	8,1	;volatile
  5537                           
  5538                           ;i2c.c: 20: RD0 = 1;
  5539  0B79  1408               	bsf	8,0	;volatile
  5540                           
  5541                           ;i2c.c: 21: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5542  0B7A  0000               	nop
  5543                           
  5544                           ;i2c.c: 22: RD1 = 1;
  5545  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  5546  0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  5547  0B7D  1488               	bsf	8,1	;volatile
  5548                           
  5549                           ;i2c.c: 23: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5550  0B7E  0000               	nop
  5551                           
  5552                           ;i2c.c: 24: RD0 = 0;
  5553  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  5554  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  5555  0B81  1008               	bcf	8,0	;volatile
  5556                           
  5557                           ;i2c.c: 25: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5558  0B82  0000               	nop
  5559                           
  5560                           ;i2c.c: 26: RD1 = 0;
  5561  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  5562  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  5563  0B85  1088               	bcf	8,1	;volatile
  5564  0B86  0008               	return
  5565  0B87                     __end_of_I2C_Start:	
  5566                           
  5567                           	psect	text27
  5568  0B38                     __ptext27:	
  5569 ;; *************** function _I2C_NoAck *****************
  5570 ;; Defined at:
  5571 ;;		line 88 in file "i2c.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;		None
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;		None
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		status,2, status,0, pclath, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5585 ;;      Params:         0       0       0       0       0
  5586 ;;      Locals:         0       0       0       0       0
  5587 ;;      Temps:          0       0       0       0       0
  5588 ;;      Totals:         0       0       0       0       0
  5589 ;;Total ram usage:        0 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    1
  5592 ;; This function calls:
  5593 ;;		_I2C_Clock
  5594 ;; This function is called by:
  5595 ;;		_DS1307_Init
  5596 ;;		_DS1307_GetTime
  5597 ;;		_DS1307_GetDate
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           
  5602                           ;psect for function _I2C_NoAck
  5603  0B38                     _I2C_NoAck:	
  5604                           
  5605                           ;i2c.c: 90: RD0 = 1;
  5606                           
  5607                           ;incstack = 0
  5608                           ; Regs used in _I2C_NoAck: [status,2+status,0+pclath+cstack]
  5609  0B38  1283               	bcf	3,5	;RP0=0, select bank0
  5610  0B39  1303               	bcf	3,6	;RP1=0, select bank0
  5611  0B3A  1408               	bsf	8,0	;volatile
  5612                           
  5613                           ;i2c.c: 91: I2C_Clock();
  5614  0B3B  120A  158A  232F   	fcall	_I2C_Clock
  5615                           
  5616                           ;i2c.c: 92: RD1 = 1;
  5617  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  5618  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  5619  0B40  1488               	bsf	8,1	;volatile
  5620  0B41  0008               	return
  5621  0B42                     __end_of_I2C_NoAck:	
  5622                           
  5623                           	psect	text28
  5624  0B4C                     __ptext28:	
  5625 ;; *************** function _DS1307_Write *****************
  5626 ;; Defined at:
  5627 ;;		line 32 in file "DS1307.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  dat             1    wreg     unsigned char 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  dat             1    4[COMMON] unsigned char 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		wreg, status,2, status,0, pclath, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5641 ;;      Params:         0       0       0       0       0
  5642 ;;      Locals:         1       0       0       0       0
  5643 ;;      Temps:          0       0       0       0       0
  5644 ;;      Totals:         1       0       0       0       0
  5645 ;;Total ram usage:        1 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; Hardware stack levels required when called:    2
  5648 ;; This function calls:
  5649 ;;		_I2C_Clock
  5650 ;;		_I2C_Write
  5651 ;; This function is called by:
  5652 ;;		_DS1307_Init
  5653 ;;		_DS1307_SetTime
  5654 ;;		_DS1307_SetDate
  5655 ;;		_DS1307_GetTime
  5656 ;;		_DS1307_GetDate
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           
  5661                           ;psect for function _DS1307_Write
  5662  0B4C                     _DS1307_Write:	
  5663                           
  5664                           ;incstack = 0
  5665                           ; Regs used in _DS1307_Write: [wreg+status,2+status,0+pclath+cstack]
  5666                           ;DS1307_Write@dat stored from wreg
  5667  0B4C  00F4               	movwf	DS1307_Write@dat
  5668                           
  5669                           ;DS1307.c: 34: I2C_Write(dat);
  5670  0B4D  0874               	movf	DS1307_Write@dat,w
  5671  0B4E  120A  158A  23C9  120A  158A  	fcall	_I2C_Write
  5672                           
  5673                           ;DS1307.c: 35: I2C_Clock();
  5674  0B53  120A  158A  232F   	fcall	_I2C_Clock
  5675  0B56  0008               	return
  5676  0B57                     __end_of_DS1307_Write:	
  5677                           
  5678                           	psect	text29
  5679  0BC9                     __ptext29:	
  5680 ;; *************** function _I2C_Write *****************
  5681 ;; Defined at:
  5682 ;;		line 40 in file "i2c.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  dat             1    wreg     unsigned char 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  dat             1    2[COMMON] unsigned char 
  5687 ;;  i               1    3[COMMON] unsigned char 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  1    wreg      void 
  5690 ;; Registers used:
  5691 ;;		wreg, status,2, status,0, pclath, cstack
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5697 ;;      Params:         0       0       0       0       0
  5698 ;;      Locals:         2       0       0       0       0
  5699 ;;      Temps:          2       0       0       0       0
  5700 ;;      Totals:         4       0       0       0       0
  5701 ;;Total ram usage:        4 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; Hardware stack levels required when called:    1
  5704 ;; This function calls:
  5705 ;;		_I2C_Clock
  5706 ;; This function is called by:
  5707 ;;		_DS1307_Write
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           
  5712                           ;psect for function _I2C_Write
  5713  0BC9                     _I2C_Write:	
  5714                           
  5715                           ;incstack = 0
  5716                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  5717                           ;I2C_Write@dat stored from wreg
  5718  0BC9  00F2               	movwf	I2C_Write@dat
  5719                           
  5720                           ;i2c.c: 42: unsigned char i ;
  5721                           ;i2c.c: 43: for(i=0;i<8;i++)
  5722  0BCA  01F3               	clrf	I2C_Write@i
  5723  0BCB  3008               	movlw	8
  5724  0BCC  0273               	subwf	I2C_Write@i,w
  5725  0BCD  1803               	btfsc	3,0
  5726  0BCE  2BEB               	goto	l67
  5727  0BCF                     l66:	
  5728                           
  5729                           ;i2c.c: 44: {
  5730                           ;i2c.c: 45: RD0 = (dat & 0x80) ? 1 : 0 ;
  5731  0BCF  1FF2               	btfss	I2C_Write@dat,7
  5732  0BD0  2BD5               	goto	u1210
  5733  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  5734  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  5735  0BD3  1408               	bsf	8,0	;volatile
  5736  0BD4  2BD8               	goto	l1719
  5737  0BD5                     u1210:	
  5738  0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  5739  0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  5740  0BD7  1008               	bcf	8,0	;volatile
  5741  0BD8                     l1719:	
  5742                           
  5743                           ;i2c.c: 47: I2C_Clock();
  5744  0BD8  120A  158A  232F  120A  158A  	fcall	_I2C_Clock
  5745                           
  5746                           ;i2c.c: 49: dat = dat << 1;
  5747  0BDD  0872               	movf	I2C_Write@dat,w
  5748  0BDE  00F0               	movwf	??_I2C_Write
  5749  0BDF  0770               	addwf	??_I2C_Write,w
  5750  0BE0  00F1               	movwf	??_I2C_Write+1
  5751  0BE1  0871               	movf	??_I2C_Write+1,w
  5752  0BE2  00F2               	movwf	I2C_Write@dat
  5753  0BE3  3001               	movlw	1
  5754  0BE4  00F0               	movwf	??_I2C_Write
  5755  0BE5  0870               	movf	??_I2C_Write,w
  5756  0BE6  07F3               	addwf	I2C_Write@i,f
  5757  0BE7  3008               	movlw	8
  5758  0BE8  0273               	subwf	I2C_Write@i,w
  5759  0BE9  1C03               	skipc
  5760  0BEA  2BCF               	goto	l66
  5761  0BEB                     l67:	
  5762                           
  5763                           ;i2c.c: 50: }
  5764                           ;i2c.c: 51: RD0 = 1;
  5765  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  5766  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  5767  0BED  1408               	bsf	8,0	;volatile
  5768  0BEE  0008               	return
  5769  0BEF                     __end_of_I2C_Write:	
  5770                           
  5771                           	psect	text30
  5772  0B2F                     __ptext30:	
  5773 ;; *************** function _I2C_Clock *****************
  5774 ;; Defined at:
  5775 ;;		line 9 in file "i2c.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;		None
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      void 
  5782 ;; Registers used:
  5783 ;;		None
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5789 ;;      Params:         0       0       0       0       0
  5790 ;;      Locals:         0       0       0       0       0
  5791 ;;      Temps:          0       0       0       0       0
  5792 ;;      Totals:         0       0       0       0       0
  5793 ;;Total ram usage:        0 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_DS1307_Write
  5799 ;;		_I2C_Write
  5800 ;;		_I2C_Ack
  5801 ;;		_I2C_NoAck
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           
  5806                           ;psect for function _I2C_Clock
  5807  0B2F                     _I2C_Clock:	
  5808                           
  5809                           ;i2c.c: 11: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5810                           
  5811                           ;incstack = 0
  5812                           ; Regs used in _I2C_Clock: []
  5813  0B2F  0000               	nop
  5814                           
  5815                           ;i2c.c: 12: RD1 = 1;
  5816  0B30  1283               	bcf	3,5	;RP0=0, select bank0
  5817  0B31  1303               	bcf	3,6	;RP1=0, select bank0
  5818  0B32  1488               	bsf	8,1	;volatile
  5819                           
  5820                           ;i2c.c: 13: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5821  0B33  0000               	nop
  5822                           
  5823                           ;i2c.c: 14: RD1 = 0;
  5824  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  5825  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  5826  0B36  1088               	bcf	8,1	;volatile
  5827  0B37  0008               	return
  5828  0B38                     __end_of_I2C_Clock:	
  5829                           
  5830                           	psect	text31
  5831  0B26                     __ptext31:	
  5832 ;; *************** function _DS1307_Read *****************
  5833 ;; Defined at:
  5834 ;;		line 38 in file "DS1307.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;		None
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;		None
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      unsigned char 
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, status,0, pclath, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5848 ;;      Params:         0       0       0       0       0
  5849 ;;      Locals:         0       0       0       0       0
  5850 ;;      Temps:          0       0       0       0       0
  5851 ;;      Totals:         0       0       0       0       0
  5852 ;;Total ram usage:        0 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    1
  5855 ;; This function calls:
  5856 ;;		_I2C_Read
  5857 ;; This function is called by:
  5858 ;;		_DS1307_Init
  5859 ;;		_DS1307_GetTime
  5860 ;;		_DS1307_GetDate
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           
  5865                           ;psect for function _DS1307_Read
  5866  0B26                     _DS1307_Read:	
  5867                           
  5868                           ;DS1307.c: 40: return I2C_Read();
  5869                           
  5870                           ;incstack = 0
  5871                           ; Regs used in _DS1307_Read: [wreg+status,2+status,0+pclath+cstack]
  5872  0B26  120A  158A  2464   	fcall	_I2C_Read
  5873  0B29  0008               	return
  5874  0B2A                     __end_of_DS1307_Read:	
  5875                           
  5876                           	psect	text32
  5877  0C64                     __ptext32:	
  5878 ;; *************** function _I2C_Read *****************
  5879 ;; Defined at:
  5880 ;;		line 54 in file "i2c.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;		None
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  dat             1    3[COMMON] unsigned char 
  5885 ;;  i               1    2[COMMON] unsigned char 
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      unsigned char 
  5888 ;; Registers used:
  5889 ;;		wreg, status,2, status,0
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5895 ;;      Params:         0       0       0       0       0
  5896 ;;      Locals:         2       0       0       0       0
  5897 ;;      Temps:          2       0       0       0       0
  5898 ;;      Totals:         4       0       0       0       0
  5899 ;;Total ram usage:        4 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; This function calls:
  5902 ;;		Nothing
  5903 ;; This function is called by:
  5904 ;;		_DS1307_Read
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           
  5909                           ;psect for function _I2C_Read
  5910  0C64                     _I2C_Read:	
  5911                           
  5912                           ;i2c.c: 56: unsigned char i, dat=0x00;
  5913                           
  5914                           ;incstack = 0
  5915                           ; Regs used in _I2C_Read: [wreg+status,2+status,0]
  5916  0C64  01F3               	clrf	I2C_Read@dat
  5917                           
  5918                           ;i2c.c: 58: TRISD0 = 1 ;
  5919  0C65  1683               	bsf	3,5	;RP0=1, select bank1
  5920  0C66  1303               	bcf	3,6	;RP1=0, select bank1
  5921  0C67  1408               	bsf	8,0	;volatile
  5922                           
  5923                           ;i2c.c: 60: for(i=0;i<8;i++)
  5924  0C68  01F2               	clrf	I2C_Read@i
  5925  0C69  3008               	movlw	8
  5926  0C6A  0272               	subwf	I2C_Read@i,w
  5927  0C6B  1803               	btfsc	3,0
  5928  0C6C  2C89               	goto	l72
  5929  0C6D                     l71:	
  5930                           
  5931                           ;i2c.c: 61: {
  5932                           ;i2c.c: 62: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5933  0C6D  0000               	nop
  5934                           
  5935                           ;i2c.c: 64: RD1 = 1;
  5936  0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  5937  0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  5938  0C70  1488               	bsf	8,1	;volatile
  5939                           
  5940                           ;i2c.c: 66: dat = dat << 1;
  5941  0C71  0873               	movf	I2C_Read@dat,w
  5942  0C72  00F0               	movwf	??_I2C_Read
  5943  0C73  0770               	addwf	??_I2C_Read,w
  5944  0C74  00F1               	movwf	??_I2C_Read+1
  5945  0C75  0871               	movf	??_I2C_Read+1,w
  5946  0C76  00F3               	movwf	I2C_Read@dat
  5947                           
  5948                           ;i2c.c: 68: if (RD0 == 1)
  5949  0C77  1C08               	btfss	8,0	;volatile
  5950  0C78  2C7D               	goto	l1741
  5951                           
  5952                           ;i2c.c: 69: dat++;
  5953  0C79  3001               	movlw	1
  5954  0C7A  00F0               	movwf	??_I2C_Read
  5955  0C7B  0870               	movf	??_I2C_Read,w
  5956  0C7C  07F3               	addwf	I2C_Read@dat,f
  5957  0C7D                     l1741:	
  5958                           
  5959                           ;i2c.c: 71: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5960  0C7D  0000               	nop
  5961                           
  5962                           ;i2c.c: 73: RD1 = 0;
  5963  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  5964  0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  5965  0C80  1088               	bcf	8,1	;volatile
  5966  0C81  3001               	movlw	1
  5967  0C82  00F0               	movwf	??_I2C_Read
  5968  0C83  0870               	movf	??_I2C_Read,w
  5969  0C84  07F2               	addwf	I2C_Read@i,f
  5970  0C85  3008               	movlw	8
  5971  0C86  0272               	subwf	I2C_Read@i,w
  5972  0C87  1C03               	skipc
  5973  0C88  2C6D               	goto	l71
  5974  0C89                     l72:	
  5975                           
  5976                           ;i2c.c: 74: }
  5977                           ;i2c.c: 76: TRISD0 = 0 ;
  5978  0C89  1683               	bsf	3,5	;RP0=1, select bank1
  5979  0C8A  1303               	bcf	3,6	;RP1=0, select bank1
  5980  0C8B  1008               	bcf	8,0	;volatile
  5981                           
  5982                           ;i2c.c: 78: return dat;
  5983  0C8C  0873               	movf	I2C_Read@dat,w
  5984  0C8D  0008               	return
  5985  0C8E                     __end_of_I2C_Read:	
  5986  007E                     btemp	set	126	;btemp
  5987  007E                     wtemp	set	126
  5988  007E                     wtemp0	set	126
  5989  0080                     wtemp1	set	128
  5990  0082                     wtemp2	set	130
  5991  0084                     wtemp3	set	132
  5992  0086                     wtemp4	set	134
  5993  0088                     wtemp5	set	136
  5994  007F                     wtemp6	set	127
  5995  007E                     ttemp	set	126
  5996  007E                     ttemp0	set	126
  5997  0081                     ttemp1	set	129
  5998  0084                     ttemp2	set	132
  5999  0087                     ttemp3	set	135
  6000  007F                     ttemp4	set	127
  6001  007E                     ltemp	set	126
  6002  007E                     ltemp0	set	126
  6003  0082                     ltemp1	set	130
  6004  0086                     ltemp2	set	134
  6005  0080                     ltemp3	set	128


Data Sizes:
    Strings     101
    Constant    40
    Data        15
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[10]), 
		 -> STR_6(CODE[10]), STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[12]), 
		 -> STR_2(CODE[12]), STR_1(CODE[10]), 

    DS1307_GetDate@y_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@c(BANK0[1]), 

    DS1307_GetDate@m_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@b(BANK0[1]), 

    DS1307_GetDate@d_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@a(BANK0[1]), 

    DS1307_GetDate@n_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@n(BANK0[1]), 

    DS1307_GetTime@h_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@a(BANK0[1]), 

    DS1307_GetTime@m_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@b(BANK0[1]), 

    DS1307_GetTime@s_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@c(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_LCDInit
    _showClock->_LCDGotoXY
    _showClock->_showDate
    _showClock->_showTime
    _readClock->___wmul
    ___wmul->___awdiv
    _DS1307_GetTime->_DS1307_Write
    _DS1307_GetDate->_DS1307_Write
    _initLED->_sendLED
    _doMenu->_LCDGotoXY
    _doMenu->_showDate
    _doMenu->_showTime
    _showTime->_LCDWriteInt
    _showDate->_LCDWriteInt
    _showDate->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDGotoXY->_LCDByte
    _DS1307_SetTime->_DS1307_Write
    _DS1307_SetDate->_DS1307_Write
    _LCDInit->_LCDByte
    _LCDByte->_LCDBusyLoop
    _DS1307_Init->_DS1307_Write
    _DS1307_Write->_I2C_Write
    _DS1307_Read->_I2C_Read

Critical Paths under _main in BANK0

    _main->_doMenu
    _readClock->___wmul
    _showTime->_LCDWriteInt
    _showDate->_LCDWriteInt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   48578
                                             25 BANK0      3     3      0
                        _DS1307_Init
                           _I2C_Init
                            _LCDByte
                            _LCDInit
                             _doMenu
                            _initLED
                          _readClock
                         _readInputs
                          _showClock
 ---------------------------------------------------------------------------------
 (1) _showClock                                            0     0      0   16927
                          _LCDGotoXY
                           _showDate
                           _showTime
 ---------------------------------------------------------------------------------
 (1) _readClock                                            7     7      0    3851
                                              2 BANK0      7     7      0
                     _DS1307_GetDate
                     _DS1307_GetTime
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     728
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _DS1307_GetTime                                       4     2      2     405
                                              5 COMMON     4     2      2
                        _DS1307_Read
                       _DS1307_Write
                            _I2C_Ack
                          _I2C_NoAck
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _DS1307_GetDate                                       5     2      3     480
                                              5 COMMON     5     2      3
                        _DS1307_Read
                       _DS1307_Write
                            _I2C_Ack
                          _I2C_NoAck
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Ack                                              0     0      0       0
                          _I2C_Clock
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0     197
                            _sendLED
 ---------------------------------------------------------------------------------
 (2) _sendLED                                              6     4      2     197
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _doMenu                                              17    17      0   24284
                                              8 BANK0     17    17      0
                     _DS1307_SetDate
                     _DS1307_SetTime
                            _LCDByte
                          _LCDGotoXY
                     _LCDWriteString
                            ___awdiv
                            ___awmod
                         _readInputs
                           _showDate
                           _showTime
 ---------------------------------------------------------------------------------
 (2) _showTime                                             1     1      0    6285
                                             13 COMMON     1     1      0
                            _LCDByte
                        _LCDWriteInt
 ---------------------------------------------------------------------------------
 (2) _showDate                                             1     1      0    8283
                                             13 COMMON     1     1      0
                            _LCDByte
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (3) _LCDWriteString                                       3     3      0    1998
                                             12 COMMON     1     1      0
                                              0 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDWriteInt                                          9     8      1    4844
                                             12 COMMON     1     0      1
                                              0 BANK0      8     8      0
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1144
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1784
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _readInputs                                           4     4      0      23
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _LCDGotoXY                                            3     2      1    2359
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _DS1307_SetTime                                       3     1      2     285
                                              5 COMMON     3     1      2
                       _DS1307_Write
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _DS1307_SetDate                                       4     1      3     360
                                              5 COMMON     4     1      3
                       _DS1307_Write
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              3     3      0    1580
                                             12 COMMON     2     2      0
                                              0 BANK0      1     1      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (4) _LCDByte                                              7     6      1    1441
                                              5 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (5) _LCDBusyLoop                                          5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS1307_Init                                          2     2      0     275
                                              5 COMMON     2     2      0
                        _DS1307_Read
                       _DS1307_Write
                          _I2C_NoAck
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_NoAck                                            0     0      0       0
                          _I2C_Clock
 ---------------------------------------------------------------------------------
 (3) _DS1307_Write                                         1     1      0     113
                                              4 COMMON     1     1      0
                          _I2C_Clock
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            4     4      0      91
                                              0 COMMON     4     4      0
                          _I2C_Clock
 ---------------------------------------------------------------------------------
 (4) _I2C_Clock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DS1307_Read                                          0     0      0      93
                           _I2C_Read
 ---------------------------------------------------------------------------------
 (4) _I2C_Read                                             4     4      0      93
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1307_Init
     _DS1307_Read
       _I2C_Read
     _DS1307_Write
       _I2C_Clock
       _I2C_Write
         _I2C_Clock
     _I2C_NoAck
       _I2C_Clock
     _I2C_Start
     _I2C_Stop
   _I2C_Init
   _LCDByte
     _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _doMenu
     _DS1307_SetDate
       _DS1307_Write
         _I2C_Clock
         _I2C_Write
           _I2C_Clock
       _I2C_Start
       _I2C_Stop
     _DS1307_SetTime
       _DS1307_Write
         _I2C_Clock
         _I2C_Write
           _I2C_Clock
       _I2C_Start
       _I2C_Stop
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
     ___awdiv
     ___awmod
     _readInputs
     _showDate
       _LCDByte
         _LCDBusyLoop
       _LCDWriteInt
         _LCDByte
           _LCDBusyLoop
         ___awdiv
         ___awmod
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
     _showTime
       _LCDByte
         _LCDBusyLoop
       _LCDWriteInt
         _LCDByte
           _LCDBusyLoop
         ___awdiv
         ___awmod
   _initLED
     _sendLED
   _readClock
     _DS1307_GetDate
       _DS1307_Read
         _I2C_Read
       _DS1307_Write
         _I2C_Clock
         _I2C_Write
           _I2C_Clock
       _I2C_Ack
         _I2C_Clock
       _I2C_NoAck
         _I2C_Clock
       _I2C_Start
       _I2C_Stop
     _DS1307_GetTime
       _DS1307_Read
         _I2C_Read
       _DS1307_Write
         _I2C_Clock
         _I2C_Write
           _I2C_Clock
       _I2C_Ack
         _I2C_Clock
       _I2C_NoAck
         _I2C_Clock
       _I2C_Start
       _I2C_Stop
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _readInputs
   _showClock
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _showDate
       _LCDByte
         _LCDBusyLoop
       _LCDWriteInt
         _LCDByte
           _LCDBusyLoop
         ___awdiv
         ___awmod
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
     _showTime
       _LCDByte
         _LCDBusyLoop
       _LCDWriteInt
         _LCDByte
           _LCDBusyLoop
         ___awdiv
         ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3C      12        0.0%
ABS                  0      0      3C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue May 10 19:22:49 2016

           ?_LCDBusyLoop 0070       __size_of_I2C_Clock 0009       __size_of_I2C_NoAck 000A  
                      pc 0002       __size_of_I2C_Start 0011              __CFG_CP$OFF 0000  
     __size_of_I2C_Write 0026                       l71 0C6D                       l72 0C89  
                     l66 0BCF                       l67 0BEB                       l99 0E0D  
           ___awdiv@sign 0076                       fsr 0004      ___wmul@multiplicand 007B  
            __CFG_LVP$ON 0000                      l100 0E10                      l133 0C0E  
                    l134 0BF7                      l305 065D                      l251 0412  
                    l317 06C3                      l263 046A                      l239 03C7  
                    l281 05A8                      l451 0C23                      l357 0248  
                    l293 05F6                      l365 0FC6                      _RB1 0031  
                    _RC0 0038                      _RB2 0032                      _RC1 0039  
                    _RD0 0040                      _RC2 003A                      _RB4 0034  
                    _RD1 0041                      _RB5 0035                      _RB6 0036  
                    _RB7 0037             __CFG_CPD$OFF 0000                      _day 003E  
        __end_of_I2C_Ack 0B4C                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076             __CFG_FOSC$XT 0000             _DS1307_Write 0B4C  
LCDWriteInt@field_length 007C          __end_of_LCDByte 0E44          __end_of_LCDInit 0D59  
           ?_LCDWriteInt 007C              LCDByte@temp 007B                     l2013 0C00  
                   l2007 0BF9                     l2009 0BFB                     l2041 0216  
                   l2027 0CCD                     l2043 021B                     l2035 0207  
                   l2051 022A                     l2133 0DF0                     l2045 0220  
                   l2037 020C                     l2213 036F                     l2047 0225  
                   l2039 0211                     l2303 0474                     l2311 0448  
                   l2215 037A                     l2313 0489                     l2305 0476  
                   l2073 0FC9                     l2081 0FF3                     l2411 0676  
                   l2323 0548                     l2243 03D1                     l2251 03A5  
                   l2067 0FB9                     l2253 03D9                     l2245 03D3  
                   l2325 0553                     l2503 0231                     l2415 0630  
                   l2319 04A1                     l2255 03DE                     l2087 0C19  
                   l2417 0689                     l2361 05BC                     l2329 055A  
                   l2273 041C                     l2281 03F0                     l2443 06A0  
                   l2419 068E                     l2363 05C1                     l2355 05B6  
                   l2283 0431                     l2275 041E                     l1741 0C7D  
                   l1821 0F3E                     l1813 0F2B                     l1805 0F07  
                   l1901 0E75                     l2453 0704                     l2445 06E4  
                   l2285 0436                     l1719 0BD8                     l1807 0F15  
                   l2439 06D1                     l2391 061E                     l2383 0606  
                   l2359 0584                     l1817 0F36                     l1833 0D63  
                   l1905 0E7D                     l2457 07E2                     l1851 0D8C  
                   l2387 05D3                     l1677 0F4E                     l1845 0D70  
                   l1837 0D6A                     l1925 01A9                     l1909 0E47  
                   l2389 0619                     l2477 00B6                     l2469 00BB  
                   l1847 0D7E                     l1855 0D97                     l1919 018F  
                   l1795 0EFF                     l1859 0D9F                     l1789 0EF4  
                   STR_1 0067                     STR_2 003D                     STR_3 0031  
                   STR_4 0071                     STR_5 005D                     STR_6 0053  
                   STR_7 0049                     STR_8 0086                     STR_9 007E  
                   u1210 0BD5                     u1305 0E2E                     u1165 0F56  
                   u2205 06BD                     u1175 0F62                     u2135 0655  
                   u1185 0F78                     u1345 0F0A                     u2065 05F0  
                   u1275 0DF8                     u1365 0F16                     u1445 0D73  
                   u1605 0FB7                     u2317 00DC                     u1295 0E16  
                   u1375 0F22                     u2255 06EA                     u2327 0FA7  
                   u1385 0F2C                     u1465 0D84                     u2265 06F2  
                   u1625 0FF1                     u2337 0FBB                     u1475 0D8D  
                   u2275 06FA                     u2347 0FD0                     u2285 0702  
                   u1805 040D                     u2357 0FDA                     u1645 0C24  
                   u1735 03C2                     u2367 0FF7                     u1655 0C2B  
                   u2377 0CC3                     u2387 0D25                     u1595 0CD9  
                   u1925 048F                     u1685 02D9                     u1935 0497  
                   u1945 049F                     u1875 0465                     u1995 05A1  
           __CFG_WRT$OFF 0000                     _date 003C                     _main 0099  
                   _hour 0040       __size_of_LCDGotoXY 0026         __end_of_I2C_Init 0B2F  
       __end_of_I2C_Read 0C8E                     _year 0048                     btemp 007E  
       __end_of_I2C_Stop 0B76            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
       DS1307_SetDate@dd 0075         DS1307_SetDate@mm 0076         DS1307_SetDate@nn 0078  
       DS1307_SetDate@yy 0077                    ?_main 0070          __end_of___awdiv 0F43  
                  STR_10 007A                    STR_11 0092                    STR_12 0082  
                  STR_13 008E                    STR_14 008A            __CFG_WDTE$OFF 0000  
        __end_of___awmod 0DA4             LCDInit@style 0020          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _PORTD 0008                    _TRISD 0088  
          __CFG_PWRTE$ON 0000         DS1307_SetTime@hh 0077         DS1307_SetTime@mm 0075  
       DS1307_SetTime@ss 0076           _DS1307_GetDate 00E4          __end_of_initLED 0BC9  
         _DS1307_GetTime 0E94        __end_of_I2C_Clock 0B38        __end_of_I2C_NoAck 0B42  
                  _month 0044          __end_of_sendLED 1000                    _state 004D  
      __end_of_I2C_Start 0B87        __end_of_I2C_Write 0BEF                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080           _DS1307_SetDate 0C8E           _DS1307_SetTime 0C3C  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07ED             __end_of_main 00E4  
              ??_I2C_Ack 0070                   ??_main 0039        __end_of_LCDGotoXY 0C15  
          LCDByte@isdata 0075                ??_LCDByte 0076                ??_LCDInit 007C  
 __end_of_DS1307_GetDate 014A   __end_of_DS1307_GetTime 0EEA                I2C_Read@i 0072  
 __end_of_DS1307_SetDate 0CBC         ___awdiv@dividend 0072   __end_of_DS1307_SetTime 0C64  
                 _TRISC0 0438                   _TRISC1 0439                   _TRISD0 0440  
                 _TRISC2 043A                   _TRISD1 0441             DS1307_Init@s 0076  
         _LCDWriteString 0E44                   ___wmul 0C15                ??___awdiv 0074  
                 _doMenu 036F                ??___awmod 0074     __size_of_LCDBusyLoop 005D  
       ___awdiv@quotient 0077                   _minute 0042          ___awmod@divisor 0070  
        ___awmod@counter 0075                   _ttable 0009                ??_initLED 0076  
              ?_I2C_Init 0070                ?_I2C_Read 0070                ??_sendLED 0072  
       __end_of_showDate 0249          ?_DS1307_GetDate 0075                ?_I2C_Stop 0070  
           LCDWriteInt@c 0023             LCDWriteInt@d 0025         __end_of_showTime 0D1E  
        ?_DS1307_GetTime 0075          ?_DS1307_SetDate 0075          ?_DS1307_SetTime 0075  
   __size_of_LCDWriteInt 0068  __end_of__initialization 07FC   __end_of_LCDWriteString 0E94  
              LCDByte@hn 0078                LCDByte@ln 0079           __pcstackCOMMON 0070  
           __pidataBANK0 0B57               ??_I2C_Init 0070               ??_I2C_Read 0070  
             ??_I2C_Stop 0070            ??_DS1307_Init 0075            ??_DS1307_Read 0074  
             __pbssBANK0 004B       __size_of_readClock 0126          ?_LCDWriteString 0070  
             __pmaintext 0099                  ?___wmul 0079                  ?_doMenu 0070  
                _I2C_Ack 0B42               I2C_Write@i 0073       __size_of_showClock 0018  
                _LCDByte 0DF4                  _LCDInit 0D1E               __stringtab 0003  
              _I2C_Clock 0B2F                _I2C_NoAck 0B38                _I2C_Start 0B76  
              _I2C_Write 0BC9      __end_of_DS1307_Init 0DF4      __end_of_DS1307_Read 0B2A  
                _bButton 004B                ?_showDate 0070                ?_showTime 0070  
           I2C_Write@dat 0072                  ___awdiv 0EEA                  ___awmod 0D59  
        __size_of___wmul 0027               _readInputs 0CBC          __size_of_doMenu 047E  
                __ptext1 0B98                  __ptext2 0249                  __ptext3 0C15  
                __ptext4 0E94                  __ptext5 00E4                  __ptext6 0B42  
                __ptext7 0BB0                  __ptext8 0FA0                  __ptext9 036F  
      __end_of_readClock 036F                  _initLED 0BB0                  doMenu@d 0033  
                doMenu@h 002B                  doMenu@m 002D                  doMenu@n 0031  
                doMenu@s 002F                  doMenu@y 0037                  _sendLED 0FA0  
       ___awmod@dividend 0072                  _seconds 0046                _LCDGotoXY 0BEF  
   end_of_initialization 07FC        __end_of_monthDays 0031               ?_I2C_Clock 0070  
             ?_I2C_NoAck 0070               ?_I2C_Start 0070        __end_of_showClock 0BB0  
             ?_I2C_Write 0070               ??_showDate 007D               ??_showTime 007D  
       ??_DS1307_GetDate 0078         ??_DS1307_GetTime 0077        LCDWriteString@msg 0021  
       ??_DS1307_SetDate 0078         ??_DS1307_SetTime 0077                _TRISBbits 0086  
             ?_LCDGotoXY 007C        __size_of_I2C_Init 0005        __size_of_I2C_Read 002A  
      __size_of_I2C_Stop 0010              _DS1307_Init 0DA4              _DS1307_Read 0B26  
             LCDGotoXY@x 0020               LCDGotoXY@y 007C            ??_LCDBusyLoop 0070  
            ?_readInputs 0070           __end_of___wmul 0C3C           __end_of_doMenu 07ED  
         __end_of_ttable 0025      start_initialization 07ED            ?_DS1307_Write 0070  
          ??_LCDWriteInt 0020         ??_LCDWriteString 007C              ??_I2C_Clock 0070  
            ??_I2C_NoAck 0070               readClock@a 0026               readClock@b 0027  
             readClock@c 0028               readClock@n 0025              ??_I2C_Start 0070  
            ??_I2C_Write 0070          DS1307_Write@dat 0074                 ??___wmul 007D  
               ??_doMenu 0028               init_fetch0 0B87              __pdataBANK0 003C  
               ?_I2C_Ack 0070      __end_of_LCDBusyLoop 0FA0                 ?_LCDByte 0075  
               ?_LCDInit 0070           ??_DS1307_Write 0074                 LCDByte@c 007A  
              ___latbits 0002            __pcstackBANK0 0020              ??_LCDGotoXY 007D  
           _menuFunction 004C      __size_of_readInputs 002F      __end_of_LCDWriteInt 01B2  
            I2C_Read@dat 0073                 ?___awdiv 0070                 ?___awmod 0070  
      __size_of_showDate 0097        __size_of_showTime 0033                __pstrings 0003  
               ?_initLED 0070                 _I2C_Init 0B2A                 _I2C_Read 0C64  
               ?_sendLED 0070                 _I2C_Stop 0B66                _readClock 0249  
        LCDBusyLoop@busy 0072          LCDBusyLoop@temp 0073                _last_hour 004A  
         ___wmul@product 0020                _monthDays 0025                _showClock 0B98  
            _LCDBusyLoop 0F43         LCDWriteString@cc 0020         __size_of_I2C_Ack 000A  
            __stringbase 0008        ___wmul@multiplier 0079         __size_of_LCDByte 0050  
       __size_of_LCDInit 003B               ?_readClock 0070              _LCDWriteInt 014A  
           ?_DS1307_Init 0070             ?_DS1307_Read 0070              doMenu@m_251 0035  
   __end_of_DS1307_Write 0B57               ?_showClock 0070             ??_readInputs 0070  
       __size_of___awdiv 0059         __size_of___awmod 004B        LCDBusyLoop@status 0074  
     __end_of__stringtab 0009      DS1307_GetDate@d_ptr 0075         __size_of_initLED 0019  
    DS1307_GetDate@m_ptr 0076      DS1307_GetDate@n_ptr 0079      DS1307_GetDate@y_ptr 0077  
       __size_of_sendLED 0060                 __ptext10 0CEB                 __ptext11 01B2  
               __ptext20 0D1E                 __ptext12 0E44                 __ptext21 0DF4  
               __ptext13 014A                 __ptext30 0B2F                 __ptext22 0F43  
               __ptext14 0D59                 __ptext31 0B26                 __ptext23 0B2A  
               __ptext15 0EEA                 __ptext32 0C64                 __ptext24 0DA4  
               __ptext16 0CBC                 __ptext25 0B66                 __ptext17 0BEF  
               __ptext26 0B76                 __ptext18 0C3C                 __ptext27 0B38  
               __ptext19 0C8E                 __ptext28 0B4C                 __ptext29 0BC9  
     __end_of_readInputs 0CEB            __size_of_main 004B                 _showDate 01B2  
               _showTime 0CEB              ??_readClock 0022                 init_ram0 0B8B  
__size_of_DS1307_GetDate 0066  __size_of_DS1307_GetTime 0056                 sendLED@c 0070  
               sendLED@i 0074  __size_of_DS1307_SetDate 002E           LCDWriteInt@val 0027  
__size_of_DS1307_SetTime 0028                stringcode 0003              ??_showClock 007E  
               stringdir 0003                 stringtab 0003    __size_of_DS1307_Write 000B  
    DS1307_GetTime@h_ptr 0078      DS1307_GetTime@m_ptr 0075      DS1307_GetTime@s_ptr 0076  
   __size_of_DS1307_Init 0050     __size_of_DS1307_Read 0004       readInputs@pinstate 0073  
__size_of_LCDWriteString 0050  
