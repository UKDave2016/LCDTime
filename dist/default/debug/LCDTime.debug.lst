

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed May 11 13:59:32 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0088                     	;# 
   145  0089                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  018C                     	;# 
   278  018D                     	;# 
   279                           
   280                           	psect	idataBANK0
   281  0AEB                     __pidataBANK0:	
   282                           
   283                           ;initializer for _led_digits
   284  0AEB  3400               	retlw	0
   285  0AEC  3401               	retlw	1
   286  0AED  3402               	retlw	2
   287  0AEE  3403               	retlw	3
   288  0AEF  3404               	retlw	4
   289  0AF0  3405               	retlw	5
   290  0AF1  3406               	retlw	6
   291  0AF2  3407               	retlw	7
   292  0AF3  3408               	retlw	8
   293  0AF4  3409               	retlw	9
   294                           
   295                           ;initializer for _date
   296  0AF5  3408               	retlw	8
   297  0AF6  3400               	retlw	0
   298                           
   299                           ;initializer for _day
   300  0AF7  3401               	retlw	1
   301  0AF8  3400               	retlw	0
   302                           
   303                           ;initializer for _hour
   304  0AF9  3406               	retlw	6
   305  0AFA  3400               	retlw	0
   306                           
   307                           ;initializer for _minute
   308  0AFB  3405               	retlw	5
   309  0AFC  3400               	retlw	0
   310                           
   311                           ;initializer for _month
   312  0AFD  3405               	retlw	5
   313  0AFE  3400               	retlw	0
   314                           
   315                           ;initializer for _seconds
   316  0AFF  3404               	retlw	4
   317  0B00  3400               	retlw	0
   318                           
   319                           ;initializer for _year
   320  0B01  3410               	retlw	16
   321  0B02  3400               	retlw	0
   322                           
   323                           ;initializer for _last_hour
   324  0B03  34EE               	retlw	238
   325                           
   326                           	psect	strings
   327  0003                     __pstrings:	
   328  0003                     stringtab:	
   329  0003                     __stringtab:	
   330  0003                     stringcode:	
   331                           ;	String table - string pointers are 1 byte each
   332                           
   333  0003                     stringdir:	
   334  0003  3000               	movlw	high stringdir
   335  0004  008A               	movwf	10
   336  0005  0804               	movf	4,w
   337  0006  0A84               	incf	4,f
   338  0007  0782               	addwf	2,f
   339  0008                     __stringbase:	
   340  0008  3400               	retlw	0
   341  0009                     __end_of__stringtab:	
   342  0009                     _ttable:	
   343  0009  3400               	retlw	0
   344  000A  3402               	retlw	2
   345  000B  3404               	retlw	4
   346  000C  3400               	retlw	0
   347  000D  3403               	retlw	3
   348  000E  3400               	retlw	0
   349  000F  3401               	retlw	1
   350  0010  3410               	retlw	16
   351  0011  3403               	retlw	3
   352  0012  3402               	retlw	2
   353  0013  3400               	retlw	0
   354  0014  3400               	retlw	0
   355  0015  3403               	retlw	3
   356  0016  3402               	retlw	2
   357  0017  3401               	retlw	1
   358  0018  3400               	retlw	0
   359  0019  3406               	retlw	6
   360  001A  3400               	retlw	0
   361  001B  3404               	retlw	4
   362  001C  3400               	retlw	0
   363  001D  3406               	retlw	6
   364  001E  3405               	retlw	5
   365  001F  3400               	retlw	0
   366  0020  3420               	retlw	32
   367  0021  3406               	retlw	6
   368  0022  3405               	retlw	5
   369  0023  3404               	retlw	4
   370  0024  3400               	retlw	0
   371  0025                     __end_of_ttable:	
   372  0025                     _monthDays:	
   373  0025  341F               	retlw	31
   374  0026  341D               	retlw	29
   375  0027  341F               	retlw	31
   376  0028  341E               	retlw	30
   377  0029  341F               	retlw	31
   378  002A  341E               	retlw	30
   379  002B  341F               	retlw	31
   380  002C  341F               	retlw	31
   381  002D  341E               	retlw	30
   382  002E  341F               	retlw	31
   383  002F  341E               	retlw	30
   384  0030  341F               	retlw	31
   385  0031                     __end_of_monthDays:	
   386  0008                     _PORTD	set	8
   387  0031                     _RB1	set	49
   388  0032                     _RB2	set	50
   389  0034                     _RB4	set	52
   390  0035                     _RB5	set	53
   391  0036                     _RB6	set	54
   392  0037                     _RB7	set	55
   393  0038                     _RC0	set	56
   394  0039                     _RC1	set	57
   395  003A                     _RC2	set	58
   396  0040                     _RD0	set	64
   397  0041                     _RD1	set	65
   398  0086                     _TRISBbits	set	134
   399  0088                     _TRISD	set	136
   400  0438                     _TRISC0	set	1080
   401  0439                     _TRISC1	set	1081
   402  043A                     _TRISC2	set	1082
   403  0440                     _TRISD0	set	1088
   404  0441                     _TRISD1	set	1089
   405  0031                     STR_3:	
   406  0031  3453               	retlw	83	;'S'
   407  0032  3465               	retlw	101	;'e'
   408  0033  3474               	retlw	116	;'t'
   409  0034  3420               	retlw	32	;' '
   410  0035  3453               	retlw	83	;'S'
   411  0036  3465               	retlw	101	;'e'
   412  0037  3463               	retlw	99	;'c'
   413  0038  346F               	retlw	111	;'o'
   414  0039  346E               	retlw	110	;'n'
   415  003A  3464               	retlw	100	;'d'
   416  003B  3473               	retlw	115	;'s'
   417  003C  3400               	retlw	0
   418  003D                     STR_2:	
   419  003D  3453               	retlw	83	;'S'
   420  003E  3465               	retlw	101	;'e'
   421  003F  3474               	retlw	116	;'t'
   422  0040  3420               	retlw	32	;' '
   423  0041  344D               	retlw	77	;'M'
   424  0042  3469               	retlw	105	;'i'
   425  0043  346E               	retlw	110	;'n'
   426  0044  3475               	retlw	117	;'u'
   427  0045  3474               	retlw	116	;'t'
   428  0046  3465               	retlw	101	;'e'
   429  0047  3473               	retlw	115	;'s'
   430  0048  3400               	retlw	0
   431  0049                     STR_7:	
   432  0049  3453               	retlw	83	;'S'
   433  004A  3465               	retlw	101	;'e'
   434  004B  3474               	retlw	116	;'t'
   435  004C  3420               	retlw	32	;' '
   436  004D  3444               	retlw	68	;'D'
   437  004E  3461               	retlw	97	;'a'
   438  004F  3479               	retlw	121	;'y'
   439  0050  3420               	retlw	32	;' '
   440  0051  3420               	retlw	32	;' '
   441  0052  3400               	retlw	0
   442  0053                     STR_6:	
   443  0053  3453               	retlw	83	;'S'
   444  0054  3465               	retlw	101	;'e'
   445  0055  3474               	retlw	116	;'t'
   446  0056  3420               	retlw	32	;' '
   447  0057  3444               	retlw	68	;'D'
   448  0058  3461               	retlw	97	;'a'
   449  0059  3474               	retlw	116	;'t'
   450  005A  3465               	retlw	101	;'e'
   451  005B  3420               	retlw	32	;' '
   452  005C  3400               	retlw	0
   453  005D                     STR_5:	
   454  005D  3453               	retlw	83	;'S'
   455  005E  3465               	retlw	101	;'e'
   456  005F  3474               	retlw	116	;'t'
   457  0060  3420               	retlw	32	;' '
   458  0061  344D               	retlw	77	;'M'
   459  0062  346F               	retlw	111	;'o'
   460  0063  346E               	retlw	110	;'n'
   461  0064  3474               	retlw	116	;'t'
   462  0065  3468               	retlw	104	;'h'
   463  0066  3400               	retlw	0
   464  0067                     STR_1:	
   465  0067  3453               	retlw	83	;'S'
   466  0068  3465               	retlw	101	;'e'
   467  0069  3474               	retlw	116	;'t'
   468  006A  3420               	retlw	32	;' '
   469  006B  3448               	retlw	72	;'H'
   470  006C  346F               	retlw	111	;'o'
   471  006D  3475               	retlw	117	;'u'
   472  006E  3472               	retlw	114	;'r'
   473  006F  3473               	retlw	115	;'s'
   474  0070  3400               	retlw	0
   475  0071                     STR_4:	
   476  0071  3453               	retlw	83	;'S'
   477  0072  3465               	retlw	101	;'e'
   478  0073  3474               	retlw	116	;'t'
   479  0074  3420               	retlw	32	;' '
   480  0075  3459               	retlw	89	;'Y'
   481  0076  3465               	retlw	101	;'e'
   482  0077  3461               	retlw	97	;'a'
   483  0078  3472               	retlw	114	;'r'
   484  0079  3400               	retlw	0
   485  007A                     STR_10:	
   486  007A  3457               	retlw	87	;'W'
   487  007B  3465               	retlw	101	;'e'
   488  007C  3464               	retlw	100	;'d'
   489  007D  3400               	retlw	0
   490  007E                     STR_9:	
   491  007E  3454               	retlw	84	;'T'
   492  007F  3475               	retlw	117	;'u'
   493  0080  3465               	retlw	101	;'e'
   494  0081  3400               	retlw	0
   495  0082                     STR_12:	
   496  0082  3446               	retlw	70	;'F'
   497  0083  3472               	retlw	114	;'r'
   498  0084  3469               	retlw	105	;'i'
   499  0085  3400               	retlw	0
   500  0086                     STR_8:	
   501  0086  344D               	retlw	77	;'M'
   502  0087  346F               	retlw	111	;'o'
   503  0088  346E               	retlw	110	;'n'
   504  0089  3400               	retlw	0
   505  008A                     STR_14:	
   506  008A  3453               	retlw	83	;'S'
   507  008B  3475               	retlw	117	;'u'
   508  008C  346E               	retlw	110	;'n'
   509  008D  3400               	retlw	0
   510  008E                     STR_13:	
   511  008E  3453               	retlw	83	;'S'
   512  008F  3461               	retlw	97	;'a'
   513  0090  3474               	retlw	116	;'t'
   514  0091  3400               	retlw	0
   515  0092                     STR_11:	
   516  0092  3454               	retlw	84	;'T'
   517  0093  3468               	retlw	104	;'h'
   518  0094  3475               	retlw	117	;'u'
   519  0095  3400               	retlw	0
   520                           
   521                           ; #config settings
   522  0000                     
   523                           	psect	cinit
   524  07ED                     start_initialization:	
   525  07ED                     __initialization:	
   526                           
   527                           ; Clear objects allocated to BANK0
   528  07ED  01D6               	clrf	__pbssBANK0& (0+127)
   529  07EE  01D7               	clrf	(__pbssBANK0+1)& (0+127)
   530  07EF  01D8               	clrf	(__pbssBANK0+2)& (0+127)
   531                           
   532                           ; Initialize objects allocated to BANK0
   533  07F0  1383               	bcf	3,7	;select IRP bank0
   534  07F1  3056               	movlw	low (__pdataBANK0+25)
   535  07F2  00FD               	movwf	btemp+-1
   536  07F3  300A               	movlw	high __pidataBANK0
   537  07F4  00FE               	movwf	btemp
   538  07F5  30EB               	movlw	low __pidataBANK0
   539  07F6  00FF               	movwf	btemp+1
   540  07F7  303D               	movlw	low __pdataBANK0
   541  07F8  0084               	movwf	4
   542  07F9  120A  118A  209B   	fcall	init_ram0
   543  07FC                     end_of_initialization:	
   544                           ;End of C runtime variable initialization code
   545                           
   546  07FC                     __end_of__initialization:	
   547  07FC  0183               	clrf	3
   548  07FD  120A  158A  2CB5   	ljmp	_main	;jump to C main() function
   549                           
   550                           	psect	bssBANK0
   551  0056                     __pbssBANK0:	
   552  0056                     _bButton:	
   553  0056                     	ds	1
   554  0057                     _menuFunction:	
   555  0057                     	ds	1
   556  0058                     _state:	
   557  0058                     	ds	1
   558                           
   559                           	psect	dataBANK0
   560  003D                     __pdataBANK0:	
   561  003D                     _led_digits:	
   562  003D                     	ds	10
   563  0047                     _date:	
   564  0047                     	ds	2
   565  0049                     _day:	
   566  0049                     	ds	2
   567  004B                     _hour:	
   568  004B                     	ds	2
   569  004D                     _minute:	
   570  004D                     	ds	2
   571  004F                     _month:	
   572  004F                     	ds	2
   573  0051                     _seconds:	
   574  0051                     	ds	2
   575  0053                     _year:	
   576  0053                     	ds	2
   577  0055                     _last_hour:	
   578  0055                     	ds	1
   579                           
   580                           	psect	inittext
   581  0097                     init_fetch0:	
   582                           ;	Called with low address in FSR and high address in W
   583                           
   584  0097  087E               	movf	126,w
   585  0098  008A               	movwf	10
   586  0099  087F               	movf	127,w
   587  009A  0082               	movwf	2
   588  009B                     init_ram0:	
   589                           ;Called with:
   590                           ;	high address of idata address in btemp 
   591                           ;	low address of idata address in btemp+1 
   592                           ;	low address of data in FSR
   593                           ;	high address + 1 of data in btemp-1
   594                           
   595  009B  2097  120A  118A   	fcall	init_fetch0
   596  009E  0080               	movwf	0
   597  009F  0A84               	incf	4,f
   598  00A0  0804               	movf	4,w
   599  00A1  067D               	xorwf	125,w
   600  00A2  1903               	btfsc	3,2
   601  00A3  3400               	retlw	0
   602  00A4  0AFF               	incf	127,f
   603  00A5  1903               	btfsc	3,2
   604  00A6  0AFE               	incf	126,f
   605  00A7  289B               	goto	init_ram0
   606                           
   607                           	psect	cstackCOMMON
   608  0070                     __pcstackCOMMON:	
   609  0070                     ?_I2C_Start:	
   610  0070                     ??_I2C_Start:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_DS1307_Write:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_DS1307_Read:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_I2C_NoAck:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ??_I2C_NoAck:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_I2C_Stop:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ??_I2C_Stop:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_I2C_Write:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ??_I2C_Write:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_I2C_Clock:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ??_I2C_Clock:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_I2C_Read:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ??_I2C_Read:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_I2C_Ack:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ??_I2C_Ack:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_LCDBusyLoop:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ??_LCDBusyLoop:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_initLED:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_readClock:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_showClock:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_readInputs:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_readInputs:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_doMenu:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_showTime:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_showDate:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_sendLED:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_I2C_Init:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??_I2C_Init:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_LCDInit:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_LCDWriteString:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_main:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_DS1307_Init:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?___awdiv:	
   707                           ; 2 bytes @ 0x0
   708                           
   709  0070                     ?___awmod:	
   710                           ; 2 bytes @ 0x0
   711                           
   712  0070                     sendLED@c:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0070                     ___awdiv@divisor:	
   716                           ; 2 bytes @ 0x0
   717                           
   718  0070                     ___awmod@divisor:	
   719                           ; 2 bytes @ 0x0
   720                           
   721                           
   722                           ; 2 bytes @ 0x0
   723  0070                     	ds	2
   724  0072                     ??_sendLED:	
   725  0072                     I2C_Write@dat:	
   726                           ; 1 bytes @ 0x2
   727                           
   728  0072                     I2C_Read@i:	
   729                           ; 1 bytes @ 0x2
   730                           
   731  0072                     LCDBusyLoop@busy:	
   732                           ; 1 bytes @ 0x2
   733                           
   734  0072                     ___awdiv@dividend:	
   735                           ; 1 bytes @ 0x2
   736                           
   737  0072                     ___awmod@dividend:	
   738                           ; 2 bytes @ 0x2
   739                           
   740                           
   741                           ; 2 bytes @ 0x2
   742  0072                     	ds	1
   743  0073                     I2C_Write@i:	
   744  0073                     I2C_Read@dat:	
   745                           ; 1 bytes @ 0x3
   746                           
   747  0073                     LCDBusyLoop@temp:	
   748                           ; 1 bytes @ 0x3
   749                           
   750  0073                     readInputs@pinstate:	
   751                           ; 1 bytes @ 0x3
   752                           
   753                           
   754                           ; 1 bytes @ 0x3
   755  0073                     	ds	1
   756  0074                     ??_DS1307_Write:	
   757  0074                     ??_DS1307_Read:	
   758                           ; 1 bytes @ 0x4
   759                           
   760  0074                     ??___awdiv:	
   761                           ; 1 bytes @ 0x4
   762                           
   763  0074                     ??___awmod:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0074                     DS1307_Write@dat:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     LCDBusyLoop@status:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0074                     sendLED@i:	
   773                           ; 1 bytes @ 0x4
   774                           
   775                           
   776                           ; 2 bytes @ 0x4
   777  0074                     	ds	1
   778  0075                     ??_DS1307_Init:	
   779  0075                     ?_DS1307_SetTime:	
   780                           ; 1 bytes @ 0x5
   781                           
   782  0075                     ?_DS1307_SetDate:	
   783                           ; 1 bytes @ 0x5
   784                           
   785  0075                     ?_DS1307_GetTime:	
   786                           ; 1 bytes @ 0x5
   787                           
   788  0075                     ?_DS1307_GetDate:	
   789                           ; 1 bytes @ 0x5
   790                           
   791  0075                     ?_LCDByte:	
   792                           ; 1 bytes @ 0x5
   793                           
   794  0075                     DS1307_SetTime@mm:	
   795                           ; 1 bytes @ 0x5
   796                           
   797  0075                     DS1307_SetDate@dd:	
   798                           ; 1 bytes @ 0x5
   799                           
   800  0075                     DS1307_GetTime@m_ptr:	
   801                           ; 1 bytes @ 0x5
   802                           
   803  0075                     DS1307_GetDate@d_ptr:	
   804                           ; 1 bytes @ 0x5
   805                           
   806  0075                     LCDByte@isdata:	
   807                           ; 1 bytes @ 0x5
   808                           
   809  0075                     ___awdiv@counter:	
   810                           ; 1 bytes @ 0x5
   811                           
   812  0075                     ___awmod@counter:	
   813                           ; 1 bytes @ 0x5
   814                           
   815                           
   816                           ; 1 bytes @ 0x5
   817  0075                     	ds	1
   818  0076                     ??_initLED:	
   819  0076                     ??_LCDByte:	
   820                           ; 1 bytes @ 0x6
   821                           
   822  0076                     DS1307_Init@s:	
   823                           ; 1 bytes @ 0x6
   824                           
   825  0076                     DS1307_SetTime@ss:	
   826                           ; 1 bytes @ 0x6
   827                           
   828  0076                     DS1307_SetDate@mm:	
   829                           ; 1 bytes @ 0x6
   830                           
   831  0076                     DS1307_GetTime@s_ptr:	
   832                           ; 1 bytes @ 0x6
   833                           
   834  0076                     DS1307_GetDate@m_ptr:	
   835                           ; 1 bytes @ 0x6
   836                           
   837  0076                     ___awdiv@sign:	
   838                           ; 1 bytes @ 0x6
   839                           
   840  0076                     ___awmod@sign:	
   841                           ; 1 bytes @ 0x6
   842                           
   843                           
   844                           ; 1 bytes @ 0x6
   845  0076                     	ds	1
   846  0077                     ??_DS1307_SetTime:	
   847  0077                     ??_DS1307_GetTime:	
   848                           ; 1 bytes @ 0x7
   849                           
   850  0077                     DS1307_SetTime@hh:	
   851                           ; 1 bytes @ 0x7
   852                           
   853  0077                     DS1307_SetDate@yy:	
   854                           ; 1 bytes @ 0x7
   855                           
   856  0077                     DS1307_GetDate@y_ptr:	
   857                           ; 1 bytes @ 0x7
   858                           
   859  0077                     ___awdiv@quotient:	
   860                           ; 1 bytes @ 0x7
   861                           
   862                           
   863                           ; 2 bytes @ 0x7
   864  0077                     	ds	1
   865  0078                     ??_DS1307_SetDate:	
   866  0078                     ??_DS1307_GetDate:	
   867                           ; 1 bytes @ 0x8
   868                           
   869  0078                     DS1307_SetDate@nn:	
   870                           ; 1 bytes @ 0x8
   871                           
   872  0078                     DS1307_GetTime@h_ptr:	
   873                           ; 1 bytes @ 0x8
   874                           
   875  0078                     LCDByte@hn:	
   876                           ; 1 bytes @ 0x8
   877                           
   878                           
   879                           ; 1 bytes @ 0x8
   880  0078                     	ds	1
   881  0079                     ?_setLED:	
   882  0079                     ?___wmul:	
   883                           ; 1 bytes @ 0x9
   884                           
   885  0079                     DS1307_GetDate@n_ptr:	
   886                           ; 2 bytes @ 0x9
   887                           
   888  0079                     LCDByte@ln:	
   889                           ; 1 bytes @ 0x9
   890                           
   891  0079                     setLED@digit:	
   892                           ; 1 bytes @ 0x9
   893                           
   894  0079                     ___wmul@multiplier:	
   895                           ; 2 bytes @ 0x9
   896                           
   897                           
   898                           ; 2 bytes @ 0x9
   899  0079                     	ds	1
   900  007A                     LCDByte@c:	
   901                           
   902                           ; 1 bytes @ 0xA
   903  007A                     	ds	1
   904  007B                     LCDByte@temp:	
   905  007B                     setLED@value:	
   906                           ; 1 bytes @ 0xB
   907                           
   908  007B                     ___wmul@multiplicand:	
   909                           ; 2 bytes @ 0xB
   910                           
   911                           
   912                           ; 2 bytes @ 0xB
   913  007B                     	ds	1
   914  007C                     ??_LCDInit:	
   915  007C                     ??_LCDWriteString:	
   916                           ; 1 bytes @ 0xC
   917                           
   918  007C                     ?_LCDWriteInt:	
   919                           ; 1 bytes @ 0xC
   920                           
   921  007C                     ?_LCDGotoXY:	
   922                           ; 1 bytes @ 0xC
   923                           
   924  007C                     LCDWriteInt@field_length:	
   925                           ; 1 bytes @ 0xC
   926                           
   927  007C                     LCDGotoXY@y:	
   928                           ; 1 bytes @ 0xC
   929                           
   930                           
   931                           ; 1 bytes @ 0xC
   932  007C                     	ds	1
   933  007D                     ??_showTime:	
   934  007D                     ??_showDate:	
   935                           ; 1 bytes @ 0xD
   936                           
   937  007D                     ??_LCDGotoXY:	
   938                           ; 1 bytes @ 0xD
   939                           
   940  007D                     ??___wmul:	
   941                           ; 1 bytes @ 0xD
   942                           
   943                           
   944                           ; 1 bytes @ 0xD
   945  007D                     	ds	1
   946  007E                     ??_showClock:	
   947  007E                     ??_main:	
   948                           ; 1 bytes @ 0xE
   949                           
   950                           
   951                           	psect	cstackBANK0
   952  0020                     __pcstackBANK0:	
   953                           ; 1 bytes @ 0xE
   954                           
   955  0020                     ??_setLED:	
   956  0020                     ??_LCDWriteInt:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0020                     LCDInit@style:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0020                     LCDWriteString@cc:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0020                     LCDGotoXY@x:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0020                     ___wmul@product:	
   969                           ; 1 bytes @ 0x0
   970                           
   971                           
   972                           ; 2 bytes @ 0x0
   973  0020                     	ds	1
   974  0021                     LCDWriteString@msg:	
   975                           
   976                           ; 1 bytes @ 0x1
   977  0021                     	ds	1
   978  0022                     ??_readClock:	
   979                           
   980                           ; 1 bytes @ 0x2
   981  0022                     	ds	1
   982  0023                     LCDWriteInt@c:	
   983                           
   984                           ; 2 bytes @ 0x3
   985  0023                     	ds	1
   986  0024                     setLED@d:	
   987                           
   988                           ; 1 bytes @ 0x4
   989  0024                     	ds	1
   990  0025                     readClock@n:	
   991  0025                     setLED@v:	
   992                           ; 1 bytes @ 0x5
   993                           
   994  0025                     LCDWriteInt@d:	
   995                           ; 1 bytes @ 0x5
   996                           
   997                           
   998                           ; 2 bytes @ 0x5
   999  0025                     	ds	1
  1000  0026                     readClock@a:	
  1001                           
  1002                           ; 1 bytes @ 0x6
  1003  0026                     	ds	1
  1004  0027                     LCDWriteInt@val:	
  1005  0027                     readClock@b:	
  1006                           ; 1 bytes @ 0x7
  1007                           
  1008                           
  1009                           ; 1 bytes @ 0x7
  1010  0027                     	ds	1
  1011  0028                     ??_doMenu:	
  1012  0028                     readClock@c:	
  1013                           ; 1 bytes @ 0x8
  1014                           
  1015                           
  1016                           ; 1 bytes @ 0x8
  1017  0028                     	ds	3
  1018  002B                     doMenu@h:	
  1019                           
  1020                           ; 2 bytes @ 0xB
  1021  002B                     	ds	2
  1022  002D                     doMenu@m:	
  1023                           
  1024                           ; 2 bytes @ 0xD
  1025  002D                     	ds	2
  1026  002F                     doMenu@s:	
  1027                           
  1028                           ; 2 bytes @ 0xF
  1029  002F                     	ds	2
  1030  0031                     doMenu@n:	
  1031                           
  1032                           ; 2 bytes @ 0x11
  1033  0031                     	ds	2
  1034  0033                     doMenu@d:	
  1035                           
  1036                           ; 2 bytes @ 0x13
  1037  0033                     	ds	2
  1038  0035                     doMenu@m_260:	
  1039                           
  1040                           ; 2 bytes @ 0x15
  1041  0035                     	ds	2
  1042  0037                     doMenu@y:	
  1043                           
  1044                           ; 2 bytes @ 0x17
  1045  0037                     	ds	2
  1046  0039                     main@led:	
  1047                           
  1048                           ; 2 bytes @ 0x19
  1049  0039                     	ds	2
  1050  003B                     main@seg:	
  1051                           
  1052                           ; 2 bytes @ 0x1B
  1053  003B                     	ds	2
  1054                           
  1055                           	psect	maintext
  1056  0CB5                     __pmaintext:	
  1057 ;;
  1058 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1059 ;;
  1060 ;; *************** function _main *****************
  1061 ;; Defined at:
  1062 ;;		line 47 in file "LCDTime.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  seg             2   27[BANK0 ] int 
  1067 ;;  led             2   25[BANK0 ] int 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : B00/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         0       0       0       0       0
  1078 ;;      Locals:         0       4       0       0       0
  1079 ;;      Temps:          0       0       0       0       0
  1080 ;;      Totals:         0       4       0       0       0
  1081 ;;Total ram usage:        4 bytes
  1082 ;; Hardware stack levels required when called:    5
  1083 ;; This function calls:
  1084 ;;		_DS1307_Init
  1085 ;;		_I2C_Init
  1086 ;;		_LCDByte
  1087 ;;		_LCDInit
  1088 ;;		_doMenu
  1089 ;;		_initLED
  1090 ;;		_readClock
  1091 ;;		_readInputs
  1092 ;;		_showClock
  1093 ;; This function is called by:
  1094 ;;		Startup code after reset
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _main
  1100  0CB5                     _main:	
  1101                           
  1102                           ;LCDTime.c: 49: I2C_Init() ;
  1103                           
  1104                           ;incstack = 0
  1105                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1106  0CB5  120A  158A  2285  120A  158A  	fcall	_I2C_Init
  1107                           
  1108                           ;LCDTime.c: 50: LCDInit(0B00000000);
  1109  0CBA  3000               	movlw	0
  1110  0CBB  120A  158A  247A  120A  158A  	fcall	_LCDInit
  1111                           
  1112                           ;LCDTime.c: 51: DS1307_Init() ;
  1113  0CC0  120A  158A  253E  120A  158A  	fcall	_DS1307_Init
  1114                           
  1115                           ;LCDTime.c: 53: (LCDByte(0b00000001,0));
  1116  0CC5  01F5               	clrf	LCDByte@isdata
  1117  0CC6  3001               	movlw	1
  1118  0CC7  120A  158A  258E  120A  158A  	fcall	_LCDByte
  1119                           
  1120                           ;LCDTime.c: 55: initLED() ;
  1121  0CCC  120A  158A  2304  120A  158A  	fcall	_initLED
  1122                           
  1123                           ;LCDTime.c: 57: int led = 1 ;
  1124  0CD1  3001               	movlw	1
  1125  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0CD4  00B9               	movwf	main@led
  1128  0CD5  3000               	movlw	0
  1129  0CD6  00BA               	movwf	main@led+1
  1130                           
  1131                           ;LCDTime.c: 58: int seg = 0 ;
  1132  0CD7  01BB               	clrf	main@seg
  1133  0CD8  01BC               	clrf	main@seg+1
  1134  0CD9                     l2507:	
  1135                           ;LCDTime.c: 60: while(1)
  1136                           
  1137                           
  1138                           ;LCDTime.c: 61: {
  1139                           ;LCDTime.c: 62: readClock();
  1140  0CD9  120A  118A  2249  120A  158A  	fcall	_readClock
  1141                           
  1142                           ;LCDTime.c: 64: showClock() ;
  1143  0CDE  120A  158A  22D3  120A  158A  	fcall	_showClock
  1144                           
  1145                           ;LCDTime.c: 66: readInputs() ;
  1146  0CE3  120A  158A  2419  120A  158A  	fcall	_readInputs
  1147                           
  1148                           ;LCDTime.c: 68: if (bButton)
  1149  0CE8  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0CE9  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0CEA  0856               	movf	_bButton,w
  1152  0CEB  1903               	btfsc	3,2
  1153  0CEC  2CD9               	goto	l2507
  1154                           
  1155                           ;LCDTime.c: 69: doMenu();
  1156  0CED  120A  118A  236F  120A  158A  	fcall	_doMenu
  1157  0CF2  2CD9               	goto	l2507
  1158  0CF3                     __end_of_main:	
  1159                           
  1160                           	psect	text1
  1161  0AD3                     __ptext1:	
  1162 ;; *************** function _showClock *****************
  1163 ;; Defined at:
  1164 ;;		line 380 in file "LCDTime.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1178 ;;      Params:         0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0
  1181 ;;      Totals:         0       0       0       0       0
  1182 ;;Total ram usage:        0 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    4
  1185 ;; This function calls:
  1186 ;;		_LCDGotoXY
  1187 ;;		_showDate
  1188 ;;		_showTime
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           
  1195                           ;psect for function _showClock
  1196  0AD3                     _showClock:	
  1197                           
  1198                           ;LCDTime.c: 382: LCDGotoXY(0,0) ;
  1199                           
  1200                           ;incstack = 0
  1201                           ; Regs used in _showClock: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1202  0AD3  01FC               	clrf	LCDGotoXY@y
  1203  0AD4  3000               	movlw	0
  1204  0AD5  120A  158A  234C  120A  158A  	fcall	_LCDGotoXY
  1205                           
  1206                           ;LCDTime.c: 383: showTime() ;
  1207  0ADA  120A  118A  21A7  120A  158A  	fcall	_showTime
  1208                           
  1209                           ;LCDTime.c: 385: LCDGotoXY(0,1) ;
  1210  0ADF  01FC               	clrf	LCDGotoXY@y
  1211  0AE0  0AFC               	incf	LCDGotoXY@y,f
  1212  0AE1  3000               	movlw	0
  1213  0AE2  120A  158A  234C  120A  158A  	fcall	_LCDGotoXY
  1214                           
  1215                           ;LCDTime.c: 386: showDate() ;
  1216  0AE7  120A  118A  2110   	fcall	_showDate
  1217  0AEA  0008               	return
  1218  0AEB                     __end_of_showClock:	
  1219                           
  1220                           	psect	text2
  1221  0249                     __ptext2:	
  1222 ;; *************** function _readClock *****************
  1223 ;; Defined at:
  1224 ;;		line 357 in file "LCDTime.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  c               1    8[BANK0 ] unsigned char 
  1229 ;;  b               1    7[BANK0 ] unsigned char 
  1230 ;;  a               1    6[BANK0 ] unsigned char 
  1231 ;;  n               1    5[BANK0 ] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1241 ;;      Params:         0       0       0       0       0
  1242 ;;      Locals:         0       4       0       0       0
  1243 ;;      Temps:          0       3       0       0       0
  1244 ;;      Totals:         0       7       0       0       0
  1245 ;;Total ram usage:        7 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    4
  1248 ;; This function calls:
  1249 ;;		_DS1307_GetDate
  1250 ;;		_DS1307_GetTime
  1251 ;;		___awdiv
  1252 ;;		___wmul
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           
  1259                           ;psect for function _readClock
  1260  0249                     _readClock:	
  1261                           
  1262                           ;LCDTime.c: 359: unsigned char a,b,c,n ;
  1263                           ;LCDTime.c: 361: DS1307_GetTime(&a,&b,&c);
  1264                           
  1265                           ;incstack = 0
  1266                           ; Regs used in _readClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1267  0249  3027               	movlw	(low (readClock@b| 0))& (0+255)
  1268  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1269  024B  1303               	bcf	3,6	;RP1=0, select bank0
  1270  024C  00A2               	movwf	??_readClock
  1271  024D  0822               	movf	??_readClock,w
  1272  024E  00F5               	movwf	DS1307_GetTime@m_ptr
  1273  024F  3028               	movlw	(low (readClock@c| 0))& (0+255)
  1274  0250  00A3               	movwf	??_readClock+1
  1275  0251  0823               	movf	??_readClock+1,w
  1276  0252  00F6               	movwf	DS1307_GetTime@s_ptr
  1277  0253  3026               	movlw	(low (readClock@a| 0))& (0+255)
  1278  0254  120A  158A  262E  120A  118A  	fcall	_DS1307_GetTime
  1279                           
  1280                           ;LCDTime.c: 363: hour = (a % 16) + ((a / 16 ) * 10) ;
  1281  0259  3010               	movlw	16
  1282  025A  00F0               	movwf	___awdiv@divisor
  1283  025B  3000               	movlw	0
  1284  025C  00F1               	movwf	___awdiv@divisor+1
  1285  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1286  025E  1303               	bcf	3,6	;RP1=0, select bank0
  1287  025F  0826               	movf	readClock@a,w
  1288  0260  00A2               	movwf	??_readClock
  1289  0261  01A3               	clrf	??_readClock+1
  1290  0262  0822               	movf	??_readClock,w
  1291  0263  00F2               	movwf	___awdiv@dividend
  1292  0264  0823               	movf	??_readClock+1,w
  1293  0265  00F3               	movwf	___awdiv@dividend+1
  1294  0266  120A  158A  2684  120A  118A  	fcall	___awdiv
  1295  026B  0871               	movf	?___awdiv+1,w
  1296  026C  00FA               	movwf	___wmul@multiplier+1
  1297  026D  0870               	movf	?___awdiv,w
  1298  026E  00F9               	movwf	___wmul@multiplier
  1299  026F  300A               	movlw	10
  1300  0270  00FB               	movwf	___wmul@multiplicand
  1301  0271  3000               	movlw	0
  1302  0272  00FC               	movwf	___wmul@multiplicand+1
  1303  0273  120A  158A  2372  120A  118A  	fcall	___wmul
  1304  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1305  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1306  027A  0826               	movf	readClock@a,w
  1307  027B  390F               	andlw	15
  1308  027C  0779               	addwf	?___wmul,w
  1309  027D  00CB               	movwf	_hour
  1310  027E  087A               	movf	?___wmul+1,w
  1311  027F  1803               	skipnc
  1312  0280  0A7A               	incf	?___wmul+1,w
  1313  0281  00CC               	movwf	_hour+1
  1314                           
  1315                           ;LCDTime.c: 364: minute = (b % 16) + ((b / 16 ) * 10) ;
  1316  0282  3010               	movlw	16
  1317  0283  00F0               	movwf	___awdiv@divisor
  1318  0284  3000               	movlw	0
  1319  0285  00F1               	movwf	___awdiv@divisor+1
  1320  0286  0827               	movf	readClock@b,w
  1321  0287  00A2               	movwf	??_readClock
  1322  0288  01A3               	clrf	??_readClock+1
  1323  0289  0822               	movf	??_readClock,w
  1324  028A  00F2               	movwf	___awdiv@dividend
  1325  028B  0823               	movf	??_readClock+1,w
  1326  028C  00F3               	movwf	___awdiv@dividend+1
  1327  028D  120A  158A  2684  120A  118A  	fcall	___awdiv
  1328  0292  0871               	movf	?___awdiv+1,w
  1329  0293  00FA               	movwf	___wmul@multiplier+1
  1330  0294  0870               	movf	?___awdiv,w
  1331  0295  00F9               	movwf	___wmul@multiplier
  1332  0296  300A               	movlw	10
  1333  0297  00FB               	movwf	___wmul@multiplicand
  1334  0298  3000               	movlw	0
  1335  0299  00FC               	movwf	___wmul@multiplicand+1
  1336  029A  120A  158A  2372  120A  118A  	fcall	___wmul
  1337  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1338  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1339  02A1  0827               	movf	readClock@b,w
  1340  02A2  390F               	andlw	15
  1341  02A3  0779               	addwf	?___wmul,w
  1342  02A4  00CD               	movwf	_minute
  1343  02A5  087A               	movf	?___wmul+1,w
  1344  02A6  1803               	skipnc
  1345  02A7  0A7A               	incf	?___wmul+1,w
  1346  02A8  00CE               	movwf	_minute+1
  1347                           
  1348                           ;LCDTime.c: 365: seconds = (c % 16) + ((c / 16 ) * 10) ;
  1349  02A9  3010               	movlw	16
  1350  02AA  00F0               	movwf	___awdiv@divisor
  1351  02AB  3000               	movlw	0
  1352  02AC  00F1               	movwf	___awdiv@divisor+1
  1353  02AD  0828               	movf	readClock@c,w
  1354  02AE  00A2               	movwf	??_readClock
  1355  02AF  01A3               	clrf	??_readClock+1
  1356  02B0  0822               	movf	??_readClock,w
  1357  02B1  00F2               	movwf	___awdiv@dividend
  1358  02B2  0823               	movf	??_readClock+1,w
  1359  02B3  00F3               	movwf	___awdiv@dividend+1
  1360  02B4  120A  158A  2684  120A  118A  	fcall	___awdiv
  1361  02B9  0871               	movf	?___awdiv+1,w
  1362  02BA  00FA               	movwf	___wmul@multiplier+1
  1363  02BB  0870               	movf	?___awdiv,w
  1364  02BC  00F9               	movwf	___wmul@multiplier
  1365  02BD  300A               	movlw	10
  1366  02BE  00FB               	movwf	___wmul@multiplicand
  1367  02BF  3000               	movlw	0
  1368  02C0  00FC               	movwf	___wmul@multiplicand+1
  1369  02C1  120A  158A  2372  120A  118A  	fcall	___wmul
  1370  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1371  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1372  02C8  0828               	movf	readClock@c,w
  1373  02C9  390F               	andlw	15
  1374  02CA  0779               	addwf	?___wmul,w
  1375  02CB  00D1               	movwf	_seconds
  1376  02CC  087A               	movf	?___wmul+1,w
  1377  02CD  1803               	skipnc
  1378  02CE  0A7A               	incf	?___wmul+1,w
  1379  02CF  00D2               	movwf	_seconds+1
  1380                           
  1381                           ;LCDTime.c: 367: if (hour != last_hour)
  1382  02D0  0855               	movf	_last_hour,w
  1383  02D1  00A2               	movwf	??_readClock
  1384  02D2  01A3               	clrf	??_readClock+1
  1385  02D3  084C               	movf	_hour+1,w
  1386  02D4  0623               	xorwf	??_readClock+1,w
  1387  02D5  1D03               	skipz
  1388  02D6  2AD9               	goto	u1705
  1389  02D7  084B               	movf	_hour,w
  1390  02D8  0622               	xorwf	??_readClock,w
  1391  02D9                     u1705:	
  1392  02D9  1903               	skipnz
  1393  02DA  0008               	return
  1394                           
  1395                           ;LCDTime.c: 368: {
  1396                           ;LCDTime.c: 369: last_hour = hour ;
  1397  02DB  084B               	movf	_hour,w
  1398  02DC  00A2               	movwf	??_readClock
  1399  02DD  0822               	movf	??_readClock,w
  1400  02DE  00D5               	movwf	_last_hour
  1401                           
  1402                           ;LCDTime.c: 371: DS1307_GetDate(&n,&a,&b,&c) ;
  1403  02DF  3026               	movlw	(low (readClock@a| 0))& (0+255)
  1404  02E0  00A2               	movwf	??_readClock
  1405  02E1  0822               	movf	??_readClock,w
  1406  02E2  00F5               	movwf	DS1307_GetDate@d_ptr
  1407  02E3  3027               	movlw	(low (readClock@b| 0))& (0+255)
  1408  02E4  00A3               	movwf	??_readClock+1
  1409  02E5  0823               	movf	??_readClock+1,w
  1410  02E6  00F6               	movwf	DS1307_GetDate@m_ptr
  1411  02E7  3028               	movlw	(low (readClock@c| 0))& (0+255)
  1412  02E8  00A4               	movwf	??_readClock+2
  1413  02E9  0824               	movf	??_readClock+2,w
  1414  02EA  00F7               	movwf	DS1307_GetDate@y_ptr
  1415  02EB  3025               	movlw	(low (readClock@n| 0))& (0+255)
  1416  02EC  120A  158A  279A  120A  118A  	fcall	_DS1307_GetDate
  1417                           
  1418                           ;LCDTime.c: 373: day = (n % 16) ;
  1419  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1420  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1421  02F3  0825               	movf	readClock@n,w
  1422  02F4  390F               	andlw	15
  1423  02F5  00A2               	movwf	??_readClock
  1424  02F6  01A3               	clrf	??_readClock+1
  1425  02F7  0822               	movf	??_readClock,w
  1426  02F8  00C9               	movwf	_day
  1427  02F9  0823               	movf	??_readClock+1,w
  1428  02FA  00CA               	movwf	_day+1
  1429                           
  1430                           ;LCDTime.c: 374: date = (a % 16) + ((a / 16 ) * 10) ;
  1431  02FB  3010               	movlw	16
  1432  02FC  00F0               	movwf	___awdiv@divisor
  1433  02FD  3000               	movlw	0
  1434  02FE  00F1               	movwf	___awdiv@divisor+1
  1435  02FF  0826               	movf	readClock@a,w
  1436  0300  00A2               	movwf	??_readClock
  1437  0301  01A3               	clrf	??_readClock+1
  1438  0302  0822               	movf	??_readClock,w
  1439  0303  00F2               	movwf	___awdiv@dividend
  1440  0304  0823               	movf	??_readClock+1,w
  1441  0305  00F3               	movwf	___awdiv@dividend+1
  1442  0306  120A  158A  2684  120A  118A  	fcall	___awdiv
  1443  030B  0871               	movf	?___awdiv+1,w
  1444  030C  00FA               	movwf	___wmul@multiplier+1
  1445  030D  0870               	movf	?___awdiv,w
  1446  030E  00F9               	movwf	___wmul@multiplier
  1447  030F  300A               	movlw	10
  1448  0310  00FB               	movwf	___wmul@multiplicand
  1449  0311  3000               	movlw	0
  1450  0312  00FC               	movwf	___wmul@multiplicand+1
  1451  0313  120A  158A  2372  120A  118A  	fcall	___wmul
  1452  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1454  031A  0826               	movf	readClock@a,w
  1455  031B  390F               	andlw	15
  1456  031C  0779               	addwf	?___wmul,w
  1457  031D  00C7               	movwf	_date
  1458  031E  087A               	movf	?___wmul+1,w
  1459  031F  1803               	skipnc
  1460  0320  0A7A               	incf	?___wmul+1,w
  1461  0321  00C8               	movwf	_date+1
  1462                           
  1463                           ;LCDTime.c: 375: month = (b % 16) + ((b / 16 ) * 10) ;
  1464  0322  3010               	movlw	16
  1465  0323  00F0               	movwf	___awdiv@divisor
  1466  0324  3000               	movlw	0
  1467  0325  00F1               	movwf	___awdiv@divisor+1
  1468  0326  0827               	movf	readClock@b,w
  1469  0327  00A2               	movwf	??_readClock
  1470  0328  01A3               	clrf	??_readClock+1
  1471  0329  0822               	movf	??_readClock,w
  1472  032A  00F2               	movwf	___awdiv@dividend
  1473  032B  0823               	movf	??_readClock+1,w
  1474  032C  00F3               	movwf	___awdiv@dividend+1
  1475  032D  120A  158A  2684  120A  118A  	fcall	___awdiv
  1476  0332  0871               	movf	?___awdiv+1,w
  1477  0333  00FA               	movwf	___wmul@multiplier+1
  1478  0334  0870               	movf	?___awdiv,w
  1479  0335  00F9               	movwf	___wmul@multiplier
  1480  0336  300A               	movlw	10
  1481  0337  00FB               	movwf	___wmul@multiplicand
  1482  0338  3000               	movlw	0
  1483  0339  00FC               	movwf	___wmul@multiplicand+1
  1484  033A  120A  158A  2372  120A  118A  	fcall	___wmul
  1485  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1487  0341  0827               	movf	readClock@b,w
  1488  0342  390F               	andlw	15
  1489  0343  0779               	addwf	?___wmul,w
  1490  0344  00CF               	movwf	_month
  1491  0345  087A               	movf	?___wmul+1,w
  1492  0346  1803               	skipnc
  1493  0347  0A7A               	incf	?___wmul+1,w
  1494  0348  00D0               	movwf	_month+1
  1495                           
  1496                           ;LCDTime.c: 376: year = (c % 16) + ((c / 16 ) * 10) ;
  1497  0349  3010               	movlw	16
  1498  034A  00F0               	movwf	___awdiv@divisor
  1499  034B  3000               	movlw	0
  1500  034C  00F1               	movwf	___awdiv@divisor+1
  1501  034D  0828               	movf	readClock@c,w
  1502  034E  00A2               	movwf	??_readClock
  1503  034F  01A3               	clrf	??_readClock+1
  1504  0350  0822               	movf	??_readClock,w
  1505  0351  00F2               	movwf	___awdiv@dividend
  1506  0352  0823               	movf	??_readClock+1,w
  1507  0353  00F3               	movwf	___awdiv@dividend+1
  1508  0354  120A  158A  2684  120A  118A  	fcall	___awdiv
  1509  0359  0871               	movf	?___awdiv+1,w
  1510  035A  00FA               	movwf	___wmul@multiplier+1
  1511  035B  0870               	movf	?___awdiv,w
  1512  035C  00F9               	movwf	___wmul@multiplier
  1513  035D  300A               	movlw	10
  1514  035E  00FB               	movwf	___wmul@multiplicand
  1515  035F  3000               	movlw	0
  1516  0360  00FC               	movwf	___wmul@multiplicand+1
  1517  0361  120A  158A  2372   	fcall	___wmul
  1518  0364  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0365  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0366  0828               	movf	readClock@c,w
  1521  0367  390F               	andlw	15
  1522  0368  0779               	addwf	?___wmul,w
  1523  0369  00D3               	movwf	_year
  1524  036A  087A               	movf	?___wmul+1,w
  1525  036B  1803               	skipnc
  1526  036C  0A7A               	incf	?___wmul+1,w
  1527  036D  00D4               	movwf	_year+1
  1528  036E  0008               	return
  1529  036F                     __end_of_readClock:	
  1530                           
  1531                           	psect	text3
  1532  0B72                     __ptext3:	
  1533 ;; *************** function ___wmul *****************
  1534 ;; Defined at:
  1535 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  multiplier      2    9[COMMON] unsigned int 
  1538 ;;  multiplicand    2   11[COMMON] unsigned int 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  product         2    0[BANK0 ] unsigned int 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  2    9[COMMON] unsigned int 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1550 ;;      Params:         4       0       0       0       0
  1551 ;;      Locals:         0       2       0       0       0
  1552 ;;      Temps:          0       0       0       0       0
  1553 ;;      Totals:         4       2       0       0       0
  1554 ;;Total ram usage:        6 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_readClock
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           
  1564                           ;psect for function ___wmul
  1565  0B72                     ___wmul:	
  1566                           
  1567                           ;incstack = 0
  1568                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1569  0B72  1283               	bcf	3,5	;RP0=0, select bank0
  1570  0B73  1303               	bcf	3,6	;RP1=0, select bank0
  1571  0B74  01A0               	clrf	___wmul@product
  1572  0B75  01A1               	clrf	___wmul@product+1
  1573  0B76                     l2121:	
  1574  0B76  1C79               	btfss	___wmul@multiplier,0
  1575  0B77  2B80               	goto	l457
  1576  0B78  087B               	movf	___wmul@multiplicand,w
  1577  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0B7A  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0B7B  07A0               	addwf	___wmul@product,f
  1580  0B7C  1803               	skipnc
  1581  0B7D  0AA1               	incf	___wmul@product+1,f
  1582  0B7E  087C               	movf	___wmul@multiplicand+1,w
  1583  0B7F  07A1               	addwf	___wmul@product+1,f
  1584  0B80                     l457:	
  1585  0B80  3001               	movlw	1
  1586  0B81                     u1665:	
  1587  0B81  1003               	clrc
  1588  0B82  0DFB               	rlf	___wmul@multiplicand,f
  1589  0B83  0DFC               	rlf	___wmul@multiplicand+1,f
  1590  0B84  3EFF               	addlw	-1
  1591  0B85  1D03               	skipz
  1592  0B86  2B81               	goto	u1665
  1593  0B87  3001               	movlw	1
  1594  0B88                     u1675:	
  1595  0B88  1003               	clrc
  1596  0B89  0CFA               	rrf	___wmul@multiplier+1,f
  1597  0B8A  0CF9               	rrf	___wmul@multiplier,f
  1598  0B8B  3EFF               	addlw	-1
  1599  0B8C  1D03               	skipz
  1600  0B8D  2B88               	goto	u1675
  1601  0B8E  0879               	movf	___wmul@multiplier,w
  1602  0B8F  047A               	iorwf	___wmul@multiplier+1,w
  1603  0B90  1D03               	btfss	3,2
  1604  0B91  2B76               	goto	l2121
  1605  0B92  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0B93  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0B94  0821               	movf	___wmul@product+1,w
  1608  0B95  00FA               	movwf	?___wmul+1
  1609  0B96  0820               	movf	___wmul@product,w
  1610  0B97  00F9               	movwf	?___wmul
  1611  0B98  0008               	return
  1612  0B99                     __end_of___wmul:	
  1613                           
  1614                           	psect	text4
  1615  0E2E                     __ptext4:	
  1616 ;; *************** function _DS1307_GetTime *****************
  1617 ;; Defined at:
  1618 ;;		line 66 in file "DS1307.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  h_ptr           1    wreg     PTR unsigned char 
  1621 ;;		 -> readClock@a(1), 
  1622 ;;  m_ptr           1    5[COMMON] PTR unsigned char 
  1623 ;;		 -> readClock@b(1), 
  1624 ;;  s_ptr           1    6[COMMON] PTR unsigned char 
  1625 ;;		 -> readClock@c(1), 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  h_ptr           1    8[COMMON] PTR unsigned char 
  1628 ;;		 -> readClock@a(1), 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         2       0       0       0       0
  1639 ;;      Locals:         1       0       0       0       0
  1640 ;;      Temps:          1       0       0       0       0
  1641 ;;      Totals:         4       0       0       0       0
  1642 ;;Total ram usage:        4 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    3
  1645 ;; This function calls:
  1646 ;;		_DS1307_Read
  1647 ;;		_DS1307_Write
  1648 ;;		_I2C_Ack
  1649 ;;		_I2C_NoAck
  1650 ;;		_I2C_Start
  1651 ;;		_I2C_Stop
  1652 ;; This function is called by:
  1653 ;;		_readClock
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           
  1658                           ;psect for function _DS1307_GetTime
  1659  0E2E                     _DS1307_GetTime:	
  1660                           
  1661                           ;incstack = 0
  1662                           ; Regs used in _DS1307_GetTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1663                           ;DS1307_GetTime@h_ptr stored from wreg
  1664  0E2E  00F8               	movwf	DS1307_GetTime@h_ptr
  1665                           
  1666                           ;DS1307.c: 68: I2C_Start();
  1667  0E2F  120A  158A  22C2  120A  158A  	fcall	_I2C_Start
  1668                           
  1669                           ;DS1307.c: 69: DS1307_Write(0xD0);
  1670  0E34  30D0               	movlw	208
  1671  0E35  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  1672                           
  1673                           ;DS1307.c: 70: DS1307_Write(0x00);
  1674  0E3A  3000               	movlw	0
  1675  0E3B  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  1676                           
  1677                           ;DS1307.c: 71: I2C_Stop();
  1678  0E40  120A  158A  22B2  120A  158A  	fcall	_I2C_Stop
  1679                           
  1680                           ;DS1307.c: 72: I2C_Start();
  1681  0E45  120A  158A  22C2  120A  158A  	fcall	_I2C_Start
  1682                           
  1683                           ;DS1307.c: 73: DS1307_Write(0xD1);
  1684  0E4A  30D1               	movlw	209
  1685  0E4B  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  1686                           
  1687                           ;DS1307.c: 74: *s_ptr = DS1307_Read(); I2C_Ack();
  1688  0E50  120A  158A  2281  120A  158A  	fcall	_DS1307_Read
  1689  0E55  00F7               	movwf	??_DS1307_GetTime
  1690  0E56  0876               	movf	DS1307_GetTime@s_ptr,w
  1691  0E57  0084               	movwf	4
  1692  0E58  0877               	movf	??_DS1307_GetTime,w
  1693  0E59  1383               	bcf	3,7	;select IRP bank0
  1694  0E5A  0080               	movwf	0
  1695  0E5B  120A  158A  229D  120A  158A  	fcall	_I2C_Ack
  1696                           
  1697                           ;DS1307.c: 75: *m_ptr = DS1307_Read(); I2C_Ack();
  1698  0E60  120A  158A  2281  120A  158A  	fcall	_DS1307_Read
  1699  0E65  00F7               	movwf	??_DS1307_GetTime
  1700  0E66  0875               	movf	DS1307_GetTime@m_ptr,w
  1701  0E67  0084               	movwf	4
  1702  0E68  0877               	movf	??_DS1307_GetTime,w
  1703  0E69  1383               	bcf	3,7	;select IRP bank0
  1704  0E6A  0080               	movwf	0
  1705  0E6B  120A  158A  229D  120A  158A  	fcall	_I2C_Ack
  1706                           
  1707                           ;DS1307.c: 76: *h_ptr = DS1307_Read(); I2C_NoAck();
  1708  0E70  120A  158A  2281  120A  158A  	fcall	_DS1307_Read
  1709  0E75  00F7               	movwf	??_DS1307_GetTime
  1710  0E76  0878               	movf	DS1307_GetTime@h_ptr,w
  1711  0E77  0084               	movwf	4
  1712  0E78  0877               	movf	??_DS1307_GetTime,w
  1713  0E79  1383               	bcf	3,7	;select IRP bank0
  1714  0E7A  0080               	movwf	0
  1715  0E7B  120A  158A  2293  120A  158A  	fcall	_I2C_NoAck
  1716                           
  1717                           ;DS1307.c: 77: I2C_Stop();
  1718  0E80  120A  158A  22B2   	fcall	_I2C_Stop
  1719  0E83  0008               	return
  1720  0E84                     __end_of_DS1307_GetTime:	
  1721                           
  1722                           	psect	text5
  1723  0F9A                     __ptext5:	
  1724 ;; *************** function _DS1307_GetDate *****************
  1725 ;; Defined at:
  1726 ;;		line 80 in file "DS1307.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  n_ptr           1    wreg     PTR unsigned char 
  1729 ;;		 -> readClock@n(1), 
  1730 ;;  d_ptr           1    5[COMMON] PTR unsigned char 
  1731 ;;		 -> readClock@a(1), 
  1732 ;;  m_ptr           1    6[COMMON] PTR unsigned char 
  1733 ;;		 -> readClock@b(1), 
  1734 ;;  y_ptr           1    7[COMMON] PTR unsigned char 
  1735 ;;		 -> readClock@c(1), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  n_ptr           1    9[COMMON] PTR unsigned char 
  1738 ;;		 -> readClock@n(1), 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1748 ;;      Params:         3       0       0       0       0
  1749 ;;      Locals:         1       0       0       0       0
  1750 ;;      Temps:          1       0       0       0       0
  1751 ;;      Totals:         5       0       0       0       0
  1752 ;;Total ram usage:        5 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    3
  1755 ;; This function calls:
  1756 ;;		_DS1307_Read
  1757 ;;		_DS1307_Write
  1758 ;;		_I2C_Ack
  1759 ;;		_I2C_NoAck
  1760 ;;		_I2C_Start
  1761 ;;		_I2C_Stop
  1762 ;; This function is called by:
  1763 ;;		_readClock
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           
  1768                           ;psect for function _DS1307_GetDate
  1769  0F9A                     _DS1307_GetDate:	
  1770                           
  1771                           ;incstack = 0
  1772                           ; Regs used in _DS1307_GetDate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1773                           ;DS1307_GetDate@n_ptr stored from wreg
  1774  0F9A  00F9               	movwf	DS1307_GetDate@n_ptr
  1775                           
  1776                           ;DS1307.c: 82: I2C_Start();
  1777  0F9B  120A  158A  22C2  120A  158A  	fcall	_I2C_Start
  1778                           
  1779                           ;DS1307.c: 83: DS1307_Write(0xD0);
  1780  0FA0  30D0               	movlw	208
  1781  0FA1  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  1782                           
  1783                           ;DS1307.c: 84: DS1307_Write(0x03);
  1784  0FA6  3003               	movlw	3
  1785  0FA7  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  1786                           
  1787                           ;DS1307.c: 85: I2C_Stop();
  1788  0FAC  120A  158A  22B2  120A  158A  	fcall	_I2C_Stop
  1789                           
  1790                           ;DS1307.c: 86: I2C_Start();
  1791  0FB1  120A  158A  22C2  120A  158A  	fcall	_I2C_Start
  1792                           
  1793                           ;DS1307.c: 87: DS1307_Write(0xD1);
  1794  0FB6  30D1               	movlw	209
  1795  0FB7  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  1796                           
  1797                           ;DS1307.c: 88: *n_ptr = DS1307_Read(); I2C_Ack();
  1798  0FBC  120A  158A  2281  120A  158A  	fcall	_DS1307_Read
  1799  0FC1  00F8               	movwf	??_DS1307_GetDate
  1800  0FC2  0879               	movf	DS1307_GetDate@n_ptr,w
  1801  0FC3  0084               	movwf	4
  1802  0FC4  0878               	movf	??_DS1307_GetDate,w
  1803  0FC5  1383               	bcf	3,7	;select IRP bank0
  1804  0FC6  0080               	movwf	0
  1805  0FC7  120A  158A  229D  120A  158A  	fcall	_I2C_Ack
  1806                           
  1807                           ;DS1307.c: 89: *d_ptr = DS1307_Read(); I2C_Ack();
  1808  0FCC  120A  158A  2281  120A  158A  	fcall	_DS1307_Read
  1809  0FD1  00F8               	movwf	??_DS1307_GetDate
  1810  0FD2  0875               	movf	DS1307_GetDate@d_ptr,w
  1811  0FD3  0084               	movwf	4
  1812  0FD4  0878               	movf	??_DS1307_GetDate,w
  1813  0FD5  1383               	bcf	3,7	;select IRP bank0
  1814  0FD6  0080               	movwf	0
  1815  0FD7  120A  158A  229D  120A  158A  	fcall	_I2C_Ack
  1816                           
  1817                           ;DS1307.c: 90: *m_ptr = DS1307_Read(); I2C_Ack();
  1818  0FDC  120A  158A  2281  120A  158A  	fcall	_DS1307_Read
  1819  0FE1  00F8               	movwf	??_DS1307_GetDate
  1820  0FE2  0876               	movf	DS1307_GetDate@m_ptr,w
  1821  0FE3  0084               	movwf	4
  1822  0FE4  0878               	movf	??_DS1307_GetDate,w
  1823  0FE5  1383               	bcf	3,7	;select IRP bank0
  1824  0FE6  0080               	movwf	0
  1825  0FE7  120A  158A  229D  120A  158A  	fcall	_I2C_Ack
  1826                           
  1827                           ;DS1307.c: 91: *y_ptr = DS1307_Read(); I2C_NoAck();
  1828  0FEC  120A  158A  2281  120A  158A  	fcall	_DS1307_Read
  1829  0FF1  00F8               	movwf	??_DS1307_GetDate
  1830  0FF2  0877               	movf	DS1307_GetDate@y_ptr,w
  1831  0FF3  0084               	movwf	4
  1832  0FF4  0878               	movf	??_DS1307_GetDate,w
  1833  0FF5  1383               	bcf	3,7	;select IRP bank0
  1834  0FF6  0080               	movwf	0
  1835  0FF7  120A  158A  2293  120A  158A  	fcall	_I2C_NoAck
  1836                           
  1837                           ;DS1307.c: 92: I2C_Stop();
  1838  0FFC  120A  158A  22B2   	fcall	_I2C_Stop
  1839  0FFF  0008               	return
  1840  1000                     __end_of_DS1307_GetDate:	
  1841                           
  1842                           	psect	text6
  1843  0A9D                     __ptext6:	
  1844 ;; *************** function _I2C_Ack *****************
  1845 ;; Defined at:
  1846 ;;		line 81 in file "i2c.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		status,2, status,0, pclath, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1860 ;;      Params:         0       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0
  1863 ;;      Totals:         0       0       0       0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    1
  1867 ;; This function calls:
  1868 ;;		_I2C_Clock
  1869 ;; This function is called by:
  1870 ;;		_DS1307_GetTime
  1871 ;;		_DS1307_GetDate
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function _I2C_Ack
  1877  0A9D                     _I2C_Ack:	
  1878                           
  1879                           ;i2c.c: 83: RD0 = 0;
  1880                           
  1881                           ;incstack = 0
  1882                           ; Regs used in _I2C_Ack: [status,2+status,0+pclath+cstack]
  1883  0A9D  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0A9E  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0A9F  1008               	bcf	8,0	;volatile
  1886                           
  1887                           ;i2c.c: 84: I2C_Clock();
  1888  0AA0  120A  158A  228A   	fcall	_I2C_Clock
  1889                           
  1890                           ;i2c.c: 85: RD0 = 1;
  1891  0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0AA4  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0AA5  1408               	bsf	8,0	;volatile
  1894  0AA6  0008               	return
  1895  0AA7                     __end_of_I2C_Ack:	
  1896                           
  1897                           	psect	text7
  1898  0B04                     __ptext7:	
  1899 ;; *************** function _initLED *****************
  1900 ;; Defined at:
  1901 ;;		line 429 in file "LCDTime.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1915 ;;      Params:         0       0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0
  1918 ;;      Totals:         0       0       0       0       0
  1919 ;;Total ram usage:        0 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    1
  1922 ;; This function calls:
  1923 ;;		_sendLED
  1924 ;; This function is called by:
  1925 ;;		_main
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           
  1930                           ;psect for function _initLED
  1931  0B04                     _initLED:	
  1932                           
  1933                           ;LCDTime.c: 431: TRISC0 = 0 ;
  1934                           
  1935                           ;incstack = 0
  1936                           ; Regs used in _initLED: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1937  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  1938  0B05  1303               	bcf	3,6	;RP1=0, select bank1
  1939  0B06  1007               	bcf	7,0	;volatile
  1940                           
  1941                           ;LCDTime.c: 432: TRISC1 = 0 ;
  1942  0B07  1087               	bcf	7,1	;volatile
  1943                           
  1944                           ;LCDTime.c: 433: TRISC2 = 0 ;
  1945  0B08  1107               	bcf	7,2	;volatile
  1946                           
  1947                           ;LCDTime.c: 435: RC1 = 1 ;
  1948  0B09  1283               	bcf	3,5	;RP0=0, select bank0
  1949  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
  1950  0B0B  1487               	bsf	7,1	;volatile
  1951                           
  1952                           ;LCDTime.c: 437: sendLED(0x0B07) ;
  1953  0B0C  3007               	movlw	7
  1954  0B0D  00F0               	movwf	sendLED@c
  1955  0B0E  300B               	movlw	11
  1956  0B0F  00F1               	movwf	sendLED@c+1
  1957  0B10  120A  158A  273A  120A  158A  	fcall	_sendLED
  1958                           
  1959                           ;LCDTime.c: 438: sendLED(0x0A04) ;
  1960  0B15  3004               	movlw	4
  1961  0B16  00F0               	movwf	sendLED@c
  1962  0B17  300A               	movlw	10
  1963  0B18  00F1               	movwf	sendLED@c+1
  1964  0B19  120A  158A  273A  120A  158A  	fcall	_sendLED
  1965                           
  1966                           ;LCDTime.c: 440: sendLED(0x0C01) ;
  1967  0B1E  3001               	movlw	1
  1968  0B1F  00F0               	movwf	sendLED@c
  1969  0B20  300C               	movlw	12
  1970  0B21  00F1               	movwf	sendLED@c+1
  1971  0B22  120A  158A  273A   	fcall	_sendLED
  1972  0B25  0008               	return
  1973  0B26                     __end_of_initLED:	
  1974                           
  1975                           	psect	text8
  1976  036F                     __ptext8:	
  1977 ;; *************** function _doMenu *****************
  1978 ;; Defined at:
  1979 ;;		line 73 in file "LCDTime.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  y               2   23[BANK0 ] int 
  1984 ;;  m               2   21[BANK0 ] int 
  1985 ;;  d               2   19[BANK0 ] int 
  1986 ;;  n               2   17[BANK0 ] int 
  1987 ;;  s               2   15[BANK0 ] int 
  1988 ;;  m               2   13[BANK0 ] int 
  1989 ;;  h               2   11[BANK0 ] int 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1999 ;;      Params:         0       0       0       0       0
  2000 ;;      Locals:         0      14       0       0       0
  2001 ;;      Temps:          0       3       0       0       0
  2002 ;;      Totals:         0      17       0       0       0
  2003 ;;Total ram usage:       17 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    4
  2006 ;; This function calls:
  2007 ;;		_DS1307_SetDate
  2008 ;;		_DS1307_SetTime
  2009 ;;		_LCDByte
  2010 ;;		_LCDGotoXY
  2011 ;;		_LCDWriteString
  2012 ;;		___awdiv
  2013 ;;		___awmod
  2014 ;;		_readInputs
  2015 ;;		_showDate
  2016 ;;		_showTime
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _doMenu
  2024  036F                     _doMenu:	
  2025  036F                     l2247:	
  2026                           ;LCDTime.c: 75: while(bButton)
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _doMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2030                           
  2031  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2032  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2033  0371  0856               	movf	_bButton,w
  2034  0372  1903               	btfsc	3,2
  2035  0373  2B7A               	goto	l2249
  2036                           
  2037                           ;LCDTime.c: 76: readInputs();
  2038  0374  120A  158A  2419  120A  118A  	fcall	_readInputs
  2039  0379  2B6F               	goto	l2247
  2040  037A                     l2249:	
  2041                           
  2042                           ;LCDTime.c: 79: if (menuFunction == 0 | menuFunction == 1)
  2043  037A  0857               	movf	_menuFunction,w
  2044  037B  1D03               	btfss	3,2
  2045  037C  0357               	decf	_menuFunction,w
  2046  037D  1D03               	btfss	3,2
  2047  037E  2D53               	goto	l2359
  2048                           
  2049                           ;LCDTime.c: 80: {
  2050                           ;LCDTime.c: 81: int h,m,s ;
  2051                           ;LCDTime.c: 83: h = hour ;
  2052  037F  084C               	movf	_hour+1,w
  2053  0380  00AC               	movwf	doMenu@h+1
  2054  0381  084B               	movf	_hour,w
  2055  0382  00AB               	movwf	doMenu@h
  2056                           
  2057                           ;LCDTime.c: 84: m = minute ;
  2058  0383  084E               	movf	_minute+1,w
  2059  0384  00AE               	movwf	doMenu@m+1
  2060  0385  084D               	movf	_minute,w
  2061  0386  00AD               	movwf	doMenu@m
  2062                           
  2063                           ;LCDTime.c: 85: s = seconds ;
  2064  0387  0852               	movf	_seconds+1,w
  2065  0388  00B0               	movwf	doMenu@s+1
  2066  0389  0851               	movf	_seconds,w
  2067  038A  00AF               	movwf	doMenu@s
  2068                           
  2069                           ;LCDTime.c: 87: (LCDByte(0b00000001,0));
  2070  038B  01F5               	clrf	LCDByte@isdata
  2071  038C  3001               	movlw	1
  2072  038D  120A  158A  258E  120A  118A  	fcall	_LCDByte
  2073                           
  2074                           ;LCDTime.c: 88: LCDWriteString("Set Hours");
  2075  0392  305F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2076  0393  120A  158A  25DE  120A  118A  	fcall	_LCDWriteString
  2077  0398                     L4:	
  2078                           
  2079                           ;LCDTime.c: 90: LCDGotoXY(0,1) ;
  2080  0398  01FC               	clrf	LCDGotoXY@y
  2081  0399  0AFC               	incf	LCDGotoXY@y,f
  2082  039A  3000               	movlw	0
  2083  039B  120A  158A  234C  120A  118A  	fcall	_LCDGotoXY
  2084                           
  2085                           ;LCDTime.c: 91: showTime();
  2086  03A0  120A  118A  21A7  120A  118A  	fcall	_showTime
  2087  03A5                     l2285:	
  2088                           ;LCDTime.c: 93: while(!bButton)
  2089                           
  2090  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2091  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2092  03A7  0856               	movf	_bButton,w
  2093  03A8  1D03               	btfss	3,2
  2094  03A9  2BDE               	goto	l2289
  2095                           
  2096                           ;LCDTime.c: 94: {
  2097                           ;LCDTime.c: 95: readInputs();
  2098  03AA  120A  158A  2419  120A  118A  	fcall	_readInputs
  2099                           
  2100                           ;LCDTime.c: 97: if (state & 0x10)
  2101  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2102  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2103  03B1  1E58               	btfss	_state,4
  2104  03B2  2BC7               	goto	l242
  2105                           
  2106                           ;LCDTime.c: 98: {
  2107                           ;LCDTime.c: 99: hour++;
  2108  03B3  3001               	movlw	1
  2109  03B4  07CB               	addwf	_hour,f
  2110  03B5  1803               	skipnc
  2111  03B6  0ACC               	incf	_hour+1,f
  2112  03B7  3000               	movlw	0
  2113  03B8  07CC               	addwf	_hour+1,f
  2114                           
  2115                           ;LCDTime.c: 100: if (hour > 23)
  2116  03B9  084C               	movf	_hour+1,w
  2117  03BA  3A80               	xorlw	128
  2118  03BB  00FF               	movwf	127
  2119  03BC  3080               	movlw	128
  2120  03BD  027F               	subwf	127,w
  2121  03BE  1D03               	skipz
  2122  03BF  2BC2               	goto	u1755
  2123  03C0  3018               	movlw	24
  2124  03C1  024B               	subwf	_hour,w
  2125  03C2                     u1755:	
  2126  03C2  1C03               	skipc
  2127  03C3  2BD3               	goto	l2279
  2128                           
  2129                           ;LCDTime.c: 101: hour = 0 ;
  2130  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2131  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2132  03C6  2BD1               	goto	l2277
  2133  03C7                     l242:	
  2134                           ;LCDTime.c: 102: }
  2135                           
  2136                           
  2137                           ;LCDTime.c: 103: else if (state & 0x20)
  2138  03C7  1ED8               	btfss	_state,5
  2139  03C8  2BD3               	goto	l2279
  2140                           
  2141                           ;LCDTime.c: 104: {
  2142                           ;LCDTime.c: 105: hour--;
  2143  03C9  30FF               	movlw	255
  2144  03CA  07CB               	addwf	_hour,f
  2145  03CB  1803               	skipnc
  2146  03CC  0ACC               	incf	_hour+1,f
  2147  03CD  30FF               	movlw	255
  2148  03CE  07CC               	addwf	_hour+1,f
  2149                           
  2150                           ;LCDTime.c: 106: if (hour < 0)
  2151  03CF  1FCC               	btfss	_hour+1,7
  2152  03D0  2BD3               	goto	l2279
  2153  03D1                     l2277:	
  2154                           
  2155                           ;LCDTime.c: 107: hour = 0 ;
  2156  03D1  01CB               	clrf	_hour
  2157  03D2  01CC               	clrf	_hour+1
  2158  03D3                     l2279:	
  2159                           
  2160                           ;LCDTime.c: 108: }
  2161                           ;LCDTime.c: 110: if (state)
  2162  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2163  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2164  03D5  0858               	movf	_state,w
  2165  03D6  1903               	btfsc	3,2
  2166  03D7  2BA5               	goto	l2285
  2167  03D8  2B98               	goto	L4
  2168  03D9                     l2287:	
  2169                           ;LCDTime.c: 114: }
  2170                           ;LCDTime.c: 115: }
  2171                           ;LCDTime.c: 117: while(bButton)
  2172                           
  2173                           ;LCDTime.c: 113: showTime();
  2174                           
  2175                           ;LCDTime.c: 111: {
  2176                           ;LCDTime.c: 112: LCDGotoXY(0,1) ;
  2177                           
  2178                           
  2179                           ;LCDTime.c: 118: readInputs();
  2180  03D9  120A  158A  2419  120A  118A  	fcall	_readInputs
  2181  03DE                     l2289:	
  2182  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2183  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2184  03E0  0856               	movf	_bButton,w
  2185  03E1  1D03               	btfss	3,2
  2186  03E2  2BD9               	goto	l2287
  2187                           
  2188                           ;LCDTime.c: 120: LCDGotoXY(0,0) ;
  2189  03E3  01FC               	clrf	LCDGotoXY@y
  2190  03E4  3000               	movlw	0
  2191  03E5  120A  158A  234C  120A  118A  	fcall	_LCDGotoXY
  2192                           
  2193                           ;LCDTime.c: 121: LCDWriteString("Set Minutes");
  2194  03EA  3035               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2195  03EB  120A  158A  25DE  120A  118A  	fcall	_LCDWriteString
  2196  03F0                     l2315:	
  2197                           ;LCDTime.c: 123: while(!bButton)
  2198                           
  2199  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2200  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2201  03F2  0856               	movf	_bButton,w
  2202  03F3  1D03               	btfss	3,2
  2203  03F4  2C36               	goto	l2319
  2204                           
  2205                           ;LCDTime.c: 124: {
  2206                           ;LCDTime.c: 125: readInputs();
  2207  03F5  120A  158A  2419  120A  118A  	fcall	_readInputs
  2208                           
  2209                           ;LCDTime.c: 127: if (state & 0x10)
  2210  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2211  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2212  03FC  1E58               	btfss	_state,4
  2213  03FD  2C12               	goto	l254
  2214                           
  2215                           ;LCDTime.c: 128: {
  2216                           ;LCDTime.c: 129: minute++;
  2217  03FE  3001               	movlw	1
  2218  03FF  07CD               	addwf	_minute,f
  2219  0400  1803               	skipnc
  2220  0401  0ACE               	incf	_minute+1,f
  2221  0402  3000               	movlw	0
  2222  0403  07CE               	addwf	_minute+1,f
  2223                           
  2224                           ;LCDTime.c: 130: if (minute > 59)
  2225  0404  084E               	movf	_minute+1,w
  2226  0405  3A80               	xorlw	128
  2227  0406  00FF               	movwf	127
  2228  0407  3080               	movlw	128
  2229  0408  027F               	subwf	127,w
  2230  0409  1D03               	skipz
  2231  040A  2C0D               	goto	u1825
  2232  040B  303C               	movlw	60
  2233  040C  024D               	subwf	_minute,w
  2234  040D                     u1825:	
  2235  040D  1C03               	skipc
  2236  040E  2C1E               	goto	l2309
  2237                           
  2238                           ;LCDTime.c: 131: minute = 0 ;
  2239  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2240  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2241  0411  2C1C               	goto	l2307
  2242  0412                     l254:	
  2243                           ;LCDTime.c: 132: }
  2244                           
  2245                           
  2246                           ;LCDTime.c: 133: else if (state & 0x20)
  2247  0412  1ED8               	btfss	_state,5
  2248  0413  2C1E               	goto	l2309
  2249                           
  2250                           ;LCDTime.c: 134: {
  2251                           ;LCDTime.c: 135: minute--;
  2252  0414  30FF               	movlw	255
  2253  0415  07CD               	addwf	_minute,f
  2254  0416  1803               	skipnc
  2255  0417  0ACE               	incf	_minute+1,f
  2256  0418  30FF               	movlw	255
  2257  0419  07CE               	addwf	_minute+1,f
  2258                           
  2259                           ;LCDTime.c: 136: if (minute < 0)
  2260  041A  1FCE               	btfss	_minute+1,7
  2261  041B  2C1E               	goto	l2309
  2262  041C                     l2307:	
  2263                           
  2264                           ;LCDTime.c: 137: minute = 0 ;
  2265  041C  01CD               	clrf	_minute
  2266  041D  01CE               	clrf	_minute+1
  2267  041E                     l2309:	
  2268                           
  2269                           ;LCDTime.c: 138: }
  2270                           ;LCDTime.c: 140: if (state)
  2271  041E  1283               	bcf	3,5	;RP0=0, select bank0
  2272  041F  1303               	bcf	3,6	;RP1=0, select bank0
  2273  0420  0858               	movf	_state,w
  2274  0421  1903               	btfsc	3,2
  2275  0422  2BF0               	goto	l2315
  2276                           
  2277                           ;LCDTime.c: 141: {
  2278                           ;LCDTime.c: 142: LCDGotoXY(0,1) ;
  2279  0423  01FC               	clrf	LCDGotoXY@y
  2280  0424  0AFC               	incf	LCDGotoXY@y,f
  2281  0425  3000               	movlw	0
  2282  0426  120A  158A  234C  120A  118A  	fcall	_LCDGotoXY
  2283                           
  2284                           ;LCDTime.c: 143: showTime();
  2285  042B  120A  118A  21A7  120A  118A  	fcall	_showTime
  2286  0430  2BF0               	goto	l2315
  2287  0431                     l2317:	
  2288                           ;LCDTime.c: 144: }
  2289                           ;LCDTime.c: 145: }
  2290                           ;LCDTime.c: 147: while(bButton)
  2291                           
  2292                           
  2293                           ;LCDTime.c: 148: readInputs();
  2294  0431  120A  158A  2419  120A  118A  	fcall	_readInputs
  2295  0436                     l2319:	
  2296  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2298  0438  0856               	movf	_bButton,w
  2299  0439  1D03               	btfss	3,2
  2300  043A  2C31               	goto	l2317
  2301                           
  2302                           ;LCDTime.c: 150: LCDGotoXY(0,0) ;
  2303  043B  01FC               	clrf	LCDGotoXY@y
  2304  043C  3000               	movlw	0
  2305  043D  120A  158A  234C  120A  118A  	fcall	_LCDGotoXY
  2306                           
  2307                           ;LCDTime.c: 151: LCDWriteString("Set Seconds");
  2308  0442  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2309  0443  120A  158A  25DE  120A  118A  	fcall	_LCDWriteString
  2310  0448                     l2345:	
  2311                           ;LCDTime.c: 153: while(!bButton)
  2312                           
  2313  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2315  044A  0856               	movf	_bButton,w
  2316  044B  1D03               	btfss	3,2
  2317  044C  2C89               	goto	l2347
  2318                           
  2319                           ;LCDTime.c: 154: {
  2320                           ;LCDTime.c: 155: readInputs();
  2321  044D  120A  158A  2419  120A  118A  	fcall	_readInputs
  2322                           
  2323                           ;LCDTime.c: 157: if (state & 0x10)
  2324  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2325  0453  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0454  1E58               	btfss	_state,4
  2327  0455  2C6A               	goto	l266
  2328                           
  2329                           ;LCDTime.c: 158: {
  2330                           ;LCDTime.c: 159: seconds++;
  2331  0456  3001               	movlw	1
  2332  0457  07D1               	addwf	_seconds,f
  2333  0458  1803               	skipnc
  2334  0459  0AD2               	incf	_seconds+1,f
  2335  045A  3000               	movlw	0
  2336  045B  07D2               	addwf	_seconds+1,f
  2337                           
  2338                           ;LCDTime.c: 160: if (seconds > 59)
  2339  045C  0852               	movf	_seconds+1,w
  2340  045D  3A80               	xorlw	128
  2341  045E  00FF               	movwf	127
  2342  045F  3080               	movlw	128
  2343  0460  027F               	subwf	127,w
  2344  0461  1D03               	skipz
  2345  0462  2C65               	goto	u1895
  2346  0463  303C               	movlw	60
  2347  0464  0251               	subwf	_seconds,w
  2348  0465                     u1895:	
  2349  0465  1C03               	skipc
  2350  0466  2C76               	goto	l2339
  2351                           
  2352                           ;LCDTime.c: 161: seconds = 0 ;
  2353  0467  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0468  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0469  2C74               	goto	l2337
  2356  046A                     l266:	
  2357                           ;LCDTime.c: 162: }
  2358                           
  2359                           
  2360                           ;LCDTime.c: 163: else if (state & 0x20)
  2361  046A  1ED8               	btfss	_state,5
  2362  046B  2C76               	goto	l2339
  2363                           
  2364                           ;LCDTime.c: 164: {
  2365                           ;LCDTime.c: 165: seconds--;
  2366  046C  30FF               	movlw	255
  2367  046D  07D1               	addwf	_seconds,f
  2368  046E  1803               	skipnc
  2369  046F  0AD2               	incf	_seconds+1,f
  2370  0470  30FF               	movlw	255
  2371  0471  07D2               	addwf	_seconds+1,f
  2372                           
  2373                           ;LCDTime.c: 166: if (seconds < 0)
  2374  0472  1FD2               	btfss	_seconds+1,7
  2375  0473  2C76               	goto	l2339
  2376  0474                     l2337:	
  2377                           
  2378                           ;LCDTime.c: 167: seconds = 0 ;
  2379  0474  01D1               	clrf	_seconds
  2380  0475  01D2               	clrf	_seconds+1
  2381  0476                     l2339:	
  2382                           
  2383                           ;LCDTime.c: 168: }
  2384                           ;LCDTime.c: 170: if (state)
  2385  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0478  0858               	movf	_state,w
  2388  0479  1903               	btfsc	3,2
  2389  047A  2C48               	goto	l2345
  2390                           
  2391                           ;LCDTime.c: 171: {
  2392                           ;LCDTime.c: 172: LCDGotoXY(0,1) ;
  2393  047B  01FC               	clrf	LCDGotoXY@y
  2394  047C  0AFC               	incf	LCDGotoXY@y,f
  2395  047D  3000               	movlw	0
  2396  047E  120A  158A  234C  120A  118A  	fcall	_LCDGotoXY
  2397                           
  2398                           ;LCDTime.c: 173: showTime();
  2399  0483  120A  118A  21A7  120A  118A  	fcall	_showTime
  2400  0488  2C48               	goto	l2345
  2401  0489                     l2347:	
  2402                           
  2403                           ;LCDTime.c: 174: }
  2404                           ;LCDTime.c: 175: }
  2405                           ;LCDTime.c: 178: if (h != hour || m != minute || s != seconds)
  2406  0489  084C               	movf	_hour+1,w
  2407  048A  062C               	xorwf	doMenu@h+1,w
  2408  048B  1D03               	skipz
  2409  048C  2C8F               	goto	u1945
  2410  048D  084B               	movf	_hour,w
  2411  048E  062B               	xorwf	doMenu@h,w
  2412  048F                     u1945:	
  2413  048F  1D03               	skipz
  2414  0490  2CA1               	goto	l2353
  2415  0491  084E               	movf	_minute+1,w
  2416  0492  062E               	xorwf	doMenu@m+1,w
  2417  0493  1D03               	skipz
  2418  0494  2C97               	goto	u1955
  2419  0495  084D               	movf	_minute,w
  2420  0496  062D               	xorwf	doMenu@m,w
  2421  0497                     u1955:	
  2422  0497  1D03               	skipz
  2423  0498  2CA1               	goto	l2353
  2424  0499  0852               	movf	_seconds+1,w
  2425  049A  0630               	xorwf	doMenu@s+1,w
  2426  049B  1D03               	skipz
  2427  049C  2C9F               	goto	u1965
  2428  049D  0851               	movf	_seconds,w
  2429  049E  062F               	xorwf	doMenu@s,w
  2430  049F                     u1965:	
  2431  049F  1903               	skipnz
  2432  04A0  2D48               	goto	l2357
  2433  04A1                     l2353:	
  2434                           
  2435                           ;LCDTime.c: 179: {
  2436                           ;LCDTime.c: 180: h = ((hour / 10) << 4) + hour % 10 ;
  2437  04A1  300A               	movlw	10
  2438  04A2  00F0               	movwf	___awdiv@divisor
  2439  04A3  3000               	movlw	0
  2440  04A4  00F1               	movwf	___awdiv@divisor+1
  2441  04A5  084C               	movf	_hour+1,w
  2442  04A6  00F3               	movwf	___awdiv@dividend+1
  2443  04A7  084B               	movf	_hour,w
  2444  04A8  00F2               	movwf	___awdiv@dividend
  2445  04A9  120A  158A  2684  120A  118A  	fcall	___awdiv
  2446  04AE  0870               	movf	?___awdiv,w
  2447  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2448  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2449  04B1  00A8               	movwf	??_doMenu
  2450  04B2  0871               	movf	?___awdiv+1,w
  2451  04B3  00A9               	movwf	??_doMenu+1
  2452  04B4  0EA8               	swapf	??_doMenu,f
  2453  04B5  0EA9               	swapf	??_doMenu+1,f
  2454  04B6  30F0               	movlw	240
  2455  04B7  05A9               	andwf	??_doMenu+1,f
  2456  04B8  0828               	movf	??_doMenu,w
  2457  04B9  390F               	andlw	15
  2458  04BA  04A9               	iorwf	??_doMenu+1,f
  2459  04BB  30F0               	movlw	240
  2460  04BC  05A8               	andwf	??_doMenu,f
  2461  04BD  300A               	movlw	10
  2462  04BE  00F0               	movwf	___awmod@divisor
  2463  04BF  3000               	movlw	0
  2464  04C0  00F1               	movwf	___awmod@divisor+1
  2465  04C1  084C               	movf	_hour+1,w
  2466  04C2  00F3               	movwf	___awmod@dividend+1
  2467  04C3  084B               	movf	_hour,w
  2468  04C4  00F2               	movwf	___awmod@dividend
  2469  04C5  120A  158A  24F3  120A  118A  	fcall	___awmod
  2470  04CA  0870               	movf	?___awmod,w
  2471  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2472  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2473  04CD  0728               	addwf	??_doMenu,w
  2474  04CE  00AB               	movwf	doMenu@h
  2475  04CF  0871               	movf	?___awmod+1,w
  2476  04D0  1803               	skipnc
  2477  04D1  0A71               	incf	?___awmod+1,w
  2478  04D2  0729               	addwf	??_doMenu+1,w
  2479  04D3  00AC               	movwf	doMenu@h+1
  2480                           
  2481                           ;LCDTime.c: 181: m = ((minute / 10) << 4) + minute % 10 ;
  2482  04D4  300A               	movlw	10
  2483  04D5  00F0               	movwf	___awdiv@divisor
  2484  04D6  3000               	movlw	0
  2485  04D7  00F1               	movwf	___awdiv@divisor+1
  2486  04D8  084E               	movf	_minute+1,w
  2487  04D9  00F3               	movwf	___awdiv@dividend+1
  2488  04DA  084D               	movf	_minute,w
  2489  04DB  00F2               	movwf	___awdiv@dividend
  2490  04DC  120A  158A  2684  120A  118A  	fcall	___awdiv
  2491  04E1  0870               	movf	?___awdiv,w
  2492  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2493  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  2494  04E4  00A8               	movwf	??_doMenu
  2495  04E5  0871               	movf	?___awdiv+1,w
  2496  04E6  00A9               	movwf	??_doMenu+1
  2497  04E7  0EA8               	swapf	??_doMenu,f
  2498  04E8  0EA9               	swapf	??_doMenu+1,f
  2499  04E9  30F0               	movlw	240
  2500  04EA  05A9               	andwf	??_doMenu+1,f
  2501  04EB  0828               	movf	??_doMenu,w
  2502  04EC  390F               	andlw	15
  2503  04ED  04A9               	iorwf	??_doMenu+1,f
  2504  04EE  30F0               	movlw	240
  2505  04EF  05A8               	andwf	??_doMenu,f
  2506  04F0  300A               	movlw	10
  2507  04F1  00F0               	movwf	___awmod@divisor
  2508  04F2  3000               	movlw	0
  2509  04F3  00F1               	movwf	___awmod@divisor+1
  2510  04F4  084E               	movf	_minute+1,w
  2511  04F5  00F3               	movwf	___awmod@dividend+1
  2512  04F6  084D               	movf	_minute,w
  2513  04F7  00F2               	movwf	___awmod@dividend
  2514  04F8  120A  158A  24F3  120A  118A  	fcall	___awmod
  2515  04FD  0870               	movf	?___awmod,w
  2516  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2517  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0500  0728               	addwf	??_doMenu,w
  2519  0501  00AD               	movwf	doMenu@m
  2520  0502  0871               	movf	?___awmod+1,w
  2521  0503  1803               	skipnc
  2522  0504  0A71               	incf	?___awmod+1,w
  2523  0505  0729               	addwf	??_doMenu+1,w
  2524  0506  00AE               	movwf	doMenu@m+1
  2525                           
  2526                           ;LCDTime.c: 182: s = ((seconds / 10) << 4) + seconds % 10 ;
  2527  0507  300A               	movlw	10
  2528  0508  00F0               	movwf	___awdiv@divisor
  2529  0509  3000               	movlw	0
  2530  050A  00F1               	movwf	___awdiv@divisor+1
  2531  050B  0852               	movf	_seconds+1,w
  2532  050C  00F3               	movwf	___awdiv@dividend+1
  2533  050D  0851               	movf	_seconds,w
  2534  050E  00F2               	movwf	___awdiv@dividend
  2535  050F  120A  158A  2684  120A  118A  	fcall	___awdiv
  2536  0514  0870               	movf	?___awdiv,w
  2537  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2539  0517  00A8               	movwf	??_doMenu
  2540  0518  0871               	movf	?___awdiv+1,w
  2541  0519  00A9               	movwf	??_doMenu+1
  2542  051A  0EA8               	swapf	??_doMenu,f
  2543  051B  0EA9               	swapf	??_doMenu+1,f
  2544  051C  30F0               	movlw	240
  2545  051D  05A9               	andwf	??_doMenu+1,f
  2546  051E  0828               	movf	??_doMenu,w
  2547  051F  390F               	andlw	15
  2548  0520  04A9               	iorwf	??_doMenu+1,f
  2549  0521  30F0               	movlw	240
  2550  0522  05A8               	andwf	??_doMenu,f
  2551  0523  300A               	movlw	10
  2552  0524  00F0               	movwf	___awmod@divisor
  2553  0525  3000               	movlw	0
  2554  0526  00F1               	movwf	___awmod@divisor+1
  2555  0527  0852               	movf	_seconds+1,w
  2556  0528  00F3               	movwf	___awmod@dividend+1
  2557  0529  0851               	movf	_seconds,w
  2558  052A  00F2               	movwf	___awmod@dividend
  2559  052B  120A  158A  24F3  120A  118A  	fcall	___awmod
  2560  0530  0870               	movf	?___awmod,w
  2561  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0533  0728               	addwf	??_doMenu,w
  2564  0534  00AF               	movwf	doMenu@s
  2565  0535  0871               	movf	?___awmod+1,w
  2566  0536  1803               	skipnc
  2567  0537  0A71               	incf	?___awmod+1,w
  2568  0538  0729               	addwf	??_doMenu+1,w
  2569  0539  00B0               	movwf	doMenu@s+1
  2570                           
  2571                           ;LCDTime.c: 184: DS1307_SetTime(h,m,s) ;
  2572  053A  082D               	movf	doMenu@m,w
  2573  053B  00A8               	movwf	??_doMenu
  2574  053C  0828               	movf	??_doMenu,w
  2575  053D  00F5               	movwf	DS1307_SetTime@mm
  2576  053E  082F               	movf	doMenu@s,w
  2577  053F  00A9               	movwf	??_doMenu+1
  2578  0540  0829               	movf	??_doMenu+1,w
  2579  0541  00F6               	movwf	DS1307_SetTime@ss
  2580  0542  082B               	movf	doMenu@h,w
  2581  0543  120A  158A  2399  120A  118A  	fcall	_DS1307_SetTime
  2582  0548                     l2357:	
  2583                           ;LCDTime.c: 185: }
  2584                           ;LCDTime.c: 187: while(bButton)
  2585                           
  2586  0548  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0549  1303               	bcf	3,6	;RP1=0, select bank0
  2588  054A  0856               	movf	_bButton,w
  2589  054B  1903               	btfsc	3,2
  2590  054C  2D53               	goto	l2359
  2591                           
  2592                           ;LCDTime.c: 188: readInputs();
  2593  054D  120A  158A  2419  120A  118A  	fcall	_readInputs
  2594  0552  2D48               	goto	l2357
  2595  0553                     l2359:	
  2596                           
  2597                           ;LCDTime.c: 189: }
  2598                           ;LCDTime.c: 192: if (menuFunction == 0 | menuFunction == 2)
  2599  0553  0857               	movf	_menuFunction,w
  2600  0554  1903               	btfsc	3,2
  2601  0555  2D5A               	goto	l2363
  2602  0556  3002               	movlw	2
  2603  0557  0657               	xorwf	_menuFunction,w
  2604  0558  1D03               	btfss	3,2
  2605  0559  0008               	return
  2606  055A                     l2363:	
  2607                           
  2608                           ;LCDTime.c: 193: {
  2609                           ;LCDTime.c: 194: int n,d,m,y ;
  2610                           ;LCDTime.c: 196: n = day ;
  2611  055A  084A               	movf	_day+1,w
  2612  055B  00B2               	movwf	doMenu@n+1
  2613  055C  0849               	movf	_day,w
  2614  055D  00B1               	movwf	doMenu@n
  2615                           
  2616                           ;LCDTime.c: 197: d = date ;
  2617  055E  0848               	movf	_date+1,w
  2618  055F  00B4               	movwf	doMenu@d+1
  2619  0560  0847               	movf	_date,w
  2620  0561  00B3               	movwf	doMenu@d
  2621                           
  2622                           ;LCDTime.c: 198: m = month ;
  2623  0562  0850               	movf	_month+1,w
  2624  0563  00B6               	movwf	doMenu@m_260+1
  2625  0564  084F               	movf	_month,w
  2626  0565  00B5               	movwf	doMenu@m_260
  2627                           
  2628                           ;LCDTime.c: 199: y = year ;
  2629  0566  0854               	movf	_year+1,w
  2630  0567  00B8               	movwf	doMenu@y+1
  2631  0568  0853               	movf	_year,w
  2632  0569  00B7               	movwf	doMenu@y
  2633                           
  2634                           ;LCDTime.c: 201: (LCDByte(0b00000001,0));
  2635  056A  01F5               	clrf	LCDByte@isdata
  2636  056B  3001               	movlw	1
  2637  056C  120A  158A  258E  120A  118A  	fcall	_LCDByte
  2638                           
  2639                           ;LCDTime.c: 202: LCDWriteString("Set Year");
  2640  0571  3069               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2641  0572  120A  158A  25DE  120A  118A  	fcall	_LCDWriteString
  2642  0577                     L5:	
  2643                           
  2644                           ;LCDTime.c: 204: LCDGotoXY(0,1) ;
  2645  0577  01FC               	clrf	LCDGotoXY@y
  2646  0578  0AFC               	incf	LCDGotoXY@y,f
  2647  0579  3000               	movlw	0
  2648  057A  120A  158A  234C  120A  118A  	fcall	_LCDGotoXY
  2649                           
  2650                           ;LCDTime.c: 205: showDate();
  2651  057F  120A  118A  2110  120A  118A  	fcall	_showDate
  2652  0584                     l2393:	
  2653                           ;LCDTime.c: 207: while(!bButton)
  2654                           
  2655  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0586  0856               	movf	_bButton,w
  2658  0587  1D03               	btfss	3,2
  2659  0588  2DC1               	goto	l2397
  2660                           
  2661                           ;LCDTime.c: 208: {
  2662                           ;LCDTime.c: 209: readInputs();
  2663  0589  120A  158A  2419  120A  118A  	fcall	_readInputs
  2664                           
  2665                           ;LCDTime.c: 211: if (state & 0x10)
  2666  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2667  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2668  0590  1E58               	btfss	_state,4
  2669  0591  2DA8               	goto	l284
  2670                           
  2671                           ;LCDTime.c: 212: {
  2672                           ;LCDTime.c: 213: year++;
  2673  0592  3001               	movlw	1
  2674  0593  07D3               	addwf	_year,f
  2675  0594  1803               	skipnc
  2676  0595  0AD4               	incf	_year+1,f
  2677  0596  3000               	movlw	0
  2678  0597  07D4               	addwf	_year+1,f
  2679                           
  2680                           ;LCDTime.c: 214: if (year > 99)
  2681  0598  0854               	movf	_year+1,w
  2682  0599  3A80               	xorlw	128
  2683  059A  00FF               	movwf	127
  2684  059B  3080               	movlw	128
  2685  059C  027F               	subwf	127,w
  2686  059D  1D03               	skipz
  2687  059E  2DA1               	goto	u2015
  2688  059F  3064               	movlw	100
  2689  05A0  0253               	subwf	_year,w
  2690  05A1                     u2015:	
  2691  05A1  1C03               	skipc
  2692  05A2  2DB6               	goto	l2389
  2693                           
  2694                           ;LCDTime.c: 215: year = 0 ;
  2695  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  2696  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  2697  05A5  01D3               	clrf	_year
  2698  05A6  01D4               	clrf	_year+1
  2699                           
  2700                           ;LCDTime.c: 216: }
  2701  05A7  2DB6               	goto	l2389
  2702  05A8                     l284:	
  2703                           
  2704                           ;LCDTime.c: 217: else if (state & 0x20)
  2705  05A8  1ED8               	btfss	_state,5
  2706  05A9  2DB6               	goto	l2389
  2707                           
  2708                           ;LCDTime.c: 218: {
  2709                           ;LCDTime.c: 219: year--;
  2710  05AA  30FF               	movlw	255
  2711  05AB  07D3               	addwf	_year,f
  2712  05AC  1803               	skipnc
  2713  05AD  0AD4               	incf	_year+1,f
  2714  05AE  30FF               	movlw	255
  2715  05AF  07D4               	addwf	_year+1,f
  2716                           
  2717                           ;LCDTime.c: 220: if (year < 0)
  2718  05B0  1FD4               	btfss	_year+1,7
  2719  05B1  2DB6               	goto	l2389
  2720                           
  2721                           ;LCDTime.c: 221: date = 99 ;
  2722  05B2  3063               	movlw	99
  2723  05B3  00C7               	movwf	_date
  2724  05B4  3000               	movlw	0
  2725  05B5  00C8               	movwf	_date+1
  2726  05B6                     l2389:	
  2727                           
  2728                           ;LCDTime.c: 222: }
  2729                           ;LCDTime.c: 224: if (state)
  2730  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2731  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2732  05B8  0858               	movf	_state,w
  2733  05B9  1903               	btfsc	3,2
  2734  05BA  2D84               	goto	l2393
  2735  05BB  2D77               	goto	L5
  2736  05BC                     l2395:	
  2737                           ;LCDTime.c: 228: }
  2738                           ;LCDTime.c: 229: }
  2739                           ;LCDTime.c: 231: while(bButton)
  2740                           
  2741                           ;LCDTime.c: 227: showDate();
  2742                           
  2743                           ;LCDTime.c: 225: {
  2744                           ;LCDTime.c: 226: LCDGotoXY(0,1) ;
  2745                           
  2746                           
  2747                           ;LCDTime.c: 232: readInputs();
  2748  05BC  120A  158A  2419  120A  118A  	fcall	_readInputs
  2749  05C1                     l2397:	
  2750  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2751  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2752  05C3  0856               	movf	_bButton,w
  2753  05C4  1D03               	btfss	3,2
  2754  05C5  2DBC               	goto	l2395
  2755                           
  2756                           ;LCDTime.c: 234: LCDGotoXY(0,0) ;
  2757  05C6  01FC               	clrf	LCDGotoXY@y
  2758  05C7  3000               	movlw	0
  2759  05C8  120A  158A  234C  120A  118A  	fcall	_LCDGotoXY
  2760                           
  2761                           ;LCDTime.c: 235: LCDWriteString("Set Month");
  2762  05CD  3055               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2763  05CE  120A  158A  25DE  120A  118A  	fcall	_LCDWriteString
  2764  05D3                     l2421:	
  2765                           ;LCDTime.c: 237: while(!bButton)
  2766                           
  2767  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2768  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2769  05D5  0856               	movf	_bButton,w
  2770  05D6  1D03               	btfss	3,2
  2771  05D7  2E1E               	goto	l2425
  2772                           
  2773                           ;LCDTime.c: 238: {
  2774                           ;LCDTime.c: 239: readInputs();
  2775  05D8  120A  158A  2419  120A  118A  	fcall	_readInputs
  2776                           
  2777                           ;LCDTime.c: 241: if (state & 0x10)
  2778  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2779  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2780  05DF  1E58               	btfss	_state,4
  2781  05E0  2DF6               	goto	l296
  2782                           
  2783                           ;LCDTime.c: 242: {
  2784                           ;LCDTime.c: 243: month++;
  2785  05E1  3001               	movlw	1
  2786  05E2  07CF               	addwf	_month,f
  2787  05E3  1803               	skipnc
  2788  05E4  0AD0               	incf	_month+1,f
  2789  05E5  3000               	movlw	0
  2790  05E6  07D0               	addwf	_month+1,f
  2791                           
  2792                           ;LCDTime.c: 244: if (month > 12)
  2793  05E7  0850               	movf	_month+1,w
  2794  05E8  3A80               	xorlw	128
  2795  05E9  00FF               	movwf	127
  2796  05EA  3080               	movlw	128
  2797  05EB  027F               	subwf	127,w
  2798  05EC  1D03               	skipz
  2799  05ED  2DF0               	goto	u2085
  2800  05EE  300D               	movlw	13
  2801  05EF  024F               	subwf	_month,w
  2802  05F0                     u2085:	
  2803  05F0  1C03               	skipc
  2804  05F1  2E06               	goto	l2417
  2805                           
  2806                           ;LCDTime.c: 245: month = 1 ;
  2807  05F2  3001               	movlw	1
  2808  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  2809  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  2810  05F5  2E03               	goto	L1
  2811  05F6                     l296:	
  2812                           ;LCDTime.c: 246: }
  2813                           
  2814                           
  2815                           ;LCDTime.c: 247: else if (state & 0x20)
  2816  05F6  1ED8               	btfss	_state,5
  2817  05F7  2E06               	goto	l2417
  2818                           
  2819                           ;LCDTime.c: 248: {
  2820                           ;LCDTime.c: 249: month--;
  2821  05F8  30FF               	movlw	255
  2822  05F9  07CF               	addwf	_month,f
  2823  05FA  1803               	skipnc
  2824  05FB  0AD0               	incf	_month+1,f
  2825  05FC  30FF               	movlw	255
  2826  05FD  07D0               	addwf	_month+1,f
  2827                           
  2828                           ;LCDTime.c: 250: if (!month)
  2829  05FE  084F               	movf	_month,w
  2830  05FF  0450               	iorwf	_month+1,w
  2831  0600  1D03               	btfss	3,2
  2832  0601  2E06               	goto	l2417
  2833                           
  2834                           ;LCDTime.c: 251: month = 12 ;
  2835  0602  300C               	movlw	12
  2836  0603                     L1:	
  2837  0603  00CF               	movwf	_month
  2838  0604  3000               	movlw	0
  2839  0605  00D0               	movwf	_month+1
  2840  0606                     l2417:	
  2841                           
  2842                           ;LCDTime.c: 252: }
  2843                           ;LCDTime.c: 254: if (state)
  2844  0606  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0607  1303               	bcf	3,6	;RP1=0, select bank0
  2846  0608  0858               	movf	_state,w
  2847  0609  1903               	btfsc	3,2
  2848  060A  2DD3               	goto	l2421
  2849                           
  2850                           ;LCDTime.c: 255: {
  2851                           ;LCDTime.c: 256: LCDGotoXY(0,1) ;
  2852  060B  01FC               	clrf	LCDGotoXY@y
  2853  060C  0AFC               	incf	LCDGotoXY@y,f
  2854  060D  3000               	movlw	0
  2855  060E  120A  158A  234C  120A  118A  	fcall	_LCDGotoXY
  2856                           
  2857                           ;LCDTime.c: 257: showDate();
  2858  0613  120A  118A  2110  120A  118A  	fcall	_showDate
  2859  0618  2DD3               	goto	l2421
  2860  0619                     l2423:	
  2861                           ;LCDTime.c: 258: }
  2862                           ;LCDTime.c: 259: }
  2863                           ;LCDTime.c: 261: while(bButton)
  2864                           
  2865                           
  2866                           ;LCDTime.c: 262: readInputs();
  2867  0619  120A  158A  2419  120A  118A  	fcall	_readInputs
  2868  061E                     l2425:	
  2869  061E  1283               	bcf	3,5	;RP0=0, select bank0
  2870  061F  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0620  0856               	movf	_bButton,w
  2872  0621  1D03               	btfss	3,2
  2873  0622  2E19               	goto	l2423
  2874                           
  2875                           ;LCDTime.c: 264: LCDGotoXY(0,0) ;
  2876  0623  01FC               	clrf	LCDGotoXY@y
  2877  0624  3000               	movlw	0
  2878  0625  120A  158A  234C  120A  118A  	fcall	_LCDGotoXY
  2879                           
  2880                           ;LCDTime.c: 265: LCDWriteString("Set Date ");
  2881  062A  304B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2882  062B  120A  158A  25DE  120A  118A  	fcall	_LCDWriteString
  2883  0630                     l2449:	
  2884                           ;LCDTime.c: 267: while(!bButton)
  2885                           
  2886  0630  1283               	bcf	3,5	;RP0=0, select bank0
  2887  0631  1303               	bcf	3,6	;RP1=0, select bank0
  2888  0632  0856               	movf	_bButton,w
  2889  0633  1D03               	btfss	3,2
  2890  0634  2E8E               	goto	l2453
  2891                           
  2892                           ;LCDTime.c: 268: {
  2893                           ;LCDTime.c: 269: readInputs();
  2894  0635  120A  158A  2419  120A  118A  	fcall	_readInputs
  2895                           
  2896                           ;LCDTime.c: 271: if (state & 0x10)
  2897  063A  1283               	bcf	3,5	;RP0=0, select bank0
  2898  063B  1303               	bcf	3,6	;RP1=0, select bank0
  2899  063C  1E58               	btfss	_state,4
  2900  063D  2E5D               	goto	l308
  2901                           
  2902                           ;LCDTime.c: 272: {
  2903                           ;LCDTime.c: 273: date++;
  2904  063E  3001               	movlw	1
  2905  063F  07C7               	addwf	_date,f
  2906  0640  1803               	skipnc
  2907  0641  0AC8               	incf	_date+1,f
  2908  0642  3000               	movlw	0
  2909  0643  07C8               	addwf	_date+1,f
  2910                           
  2911                           ;LCDTime.c: 274: if (date > monthDays[month-1])
  2912  0644  084F               	movf	_month,w
  2913  0645  3EFF               	addlw	255
  2914  0646  3E1D               	addlw	low ((_monthDays-__stringbase)| (0+32768))
  2915  0647  0084               	movwf	4
  2916  0648  120A  118A  2003  120A  118A  	fcall	stringdir
  2917  064D  00A8               	movwf	??_doMenu
  2918  064E  0848               	movf	_date+1,w
  2919  064F  3A80               	xorlw	128
  2920  0650  3C80               	sublw	128
  2921  0651  1D03               	skipz
  2922  0652  2E55               	goto	u2155
  2923  0653  0847               	movf	_date,w
  2924  0654  0228               	subwf	??_doMenu,w
  2925  0655                     u2155:	
  2926  0655  1803               	skipnc
  2927  0656  2E76               	goto	l2445
  2928                           
  2929                           ;LCDTime.c: 275: date = 1 ;
  2930  0657  3001               	movlw	1
  2931  0658  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0659  1303               	bcf	3,6	;RP1=0, select bank0
  2933  065A  00C7               	movwf	_date
  2934  065B  3000               	movlw	0
  2935  065C  2E75               	goto	L2
  2936  065D                     l308:	
  2937                           ;LCDTime.c: 276: }
  2938                           
  2939                           
  2940                           ;LCDTime.c: 277: else if (state & 0x20)
  2941  065D  1ED8               	btfss	_state,5
  2942  065E  2E76               	goto	l2445
  2943                           
  2944                           ;LCDTime.c: 278: {
  2945                           ;LCDTime.c: 279: date--;
  2946  065F  30FF               	movlw	255
  2947  0660  07C7               	addwf	_date,f
  2948  0661  1803               	skipnc
  2949  0662  0AC8               	incf	_date+1,f
  2950  0663  30FF               	movlw	255
  2951  0664  07C8               	addwf	_date+1,f
  2952                           
  2953                           ;LCDTime.c: 280: if (date < 0)
  2954  0665  1FC8               	btfss	_date+1,7
  2955  0666  2E76               	goto	l2445
  2956                           
  2957                           ;LCDTime.c: 281: date = monthDays[month-1] ;
  2958  0667  084F               	movf	_month,w
  2959  0668  3EFF               	addlw	255
  2960  0669  3E1D               	addlw	low ((_monthDays-__stringbase)| (0+32768))
  2961  066A  0084               	movwf	4
  2962  066B  120A  118A  2003  120A  118A  	fcall	stringdir
  2963  0670  00A8               	movwf	??_doMenu
  2964  0671  01A9               	clrf	??_doMenu+1
  2965  0672  0828               	movf	??_doMenu,w
  2966  0673  00C7               	movwf	_date
  2967  0674  0829               	movf	??_doMenu+1,w
  2968  0675                     L2:	
  2969  0675  00C8               	movwf	_date+1
  2970  0676                     l2445:	
  2971                           
  2972                           ;LCDTime.c: 282: }
  2973                           ;LCDTime.c: 284: if (state)
  2974  0676  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0677  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0678  0858               	movf	_state,w
  2977  0679  1903               	btfsc	3,2
  2978  067A  2E30               	goto	l2449
  2979                           
  2980                           ;LCDTime.c: 285: {
  2981                           ;LCDTime.c: 286: LCDGotoXY(0,1) ;
  2982  067B  01FC               	clrf	LCDGotoXY@y
  2983  067C  0AFC               	incf	LCDGotoXY@y,f
  2984  067D  3000               	movlw	0
  2985  067E  120A  158A  234C  120A  118A  	fcall	_LCDGotoXY
  2986                           
  2987                           ;LCDTime.c: 287: showDate();
  2988  0683  120A  118A  2110  120A  118A  	fcall	_showDate
  2989  0688  2E30               	goto	l2449
  2990  0689                     l2451:	
  2991                           ;LCDTime.c: 288: }
  2992                           ;LCDTime.c: 289: }
  2993                           ;LCDTime.c: 291: while(bButton)
  2994                           
  2995                           
  2996                           ;LCDTime.c: 292: readInputs();
  2997  0689  120A  158A  2419  120A  118A  	fcall	_readInputs
  2998  068E                     l2453:	
  2999  068E  1283               	bcf	3,5	;RP0=0, select bank0
  3000  068F  1303               	bcf	3,6	;RP1=0, select bank0
  3001  0690  0856               	movf	_bButton,w
  3002  0691  1D03               	btfss	3,2
  3003  0692  2E89               	goto	l2451
  3004                           
  3005                           ;LCDTime.c: 294: LCDGotoXY(0,0) ;
  3006  0693  01FC               	clrf	LCDGotoXY@y
  3007  0694  3000               	movlw	0
  3008  0695  120A  158A  234C  120A  118A  	fcall	_LCDGotoXY
  3009                           
  3010                           ;LCDTime.c: 295: LCDWriteString("Set Day  ");
  3011  069A  3041               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3012  069B  120A  158A  25DE  120A  118A  	fcall	_LCDWriteString
  3013  06A0                     l2477:	
  3014                           ;LCDTime.c: 297: while(!bButton)
  3015                           
  3016  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  3017  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  3018  06A2  0856               	movf	_bButton,w
  3019  06A3  1D03               	btfss	3,2
  3020  06A4  2EE4               	goto	l2479
  3021                           
  3022                           ;LCDTime.c: 298: {
  3023                           ;LCDTime.c: 299: readInputs();
  3024  06A5  120A  158A  2419  120A  118A  	fcall	_readInputs
  3025                           
  3026                           ;LCDTime.c: 301: if (state & 0x10)
  3027  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3028  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  3029  06AC  1E58               	btfss	_state,4
  3030  06AD  2EC3               	goto	l320
  3031                           
  3032                           ;LCDTime.c: 302: {
  3033                           ;LCDTime.c: 303: day++;
  3034  06AE  3001               	movlw	1
  3035  06AF  07C9               	addwf	_day,f
  3036  06B0  1803               	skipnc
  3037  06B1  0ACA               	incf	_day+1,f
  3038  06B2  3000               	movlw	0
  3039  06B3  07CA               	addwf	_day+1,f
  3040                           
  3041                           ;LCDTime.c: 304: if (day > 7)
  3042  06B4  084A               	movf	_day+1,w
  3043  06B5  3A80               	xorlw	128
  3044  06B6  00FF               	movwf	127
  3045  06B7  3080               	movlw	128
  3046  06B8  027F               	subwf	127,w
  3047  06B9  1D03               	skipz
  3048  06BA  2EBD               	goto	u2225
  3049  06BB  3008               	movlw	8
  3050  06BC  0249               	subwf	_day,w
  3051  06BD                     u2225:	
  3052  06BD  1C03               	skipc
  3053  06BE  2ED1               	goto	l2473
  3054                           
  3055                           ;LCDTime.c: 305: day = 1 ;
  3056  06BF  3001               	movlw	1
  3057  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  3058  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  3059  06C2  2ECE               	goto	L3
  3060  06C3                     l320:	
  3061                           ;LCDTime.c: 306: }
  3062                           
  3063                           
  3064                           ;LCDTime.c: 307: else if (state & 0x20)
  3065  06C3  1ED8               	btfss	_state,5
  3066  06C4  2ED1               	goto	l2473
  3067                           
  3068                           ;LCDTime.c: 308: {
  3069                           ;LCDTime.c: 309: day--;
  3070  06C5  30FF               	movlw	255
  3071  06C6  07C9               	addwf	_day,f
  3072  06C7  1803               	skipnc
  3073  06C8  0ACA               	incf	_day+1,f
  3074  06C9  30FF               	movlw	255
  3075  06CA  07CA               	addwf	_day+1,f
  3076                           
  3077                           ;LCDTime.c: 310: if (day < 0)
  3078  06CB  1FCA               	btfss	_day+1,7
  3079  06CC  2ED1               	goto	l2473
  3080                           
  3081                           ;LCDTime.c: 311: day = 7 ;
  3082  06CD  3007               	movlw	7
  3083  06CE                     L3:	
  3084  06CE  00C9               	movwf	_day
  3085  06CF  3000               	movlw	0
  3086  06D0  00CA               	movwf	_day+1
  3087  06D1                     l2473:	
  3088                           
  3089                           ;LCDTime.c: 312: }
  3090                           ;LCDTime.c: 314: if (state)
  3091  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  3092  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  3093  06D3  0858               	movf	_state,w
  3094  06D4  1903               	btfsc	3,2
  3095  06D5  2EA0               	goto	l2477
  3096                           
  3097                           ;LCDTime.c: 315: {
  3098                           ;LCDTime.c: 316: LCDGotoXY(0,1) ;
  3099  06D6  01FC               	clrf	LCDGotoXY@y
  3100  06D7  0AFC               	incf	LCDGotoXY@y,f
  3101  06D8  3000               	movlw	0
  3102  06D9  120A  158A  234C  120A  118A  	fcall	_LCDGotoXY
  3103                           
  3104                           ;LCDTime.c: 317: showDate();
  3105  06DE  120A  118A  2110  120A  118A  	fcall	_showDate
  3106  06E3  2EA0               	goto	l2477
  3107  06E4                     l2479:	
  3108                           
  3109                           ;LCDTime.c: 318: }
  3110                           ;LCDTime.c: 319: }
  3111                           ;LCDTime.c: 321: if (n != day || d != date || m != month || y != year)
  3112  06E4  084A               	movf	_day+1,w
  3113  06E5  0632               	xorwf	doMenu@n+1,w
  3114  06E6  1D03               	skipz
  3115  06E7  2EEA               	goto	u2275
  3116  06E8  0849               	movf	_day,w
  3117  06E9  0631               	xorwf	doMenu@n,w
  3118  06EA                     u2275:	
  3119  06EA  1D03               	skipz
  3120  06EB  2F04               	goto	l2487
  3121  06EC  0848               	movf	_date+1,w
  3122  06ED  0634               	xorwf	doMenu@d+1,w
  3123  06EE  1D03               	skipz
  3124  06EF  2EF2               	goto	u2285
  3125  06F0  0847               	movf	_date,w
  3126  06F1  0633               	xorwf	doMenu@d,w
  3127  06F2                     u2285:	
  3128  06F2  1D03               	skipz
  3129  06F3  2F04               	goto	l2487
  3130  06F4  0850               	movf	_month+1,w
  3131  06F5  0636               	xorwf	doMenu@m_260+1,w
  3132  06F6  1D03               	skipz
  3133  06F7  2EFA               	goto	u2295
  3134  06F8  084F               	movf	_month,w
  3135  06F9  0635               	xorwf	doMenu@m_260,w
  3136  06FA                     u2295:	
  3137  06FA  1D03               	skipz
  3138  06FB  2F04               	goto	l2487
  3139  06FC  0854               	movf	_year+1,w
  3140  06FD  0638               	xorwf	doMenu@y+1,w
  3141  06FE  1D03               	skipz
  3142  06FF  2F02               	goto	u2305
  3143  0700  0853               	movf	_year,w
  3144  0701  0637               	xorwf	doMenu@y,w
  3145  0702                     u2305:	
  3146  0702  1903               	skipnz
  3147  0703  2FE2               	goto	l2491
  3148  0704                     l2487:	
  3149                           
  3150                           ;LCDTime.c: 322: {
  3151                           ;LCDTime.c: 323: n = ((day / 10) << 4) + day % 10 ;
  3152  0704  300A               	movlw	10
  3153  0705  00F0               	movwf	___awdiv@divisor
  3154  0706  3000               	movlw	0
  3155  0707  00F1               	movwf	___awdiv@divisor+1
  3156  0708  084A               	movf	_day+1,w
  3157  0709  00F3               	movwf	___awdiv@dividend+1
  3158  070A  0849               	movf	_day,w
  3159  070B  00F2               	movwf	___awdiv@dividend
  3160  070C  120A  158A  2684  120A  118A  	fcall	___awdiv
  3161  0711  0870               	movf	?___awdiv,w
  3162  0712  1283               	bcf	3,5	;RP0=0, select bank0
  3163  0713  1303               	bcf	3,6	;RP1=0, select bank0
  3164  0714  00A8               	movwf	??_doMenu
  3165  0715  0871               	movf	?___awdiv+1,w
  3166  0716  00A9               	movwf	??_doMenu+1
  3167  0717  0EA8               	swapf	??_doMenu,f
  3168  0718  0EA9               	swapf	??_doMenu+1,f
  3169  0719  30F0               	movlw	240
  3170  071A  05A9               	andwf	??_doMenu+1,f
  3171  071B  0828               	movf	??_doMenu,w
  3172  071C  390F               	andlw	15
  3173  071D  04A9               	iorwf	??_doMenu+1,f
  3174  071E  30F0               	movlw	240
  3175  071F  05A8               	andwf	??_doMenu,f
  3176  0720  300A               	movlw	10
  3177  0721  00F0               	movwf	___awmod@divisor
  3178  0722  3000               	movlw	0
  3179  0723  00F1               	movwf	___awmod@divisor+1
  3180  0724  084A               	movf	_day+1,w
  3181  0725  00F3               	movwf	___awmod@dividend+1
  3182  0726  0849               	movf	_day,w
  3183  0727  00F2               	movwf	___awmod@dividend
  3184  0728  120A  158A  24F3  120A  118A  	fcall	___awmod
  3185  072D  0870               	movf	?___awmod,w
  3186  072E  1283               	bcf	3,5	;RP0=0, select bank0
  3187  072F  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0730  0728               	addwf	??_doMenu,w
  3189  0731  00B1               	movwf	doMenu@n
  3190  0732  0871               	movf	?___awmod+1,w
  3191  0733  1803               	skipnc
  3192  0734  0A71               	incf	?___awmod+1,w
  3193  0735  0729               	addwf	??_doMenu+1,w
  3194  0736  00B2               	movwf	doMenu@n+1
  3195                           
  3196                           ;LCDTime.c: 324: d = ((date / 10) << 4) + date % 10 ;
  3197  0737  300A               	movlw	10
  3198  0738  00F0               	movwf	___awdiv@divisor
  3199  0739  3000               	movlw	0
  3200  073A  00F1               	movwf	___awdiv@divisor+1
  3201  073B  0848               	movf	_date+1,w
  3202  073C  00F3               	movwf	___awdiv@dividend+1
  3203  073D  0847               	movf	_date,w
  3204  073E  00F2               	movwf	___awdiv@dividend
  3205  073F  120A  158A  2684  120A  118A  	fcall	___awdiv
  3206  0744  0870               	movf	?___awdiv,w
  3207  0745  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0746  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0747  00A8               	movwf	??_doMenu
  3210  0748  0871               	movf	?___awdiv+1,w
  3211  0749  00A9               	movwf	??_doMenu+1
  3212  074A  0EA8               	swapf	??_doMenu,f
  3213  074B  0EA9               	swapf	??_doMenu+1,f
  3214  074C  30F0               	movlw	240
  3215  074D  05A9               	andwf	??_doMenu+1,f
  3216  074E  0828               	movf	??_doMenu,w
  3217  074F  390F               	andlw	15
  3218  0750  04A9               	iorwf	??_doMenu+1,f
  3219  0751  30F0               	movlw	240
  3220  0752  05A8               	andwf	??_doMenu,f
  3221  0753  300A               	movlw	10
  3222  0754  00F0               	movwf	___awmod@divisor
  3223  0755  3000               	movlw	0
  3224  0756  00F1               	movwf	___awmod@divisor+1
  3225  0757  0848               	movf	_date+1,w
  3226  0758  00F3               	movwf	___awmod@dividend+1
  3227  0759  0847               	movf	_date,w
  3228  075A  00F2               	movwf	___awmod@dividend
  3229  075B  120A  158A  24F3  120A  118A  	fcall	___awmod
  3230  0760  0870               	movf	?___awmod,w
  3231  0761  1283               	bcf	3,5	;RP0=0, select bank0
  3232  0762  1303               	bcf	3,6	;RP1=0, select bank0
  3233  0763  0728               	addwf	??_doMenu,w
  3234  0764  00B3               	movwf	doMenu@d
  3235  0765  0871               	movf	?___awmod+1,w
  3236  0766  1803               	skipnc
  3237  0767  0A71               	incf	?___awmod+1,w
  3238  0768  0729               	addwf	??_doMenu+1,w
  3239  0769  00B4               	movwf	doMenu@d+1
  3240                           
  3241                           ;LCDTime.c: 325: m = ((month / 10) << 4) + month % 10 ;
  3242  076A  300A               	movlw	10
  3243  076B  00F0               	movwf	___awdiv@divisor
  3244  076C  3000               	movlw	0
  3245  076D  00F1               	movwf	___awdiv@divisor+1
  3246  076E  0850               	movf	_month+1,w
  3247  076F  00F3               	movwf	___awdiv@dividend+1
  3248  0770  084F               	movf	_month,w
  3249  0771  00F2               	movwf	___awdiv@dividend
  3250  0772  120A  158A  2684  120A  118A  	fcall	___awdiv
  3251  0777  0870               	movf	?___awdiv,w
  3252  0778  1283               	bcf	3,5	;RP0=0, select bank0
  3253  0779  1303               	bcf	3,6	;RP1=0, select bank0
  3254  077A  00A8               	movwf	??_doMenu
  3255  077B  0871               	movf	?___awdiv+1,w
  3256  077C  00A9               	movwf	??_doMenu+1
  3257  077D  0EA8               	swapf	??_doMenu,f
  3258  077E  0EA9               	swapf	??_doMenu+1,f
  3259  077F  30F0               	movlw	240
  3260  0780  05A9               	andwf	??_doMenu+1,f
  3261  0781  0828               	movf	??_doMenu,w
  3262  0782  390F               	andlw	15
  3263  0783  04A9               	iorwf	??_doMenu+1,f
  3264  0784  30F0               	movlw	240
  3265  0785  05A8               	andwf	??_doMenu,f
  3266  0786  300A               	movlw	10
  3267  0787  00F0               	movwf	___awmod@divisor
  3268  0788  3000               	movlw	0
  3269  0789  00F1               	movwf	___awmod@divisor+1
  3270  078A  0850               	movf	_month+1,w
  3271  078B  00F3               	movwf	___awmod@dividend+1
  3272  078C  084F               	movf	_month,w
  3273  078D  00F2               	movwf	___awmod@dividend
  3274  078E  120A  158A  24F3  120A  118A  	fcall	___awmod
  3275  0793  0870               	movf	?___awmod,w
  3276  0794  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0795  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0796  0728               	addwf	??_doMenu,w
  3279  0797  00B5               	movwf	doMenu@m_260
  3280  0798  0871               	movf	?___awmod+1,w
  3281  0799  1803               	skipnc
  3282  079A  0A71               	incf	?___awmod+1,w
  3283  079B  0729               	addwf	??_doMenu+1,w
  3284  079C  00B6               	movwf	doMenu@m_260+1
  3285                           
  3286                           ;LCDTime.c: 326: y = ((year / 10) << 4) + year % 10 ;
  3287  079D  300A               	movlw	10
  3288  079E  00F0               	movwf	___awdiv@divisor
  3289  079F  3000               	movlw	0
  3290  07A0  00F1               	movwf	___awdiv@divisor+1
  3291  07A1  0854               	movf	_year+1,w
  3292  07A2  00F3               	movwf	___awdiv@dividend+1
  3293  07A3  0853               	movf	_year,w
  3294  07A4  00F2               	movwf	___awdiv@dividend
  3295  07A5  120A  158A  2684  120A  118A  	fcall	___awdiv
  3296  07AA  0870               	movf	?___awdiv,w
  3297  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  3298  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  3299  07AD  00A8               	movwf	??_doMenu
  3300  07AE  0871               	movf	?___awdiv+1,w
  3301  07AF  00A9               	movwf	??_doMenu+1
  3302  07B0  0EA8               	swapf	??_doMenu,f
  3303  07B1  0EA9               	swapf	??_doMenu+1,f
  3304  07B2  30F0               	movlw	240
  3305  07B3  05A9               	andwf	??_doMenu+1,f
  3306  07B4  0828               	movf	??_doMenu,w
  3307  07B5  390F               	andlw	15
  3308  07B6  04A9               	iorwf	??_doMenu+1,f
  3309  07B7  30F0               	movlw	240
  3310  07B8  05A8               	andwf	??_doMenu,f
  3311  07B9  300A               	movlw	10
  3312  07BA  00F0               	movwf	___awmod@divisor
  3313  07BB  3000               	movlw	0
  3314  07BC  00F1               	movwf	___awmod@divisor+1
  3315  07BD  0854               	movf	_year+1,w
  3316  07BE  00F3               	movwf	___awmod@dividend+1
  3317  07BF  0853               	movf	_year,w
  3318  07C0  00F2               	movwf	___awmod@dividend
  3319  07C1  120A  158A  24F3  120A  118A  	fcall	___awmod
  3320  07C6  0870               	movf	?___awmod,w
  3321  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  3322  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  3323  07C9  0728               	addwf	??_doMenu,w
  3324  07CA  00B7               	movwf	doMenu@y
  3325  07CB  0871               	movf	?___awmod+1,w
  3326  07CC  1803               	skipnc
  3327  07CD  0A71               	incf	?___awmod+1,w
  3328  07CE  0729               	addwf	??_doMenu+1,w
  3329  07CF  00B8               	movwf	doMenu@y+1
  3330                           
  3331                           ;LCDTime.c: 328: DS1307_SetDate(n,d,m,y) ;
  3332  07D0  0833               	movf	doMenu@d,w
  3333  07D1  00A8               	movwf	??_doMenu
  3334  07D2  0828               	movf	??_doMenu,w
  3335  07D3  00F5               	movwf	DS1307_SetDate@dd
  3336  07D4  0835               	movf	doMenu@m_260,w
  3337  07D5  00A9               	movwf	??_doMenu+1
  3338  07D6  0829               	movf	??_doMenu+1,w
  3339  07D7  00F6               	movwf	DS1307_SetDate@mm
  3340  07D8  0837               	movf	doMenu@y,w
  3341  07D9  00AA               	movwf	??_doMenu+2
  3342  07DA  082A               	movf	??_doMenu+2,w
  3343  07DB  00F7               	movwf	DS1307_SetDate@yy
  3344  07DC  0831               	movf	doMenu@n,w
  3345  07DD  120A  158A  23EB  120A  118A  	fcall	_DS1307_SetDate
  3346  07E2                     l2491:	
  3347                           ;LCDTime.c: 329: }
  3348                           ;LCDTime.c: 332: while(bButton)
  3349                           
  3350  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  3351  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  3352  07E4  0856               	movf	_bButton,w
  3353  07E5  1903               	btfsc	3,2
  3354  07E6  0008               	return
  3355                           
  3356                           ;LCDTime.c: 333: readInputs();
  3357  07E7  120A  158A  2419  120A  118A  	fcall	_readInputs
  3358  07EC  2FE2               	goto	l2491
  3359  07ED                     __end_of_doMenu:	
  3360                           
  3361                           	psect	text9
  3362  01A7                     __ptext9:	
  3363 ;; *************** function _showTime *****************
  3364 ;; Defined at:
  3365 ;;		line 390 in file "LCDTime.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3379 ;;      Params:         0       0       0       0       0
  3380 ;;      Locals:         0       0       0       0       0
  3381 ;;      Temps:          1       0       0       0       0
  3382 ;;      Totals:         1       0       0       0       0
  3383 ;;Total ram usage:        1 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    3
  3386 ;; This function calls:
  3387 ;;		_LCDByte
  3388 ;;		_LCDWriteInt
  3389 ;;		___awdiv
  3390 ;;		___awmod
  3391 ;;		_setLED
  3392 ;; This function is called by:
  3393 ;;		_doMenu
  3394 ;;		_showClock
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           
  3399                           ;psect for function _showTime
  3400  01A7                     _showTime:	
  3401                           
  3402                           ;LCDTime.c: 392: LCDWriteInt(hour,2);
  3403                           
  3404                           ;incstack = 0
  3405                           ; Regs used in _showTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3406  01A7  3002               	movlw	2
  3407  01A8  00FD               	movwf	??_showTime
  3408  01A9  087D               	movf	??_showTime,w
  3409  01AA  00FC               	movwf	LCDWriteInt@field_length
  3410  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  3411  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  3412  01AD  084B               	movf	_hour,w
  3413  01AE  120A  118A  20A8  120A  118A  	fcall	_LCDWriteInt
  3414                           
  3415                           ;LCDTime.c: 393: (LCDByte(':',1)) ;
  3416  01B3  01F5               	clrf	LCDByte@isdata
  3417  01B4  0AF5               	incf	LCDByte@isdata,f
  3418  01B5  303A               	movlw	58
  3419  01B6  120A  158A  258E  120A  118A  	fcall	_LCDByte
  3420                           
  3421                           ;LCDTime.c: 394: LCDWriteInt(minute,2);
  3422  01BB  3002               	movlw	2
  3423  01BC  00FD               	movwf	??_showTime
  3424  01BD  087D               	movf	??_showTime,w
  3425  01BE  00FC               	movwf	LCDWriteInt@field_length
  3426  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  3427  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  3428  01C1  084D               	movf	_minute,w
  3429  01C2  120A  118A  20A8  120A  118A  	fcall	_LCDWriteInt
  3430                           
  3431                           ;LCDTime.c: 395: (LCDByte(':',1)) ;
  3432  01C7  01F5               	clrf	LCDByte@isdata
  3433  01C8  0AF5               	incf	LCDByte@isdata,f
  3434  01C9  303A               	movlw	58
  3435  01CA  120A  158A  258E  120A  118A  	fcall	_LCDByte
  3436                           
  3437                           ;LCDTime.c: 396: LCDWriteInt(seconds,2);
  3438  01CF  3002               	movlw	2
  3439  01D0  00FD               	movwf	??_showTime
  3440  01D1  087D               	movf	??_showTime,w
  3441  01D2  00FC               	movwf	LCDWriteInt@field_length
  3442  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  3443  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  3444  01D5  0851               	movf	_seconds,w
  3445  01D6  120A  118A  20A8  120A  118A  	fcall	_LCDWriteInt
  3446                           
  3447                           ;LCDTime.c: 398: setLED(0,hour / 10) ;
  3448  01DB  3000               	movlw	0
  3449  01DC  00F9               	movwf	setLED@digit
  3450  01DD  00FA               	movwf	setLED@digit+1
  3451  01DE  300A               	movlw	10
  3452  01DF  00F0               	movwf	___awdiv@divisor
  3453  01E0  3000               	movlw	0
  3454  01E1  00F1               	movwf	___awdiv@divisor+1
  3455  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  3456  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  3457  01E4  084C               	movf	_hour+1,w
  3458  01E5  00F3               	movwf	___awdiv@dividend+1
  3459  01E6  084B               	movf	_hour,w
  3460  01E7  00F2               	movwf	___awdiv@dividend
  3461  01E8  120A  158A  2684  120A  118A  	fcall	___awdiv
  3462  01ED  0871               	movf	?___awdiv+1,w
  3463  01EE  00FC               	movwf	setLED@value+1
  3464  01EF  0870               	movf	?___awdiv,w
  3465  01F0  00FB               	movwf	setLED@value
  3466  01F1  120A  158A  2448  120A  118A  	fcall	_setLED
  3467                           
  3468                           ;LCDTime.c: 399: setLED(1,hour % 10) ;
  3469  01F6  3001               	movlw	1
  3470  01F7  00F9               	movwf	setLED@digit
  3471  01F8  3000               	movlw	0
  3472  01F9  00FA               	movwf	setLED@digit+1
  3473  01FA  300A               	movlw	10
  3474  01FB  00F0               	movwf	___awmod@divisor
  3475  01FC  3000               	movlw	0
  3476  01FD  00F1               	movwf	___awmod@divisor+1
  3477  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  3478  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  3479  0200  084C               	movf	_hour+1,w
  3480  0201  00F3               	movwf	___awmod@dividend+1
  3481  0202  084B               	movf	_hour,w
  3482  0203  00F2               	movwf	___awmod@dividend
  3483  0204  120A  158A  24F3  120A  118A  	fcall	___awmod
  3484  0209  0871               	movf	?___awmod+1,w
  3485  020A  00FC               	movwf	setLED@value+1
  3486  020B  0870               	movf	?___awmod,w
  3487  020C  00FB               	movwf	setLED@value
  3488  020D  120A  158A  2448  120A  118A  	fcall	_setLED
  3489                           
  3490                           ;LCDTime.c: 400: setLED(2,minute / 10) ;
  3491  0212  3002               	movlw	2
  3492  0213  00F9               	movwf	setLED@digit
  3493  0214  3000               	movlw	0
  3494  0215  00FA               	movwf	setLED@digit+1
  3495  0216  300A               	movlw	10
  3496  0217  00F0               	movwf	___awdiv@divisor
  3497  0218  3000               	movlw	0
  3498  0219  00F1               	movwf	___awdiv@divisor+1
  3499  021A  1283               	bcf	3,5	;RP0=0, select bank0
  3500  021B  1303               	bcf	3,6	;RP1=0, select bank0
  3501  021C  084E               	movf	_minute+1,w
  3502  021D  00F3               	movwf	___awdiv@dividend+1
  3503  021E  084D               	movf	_minute,w
  3504  021F  00F2               	movwf	___awdiv@dividend
  3505  0220  120A  158A  2684  120A  118A  	fcall	___awdiv
  3506  0225  0871               	movf	?___awdiv+1,w
  3507  0226  00FC               	movwf	setLED@value+1
  3508  0227  0870               	movf	?___awdiv,w
  3509  0228  00FB               	movwf	setLED@value
  3510  0229  120A  158A  2448  120A  118A  	fcall	_setLED
  3511                           
  3512                           ;LCDTime.c: 401: setLED(3,minute % 10) ;
  3513  022E  3003               	movlw	3
  3514  022F  00F9               	movwf	setLED@digit
  3515  0230  3000               	movlw	0
  3516  0231  00FA               	movwf	setLED@digit+1
  3517  0232  300A               	movlw	10
  3518  0233  00F0               	movwf	___awmod@divisor
  3519  0234  3000               	movlw	0
  3520  0235  00F1               	movwf	___awmod@divisor+1
  3521  0236  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0237  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0238  084E               	movf	_minute+1,w
  3524  0239  00F3               	movwf	___awmod@dividend+1
  3525  023A  084D               	movf	_minute,w
  3526  023B  00F2               	movwf	___awmod@dividend
  3527  023C  120A  158A  24F3  120A  118A  	fcall	___awmod
  3528  0241  0871               	movf	?___awmod+1,w
  3529  0242  00FC               	movwf	setLED@value+1
  3530  0243  0870               	movf	?___awmod,w
  3531  0244  00FB               	movwf	setLED@value
  3532  0245  120A  158A  2448   	fcall	_setLED
  3533  0248  0008               	return
  3534  0249                     __end_of_showTime:	
  3535                           
  3536                           	psect	text10
  3537  0C48                     __ptext10:	
  3538 ;; *************** function _setLED *****************
  3539 ;; Defined at:
  3540 ;;		line 473 in file "LCDTime.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  digit           2    9[COMMON] int 
  3543 ;;  value           2   11[COMMON] int 
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;  v               1    5[BANK0 ] unsigned char 
  3546 ;;  d               1    4[BANK0 ] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3556 ;;      Params:         4       0       0       0       0
  3557 ;;      Locals:         0       2       0       0       0
  3558 ;;      Temps:          0       4       0       0       0
  3559 ;;      Totals:         4       6       0       0       0
  3560 ;;Total ram usage:       10 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    1
  3563 ;; This function calls:
  3564 ;;		_sendLED
  3565 ;; This function is called by:
  3566 ;;		_showTime
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           
  3571                           ;psect for function _setLED
  3572  0C48                     _setLED:	
  3573                           
  3574                           ;LCDTime.c: 475: unsigned char d = 0x80 >> (3-digit) ;
  3575                           
  3576                           ;incstack = 0
  3577                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3578  0C48  0379               	decf	setLED@digit,w
  3579  0C49  3AFF               	xorlw	255
  3580  0C4A  3E03               	addlw	3
  3581  0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  3582  0C4C  1303               	bcf	3,6	;RP1=0, select bank0
  3583  0C4D  00A0               	movwf	??_setLED
  3584  0C4E  0AA0               	incf	??_setLED,f
  3585  0C4F  3080               	movlw	128
  3586  0C50  00A1               	movwf	??_setLED+1
  3587  0C51  3000               	movlw	0
  3588  0C52  00A2               	movwf	??_setLED+2
  3589  0C53  2C57               	goto	u1604
  3590  0C54                     u1605:	
  3591  0C54  0D22               	rlf	??_setLED+2,w
  3592  0C55  0CA2               	rrf	??_setLED+2,f
  3593  0C56  0CA1               	rrf	??_setLED+1,f
  3594  0C57                     u1604:	
  3595  0C57  0BA0               	decfsz	??_setLED,f
  3596  0C58  2C54               	goto	u1605
  3597  0C59  1283               	bcf	3,5	;RP0=0, select bank0
  3598  0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  3599  0C5B  0821               	movf	??_setLED+1,w
  3600  0C5C  00A3               	movwf	??_setLED+3
  3601  0C5D  0823               	movf	??_setLED+3,w
  3602  0C5E  00A4               	movwf	setLED@d
  3603                           
  3604                           ;LCDTime.c: 476: unsigned char v = led_digits[value] ;
  3605  0C5F  087B               	movf	setLED@value,w
  3606  0C60  3E3D               	addlw	(low (_led_digits| 0))& (0+255)
  3607  0C61  0084               	movwf	4
  3608  0C62  1383               	bcf	3,7	;select IRP bank0
  3609  0C63  0800               	movf	0,w
  3610  0C64  00A0               	movwf	??_setLED
  3611  0C65  0820               	movf	??_setLED,w
  3612  0C66  00A5               	movwf	setLED@v
  3613                           
  3614                           ;LCDTime.c: 478: sendLED((v << 8) | d);
  3615  0C67  0824               	movf	setLED@d,w
  3616  0C68  00A0               	movwf	??_setLED
  3617  0C69  01A1               	clrf	??_setLED+1
  3618  0C6A  0825               	movf	setLED@v,w
  3619  0C6B  00A2               	movwf	??_setLED+2
  3620  0C6C  01A3               	clrf	??_setLED+3
  3621  0C6D  0822               	movf	??_setLED+2,w
  3622  0C6E  00A3               	movwf	??_setLED+3
  3623  0C6F  01A2               	clrf	??_setLED+2
  3624  0C70  0820               	movf	??_setLED,w
  3625  0C71  0422               	iorwf	??_setLED+2,w
  3626  0C72  00F0               	movwf	sendLED@c
  3627  0C73  0821               	movf	??_setLED+1,w
  3628  0C74  0423               	iorwf	??_setLED+3,w
  3629  0C75  00F1               	movwf	sendLED@c+1
  3630  0C76  120A  158A  273A   	fcall	_sendLED
  3631  0C79  0008               	return
  3632  0C7A                     __end_of_setLED:	
  3633                           
  3634                           	psect	text11
  3635  0F3A                     __ptext11:	
  3636 ;; *************** function _sendLED *****************
  3637 ;; Defined at:
  3638 ;;		line 443 in file "LCDTime.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  c               2    0[COMMON] unsigned int 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  i               2    4[COMMON] int 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  1    wreg      void 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, btemp+1
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3652 ;;      Params:         2       0       0       0       0
  3653 ;;      Locals:         2       0       0       0       0
  3654 ;;      Temps:          2       0       0       0       0
  3655 ;;      Totals:         6       0       0       0       0
  3656 ;;Total ram usage:        6 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_initLED
  3662 ;;		_setLED
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           
  3667                           ;psect for function _sendLED
  3668  0F3A                     _sendLED:	
  3669                           
  3670                           ;LCDTime.c: 445: int i ;
  3671                           ;LCDTime.c: 447: RC1 = 0 ;
  3672                           
  3673                           ;incstack = 0
  3674                           ; Regs used in _sendLED: [wreg+status,2+btemp+1]
  3675  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  3676  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  3677  0F3C  1087               	bcf	7,1	;volatile
  3678                           
  3679                           ;LCDTime.c: 448: _delay((unsigned long)((4)*(4000000/4000.0)));
  3680  0F3D  3006               	movlw	6
  3681  0F3E  00F3               	movwf	??_sendLED+1
  3682  0F3F  3030               	movlw	48
  3683  0F40  00F2               	movwf	??_sendLED
  3684  0F41                     u2337:	
  3685  0F41  0BF2               	decfsz	??_sendLED,f
  3686  0F42  2F41               	goto	u2337
  3687  0F43  0BF3               	decfsz	??_sendLED+1,f
  3688  0F44  2F41               	goto	u2337
  3689  0F45  0000               	nop
  3690                           
  3691                           ;LCDTime.c: 450: for (i=0;i<16;i++)
  3692  0F46  01F4               	clrf	sendLED@i
  3693  0F47  01F5               	clrf	sendLED@i+1
  3694  0F48  0875               	movf	sendLED@i+1,w
  3695  0F49  3A80               	xorlw	128
  3696  0F4A  00FF               	movwf	127
  3697  0F4B  3080               	movlw	128
  3698  0F4C  027F               	subwf	127,w
  3699  0F4D  1D03               	skipz
  3700  0F4E  2F51               	goto	u1325
  3701  0F4F  3010               	movlw	16
  3702  0F50  0274               	subwf	sendLED@i,w
  3703  0F51                     u1325:	
  3704  0F51  1803               	btfsc	3,0
  3705  0F52  2F8D               	goto	l1825
  3706  0F53                     l1811:	
  3707                           
  3708                           ;LCDTime.c: 451: {
  3709                           ;LCDTime.c: 452: _delay((unsigned long)((1)*(4000000/4000.0)));
  3710  0F53  30F9               	movlw	249
  3711  0F54  00F2               	movwf	??_sendLED
  3712  0F55                     u2347:	
  3713  0F55  0000               	nop
  3714  0F56  0BF2               	decfsz	??_sendLED,f
  3715  0F57  2F55               	goto	u2347
  3716  0F58  2F59               	nop2	;nop
  3717  0F59  0000               	nop
  3718                           
  3719                           ;LCDTime.c: 454: if (c & 0x8000)
  3720  0F5A  1FF1               	btfss	sendLED@c+1,7
  3721  0F5B  2F60               	goto	l368
  3722                           
  3723                           ;LCDTime.c: 455: RC0 = 1 ;
  3724  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  3725  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  3726  0F5E  1407               	bsf	7,0	;volatile
  3727  0F5F  2F63               	goto	l1817
  3728  0F60                     l368:	
  3729                           
  3730                           ;LCDTime.c: 456: else
  3731                           ;LCDTime.c: 457: RC0 = 0 ;
  3732  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0F61  1303               	bcf	3,6	;RP1=0, select bank0
  3734  0F62  1007               	bcf	7,0	;volatile
  3735  0F63                     l1817:	
  3736                           
  3737                           ;LCDTime.c: 459: c = c << 1 ;
  3738  0F63  1003               	clrc
  3739  0F64  0D70               	rlf	sendLED@c,w
  3740  0F65  00F0               	movwf	sendLED@c
  3741  0F66  0D71               	rlf	sendLED@c+1,w
  3742  0F67  00F1               	movwf	sendLED@c+1
  3743                           
  3744                           ;LCDTime.c: 461: _delay((unsigned long)((1)*(4000000/4000.0))) ;
  3745  0F68  30F9               	movlw	249
  3746  0F69  00F2               	movwf	??_sendLED
  3747  0F6A                     u2357:	
  3748  0F6A  0000               	nop
  3749  0F6B  0BF2               	decfsz	??_sendLED,f
  3750  0F6C  2F6A               	goto	u2357
  3751  0F6D  2F6E               	nop2	;nop
  3752  0F6E  0000               	nop
  3753                           
  3754                           ;LCDTime.c: 462: RC2 = 1 ;
  3755  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3756  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  3757  0F71  1507               	bsf	7,2	;volatile
  3758                           
  3759                           ;LCDTime.c: 463: _delay((unsigned long)((1)*(4000000/4000.0))) ;
  3760  0F72  30F9               	movlw	249
  3761  0F73  00F2               	movwf	??_sendLED
  3762  0F74                     u2367:	
  3763  0F74  0000               	nop
  3764  0F75  0BF2               	decfsz	??_sendLED,f
  3765  0F76  2F74               	goto	u2367
  3766  0F77  2F78               	nop2	;nop
  3767  0F78  0000               	nop
  3768                           
  3769                           ;LCDTime.c: 464: RC2 = 0 ;
  3770  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0F7B  1107               	bcf	7,2	;volatile
  3773  0F7C  3001               	movlw	1
  3774  0F7D  07F4               	addwf	sendLED@i,f
  3775  0F7E  1803               	skipnc
  3776  0F7F  0AF5               	incf	sendLED@i+1,f
  3777  0F80  3000               	movlw	0
  3778  0F81  07F5               	addwf	sendLED@i+1,f
  3779  0F82  0875               	movf	sendLED@i+1,w
  3780  0F83  3A80               	xorlw	128
  3781  0F84  00FF               	movwf	127
  3782  0F85  3080               	movlw	128
  3783  0F86  027F               	subwf	127,w
  3784  0F87  1D03               	skipz
  3785  0F88  2F8B               	goto	u1345
  3786  0F89  3010               	movlw	16
  3787  0F8A  0274               	subwf	sendLED@i,w
  3788  0F8B                     u1345:	
  3789  0F8B  1C03               	skipc
  3790  0F8C  2F53               	goto	l1811
  3791  0F8D                     l1825:	
  3792                           
  3793                           ;LCDTime.c: 465: }
  3794                           ;LCDTime.c: 467: _delay((unsigned long)((4)*(4000000/4000.0)));
  3795  0F8D  3006               	movlw	6
  3796  0F8E  00F3               	movwf	??_sendLED+1
  3797  0F8F  3030               	movlw	48
  3798  0F90  00F2               	movwf	??_sendLED
  3799  0F91                     u2377:	
  3800  0F91  0BF2               	decfsz	??_sendLED,f
  3801  0F92  2F91               	goto	u2377
  3802  0F93  0BF3               	decfsz	??_sendLED+1,f
  3803  0F94  2F91               	goto	u2377
  3804  0F95  0000               	nop
  3805                           
  3806                           ;LCDTime.c: 468: RC1 = 1 ;
  3807  0F96  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0F97  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0F98  1487               	bsf	7,1	;volatile
  3810  0F99  0008               	return
  3811  0F9A                     __end_of_sendLED:	
  3812                           
  3813                           	psect	text12
  3814  0110                     __ptext12:	
  3815 ;; *************** function _showDate *****************
  3816 ;; Defined at:
  3817 ;;		line 404 in file "LCDTime.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;		None
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3831 ;;      Params:         0       0       0       0       0
  3832 ;;      Locals:         0       0       0       0       0
  3833 ;;      Temps:          1       0       0       0       0
  3834 ;;      Totals:         1       0       0       0       0
  3835 ;;Total ram usage:        1 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    3
  3838 ;; This function calls:
  3839 ;;		_LCDByte
  3840 ;;		_LCDWriteInt
  3841 ;;		_LCDWriteString
  3842 ;; This function is called by:
  3843 ;;		_doMenu
  3844 ;;		_showClock
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           
  3849                           ;psect for function _showDate
  3850  0110                     _showDate:	
  3851                           
  3852                           ;LCDTime.c: 406: LCDWriteInt(date,2);
  3853                           
  3854                           ;incstack = 0
  3855                           ; Regs used in _showDate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3856  0110  3002               	movlw	2
  3857  0111  00FD               	movwf	??_showDate
  3858  0112  087D               	movf	??_showDate,w
  3859  0113  00FC               	movwf	LCDWriteInt@field_length
  3860  0114  1283               	bcf	3,5	;RP0=0, select bank0
  3861  0115  1303               	bcf	3,6	;RP1=0, select bank0
  3862  0116  0847               	movf	_date,w
  3863  0117  120A  118A  20A8  120A  118A  	fcall	_LCDWriteInt
  3864                           
  3865                           ;LCDTime.c: 407: (LCDByte('/',1)) ;
  3866  011C  01F5               	clrf	LCDByte@isdata
  3867  011D  0AF5               	incf	LCDByte@isdata,f
  3868  011E  302F               	movlw	47
  3869  011F  120A  158A  258E  120A  118A  	fcall	_LCDByte
  3870                           
  3871                           ;LCDTime.c: 408: LCDWriteInt(month,2);
  3872  0124  3002               	movlw	2
  3873  0125  00FD               	movwf	??_showDate
  3874  0126  087D               	movf	??_showDate,w
  3875  0127  00FC               	movwf	LCDWriteInt@field_length
  3876  0128  1283               	bcf	3,5	;RP0=0, select bank0
  3877  0129  1303               	bcf	3,6	;RP1=0, select bank0
  3878  012A  084F               	movf	_month,w
  3879  012B  120A  118A  20A8  120A  118A  	fcall	_LCDWriteInt
  3880                           
  3881                           ;LCDTime.c: 409: (LCDByte('/',1)) ;
  3882  0130  01F5               	clrf	LCDByte@isdata
  3883  0131  0AF5               	incf	LCDByte@isdata,f
  3884  0132  302F               	movlw	47
  3885  0133  120A  158A  258E  120A  118A  	fcall	_LCDByte
  3886                           
  3887                           ;LCDTime.c: 410: (LCDByte('2',1)) ;
  3888  0138  01F5               	clrf	LCDByte@isdata
  3889  0139  0AF5               	incf	LCDByte@isdata,f
  3890  013A  3032               	movlw	50
  3891  013B  120A  158A  258E  120A  118A  	fcall	_LCDByte
  3892                           
  3893                           ;LCDTime.c: 411: (LCDByte('0',1)) ;
  3894  0140  01F5               	clrf	LCDByte@isdata
  3895  0141  0AF5               	incf	LCDByte@isdata,f
  3896  0142  3030               	movlw	48
  3897  0143  120A  158A  258E  120A  118A  	fcall	_LCDByte
  3898                           
  3899                           ;LCDTime.c: 412: LCDWriteInt(year,2);
  3900  0148  3002               	movlw	2
  3901  0149  00FD               	movwf	??_showDate
  3902  014A  087D               	movf	??_showDate,w
  3903  014B  00FC               	movwf	LCDWriteInt@field_length
  3904  014C  1283               	bcf	3,5	;RP0=0, select bank0
  3905  014D  1303               	bcf	3,6	;RP1=0, select bank0
  3906  014E  0853               	movf	_year,w
  3907  014F  120A  118A  20A8  120A  118A  	fcall	_LCDWriteInt
  3908                           
  3909                           ;LCDTime.c: 413: (LCDByte(32,1)) ;
  3910  0154  01F5               	clrf	LCDByte@isdata
  3911  0155  0AF5               	incf	LCDByte@isdata,f
  3912  0156  3020               	movlw	32
  3913  0157  120A  158A  258E  120A  118A  	fcall	_LCDByte
  3914                           
  3915                           ;LCDTime.c: 414: (LCDByte(32,1)) ;
  3916  015C  01F5               	clrf	LCDByte@isdata
  3917  015D  0AF5               	incf	LCDByte@isdata,f
  3918  015E  3020               	movlw	32
  3919  015F  120A  158A  258E  120A  118A  	fcall	_LCDByte
  3920                           
  3921                           ;LCDTime.c: 415: switch(day)
  3922  0164  2988               	goto	l2113
  3923  0165                     l2097:	
  3924                           ;LCDTime.c: 416: {
  3925                           ;LCDTime.c: 417: case 1 : LCDWriteString("Mon") ; break ;
  3926                           
  3927  0165  307E               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3928  0166  120A  158A  25DE   	fcall	_LCDWriteString
  3929  0169  0008               	return
  3930  016A                     l2099:	
  3931                           ;LCDTime.c: 418: case 2 : LCDWriteString("Tue") ; break ;
  3932                           
  3933  016A  3076               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3934  016B  120A  158A  25DE   	fcall	_LCDWriteString
  3935  016E  0008               	return
  3936  016F                     l2101:	
  3937                           ;LCDTime.c: 419: case 3 : LCDWriteString("Wed") ; break ;
  3938                           
  3939  016F  3072               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3940  0170  120A  158A  25DE   	fcall	_LCDWriteString
  3941  0173  0008               	return
  3942  0174                     l2103:	
  3943                           ;LCDTime.c: 420: case 4 : LCDWriteString("Thu") ; break ;
  3944                           
  3945  0174  308A               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3946  0175  120A  158A  25DE   	fcall	_LCDWriteString
  3947  0178  0008               	return
  3948  0179                     l2105:	
  3949                           ;LCDTime.c: 421: case 5 : LCDWriteString("Fri") ; break ;
  3950                           
  3951  0179  307A               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3952  017A  120A  158A  25DE   	fcall	_LCDWriteString
  3953  017D  0008               	return
  3954  017E                     l2107:	
  3955                           ;LCDTime.c: 422: case 6 : LCDWriteString("Sat") ; break ;
  3956                           
  3957  017E  3086               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3958  017F  120A  158A  25DE   	fcall	_LCDWriteString
  3959  0182  0008               	return
  3960  0183                     l2109:	
  3961                           ;LCDTime.c: 423: case 7 : LCDWriteString("Sun") ; break ;
  3962                           
  3963  0183  3082               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3964  0184  120A  158A  25DE   	fcall	_LCDWriteString
  3965                           
  3966                           ;LCDTime.c: 424: } ;
  3967  0187  0008               	return
  3968  0188                     l2113:	
  3969                           
  3970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3971                           ; Switch size 1, requested type "space"
  3972                           ; Number of cases is 1, Range of values is 0 to 0
  3973                           ; switch strategies available:
  3974                           ; Name         Instructions Cycles
  3975                           ; simple_byte            4     3 (average)
  3976                           ; direct_byte           11     8 (fixed)
  3977                           ; jumptable            260     6 (fixed)
  3978                           ;	Chosen strategy is simple_byte
  3979  0188  1283               	bcf	3,5	;RP0=0, select bank0
  3980  0189  1303               	bcf	3,6	;RP1=0, select bank0
  3981  018A  084A               	movf	_day+1,w
  3982  018B  3A00               	xorlw	0	; case 0
  3983  018C  1903               	skipnz
  3984  018D  298F               	goto	l2537
  3985  018E  29A6               	goto	l360
  3986  018F                     l2537:	
  3987                           
  3988                           ; Switch size 1, requested type "space"
  3989                           ; Number of cases is 7, Range of values is 1 to 7
  3990                           ; switch strategies available:
  3991                           ; Name         Instructions Cycles
  3992                           ; simple_byte           22    12 (average)
  3993                           ; direct_byte           32    11 (fixed)
  3994                           ; jumptable            263     9 (fixed)
  3995                           ;	Chosen strategy is simple_byte
  3996  018F  0849               	movf	_day,w
  3997  0190  3A01               	xorlw	1	; case 1
  3998  0191  1903               	skipnz
  3999  0192  2965               	goto	l2097
  4000  0193  3A03               	xorlw	3	; case 2
  4001  0194  1903               	skipnz
  4002  0195  296A               	goto	l2099
  4003  0196  3A01               	xorlw	1	; case 3
  4004  0197  1903               	skipnz
  4005  0198  296F               	goto	l2101
  4006  0199  3A07               	xorlw	7	; case 4
  4007  019A  1903               	skipnz
  4008  019B  2974               	goto	l2103
  4009  019C  3A01               	xorlw	1	; case 5
  4010  019D  1903               	skipnz
  4011  019E  2979               	goto	l2105
  4012  019F  3A03               	xorlw	3	; case 6
  4013  01A0  1903               	skipnz
  4014  01A1  297E               	goto	l2107
  4015  01A2  3A01               	xorlw	1	; case 7
  4016  01A3  1903               	skipnz
  4017  01A4  2983               	goto	l2109
  4018  01A5  29A6               	goto	l360
  4019  01A6                     l360:	
  4020  01A6  0008               	return
  4021  01A7                     __end_of_showDate:	
  4022                           
  4023                           	psect	text13
  4024  0DDE                     __ptext13:	
  4025 ;; *************** function _LCDWriteString *****************
  4026 ;; Defined at:
  4027 ;;		line 225 in file "lcd_hd44780_pic16.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;  msg             1    wreg     PTR const unsigned char 
  4030 ;;		 -> STR_14(4), STR_13(4), STR_12(4), STR_11(4), 
  4031 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(10), 
  4032 ;;		 -> STR_6(10), STR_5(10), STR_4(9), STR_3(12), 
  4033 ;;		 -> STR_2(12), STR_1(10), 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  msg             1    1[BANK0 ] PTR const unsigned char 
  4036 ;;		 -> STR_14(4), STR_13(4), STR_12(4), STR_11(4), 
  4037 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(10), 
  4038 ;;		 -> STR_6(10), STR_5(10), STR_4(9), STR_3(12), 
  4039 ;;		 -> STR_2(12), STR_1(10), 
  4040 ;;  cc              1    0[BANK0 ] char 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  1    wreg      void 
  4043 ;; Registers used:
  4044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4050 ;;      Params:         0       0       0       0       0
  4051 ;;      Locals:         0       2       0       0       0
  4052 ;;      Temps:          1       0       0       0       0
  4053 ;;      Totals:         1       2       0       0       0
  4054 ;;Total ram usage:        3 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    2
  4057 ;; This function calls:
  4058 ;;		_LCDByte
  4059 ;; This function is called by:
  4060 ;;		_doMenu
  4061 ;;		_showDate
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           
  4066                           ;psect for function _LCDWriteString
  4067  0DDE                     _LCDWriteString:	
  4068                           
  4069                           ;incstack = 0
  4070                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4071                           ;LCDWriteString@msg stored from wreg
  4072  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  4073  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  4074  0DE0  00A1               	movwf	LCDWriteString@msg
  4075  0DE1                     l1957:	
  4076                           ;lcd_hd44780_pic16.c: 255: while(*msg!='\0')
  4077                           
  4078  0DE1  0821               	movf	LCDWriteString@msg,w
  4079  0DE2  0084               	movwf	4
  4080  0DE3  120A  118A  2003  120A  158A  	fcall	stringdir
  4081  0DE8  3A00               	xorlw	0
  4082  0DE9  1903               	btfsc	3,2
  4083  0DEA  0008               	return
  4084                           
  4085                           ;lcd_hd44780_pic16.c: 256: {
  4086                           ;lcd_hd44780_pic16.c: 258: if(*msg=='%')
  4087  0DEB  0821               	movf	LCDWriteString@msg,w
  4088  0DEC  0084               	movwf	4
  4089  0DED  120A  118A  2003  120A  158A  	fcall	stringdir
  4090  0DF2  3A25               	xorlw	37
  4091  0DF3  1D03               	skipz
  4092  0DF4  2E17               	goto	l1953
  4093                           
  4094                           ;lcd_hd44780_pic16.c: 259: {
  4095                           ;lcd_hd44780_pic16.c: 260: msg++;
  4096  0DF5  3001               	movlw	1
  4097  0DF6  00FC               	movwf	??_LCDWriteString
  4098  0DF7  087C               	movf	??_LCDWriteString,w
  4099  0DF8  07A1               	addwf	LCDWriteString@msg,f
  4100                           
  4101                           ;lcd_hd44780_pic16.c: 261: int8_t cc=*msg-'0';
  4102  0DF9  0821               	movf	LCDWriteString@msg,w
  4103  0DFA  0084               	movwf	4
  4104  0DFB  120A  118A  2003  120A  158A  	fcall	stringdir
  4105  0E00  3ED0               	addlw	-48
  4106  0E01  00FC               	movwf	??_LCDWriteString
  4107  0E02  087C               	movf	??_LCDWriteString,w
  4108  0E03  00A0               	movwf	LCDWriteString@cc
  4109                           
  4110                           ;lcd_hd44780_pic16.c: 263: if(cc>=0 && cc<=7)
  4111  0E04  1BA0               	btfsc	LCDWriteString@cc,7
  4112  0E05  2E0F               	goto	l1949
  4113  0E06  0820               	movf	LCDWriteString@cc,w
  4114  0E07  3A80               	xorlw	128
  4115  0E08  3E78               	addlw	-136
  4116  0E09  1803               	skipnc
  4117  0E0A  2E0F               	goto	l1949
  4118                           
  4119                           ;lcd_hd44780_pic16.c: 264: {
  4120                           ;lcd_hd44780_pic16.c: 265: (LCDByte(cc,1));
  4121  0E0B  01F5               	clrf	LCDByte@isdata
  4122  0E0C  0AF5               	incf	LCDByte@isdata,f
  4123  0E0D  0820               	movf	LCDWriteString@cc,w
  4124  0E0E  2E22               	goto	L6
  4125  0E0F                     l1949:	
  4126                           ;lcd_hd44780_pic16.c: 266: }
  4127                           
  4128                           
  4129                           ;lcd_hd44780_pic16.c: 267: else
  4130                           ;lcd_hd44780_pic16.c: 268: {
  4131                           ;lcd_hd44780_pic16.c: 269: (LCDByte('%',1));
  4132  0E0F  01F5               	clrf	LCDByte@isdata
  4133  0E10  0AF5               	incf	LCDByte@isdata,f
  4134  0E11  3025               	movlw	37
  4135  0E12  120A  158A  258E  120A  158A  	fcall	_LCDByte
  4136  0E17                     l1953:	
  4137                           ;lcd_hd44780_pic16.c: 271: }
  4138                           ;lcd_hd44780_pic16.c: 272: }
  4139                           
  4140                           ;lcd_hd44780_pic16.c: 270: (LCDByte(*msg,1));
  4141                           
  4142                           
  4143                           ;lcd_hd44780_pic16.c: 273: else
  4144                           ;lcd_hd44780_pic16.c: 274: {
  4145                           ;lcd_hd44780_pic16.c: 275: (LCDByte(*msg,1));
  4146  0E17  01F5               	clrf	LCDByte@isdata
  4147  0E18  0AF5               	incf	LCDByte@isdata,f
  4148  0E19  1283               	bcf	3,5	;RP0=0, select bank0
  4149  0E1A  1303               	bcf	3,6	;RP1=0, select bank0
  4150  0E1B  0821               	movf	LCDWriteString@msg,w
  4151  0E1C  0084               	movwf	4
  4152  0E1D  120A  118A  2003  120A  158A  	fcall	stringdir
  4153  0E22                     L6:	
  4154  0E22  120A  158A  258E  120A  158A  	fcall	_LCDByte
  4155                           
  4156                           ;lcd_hd44780_pic16.c: 276: }
  4157                           ;lcd_hd44780_pic16.c: 277: msg++;
  4158  0E27  3001               	movlw	1
  4159  0E28  00FC               	movwf	??_LCDWriteString
  4160  0E29  087C               	movf	??_LCDWriteString,w
  4161  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  4162  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  4163  0E2C  07A1               	addwf	LCDWriteString@msg,f
  4164  0E2D  2DE1               	goto	l1957
  4165  0E2E                     __end_of_LCDWriteString:	
  4166                           
  4167                           	psect	text14
  4168  00A8                     __ptext14:	
  4169 ;; *************** function _LCDWriteInt *****************
  4170 ;; Defined at:
  4171 ;;		line 323 in file "lcd_hd44780_pic16.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  val             1    wreg     unsigned char 
  4174 ;;  field_length    1   12[COMMON] char 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  val             1    7[BANK0 ] unsigned char 
  4177 ;;  d               2    5[BANK0 ] unsigned int 
  4178 ;;  c               2    3[BANK0 ] unsigned int 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, status,2, status,0, pclath, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4188 ;;      Params:         1       0       0       0       0
  4189 ;;      Locals:         0       5       0       0       0
  4190 ;;      Temps:          0       3       0       0       0
  4191 ;;      Totals:         1       8       0       0       0
  4192 ;;Total ram usage:        9 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    2
  4195 ;; This function calls:
  4196 ;;		_LCDByte
  4197 ;;		___awdiv
  4198 ;;		___awmod
  4199 ;; This function is called by:
  4200 ;;		_showTime
  4201 ;;		_showDate
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           
  4206                           ;psect for function _LCDWriteInt
  4207  00A8                     _LCDWriteInt:	
  4208                           
  4209                           ;incstack = 0
  4210                           ; Regs used in _LCDWriteInt: [wreg+status,2+status,0+pclath+cstack]
  4211                           ;LCDWriteInt@val stored from wreg
  4212  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  4213  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  4214  00AA  00A7               	movwf	LCDWriteInt@val
  4215                           
  4216                           ;lcd_hd44780_pic16.c: 325: unsigned int c,d ;
  4217                           ;lcd_hd44780_pic16.c: 327: c = 0x30 + (val % 10) ;
  4218  00AB  300A               	movlw	10
  4219  00AC  00F0               	movwf	___awmod@divisor
  4220  00AD  3000               	movlw	0
  4221  00AE  00F1               	movwf	___awmod@divisor+1
  4222  00AF  0827               	movf	LCDWriteInt@val,w
  4223  00B0  00A0               	movwf	??_LCDWriteInt
  4224  00B1  01A1               	clrf	??_LCDWriteInt+1
  4225  00B2  0820               	movf	??_LCDWriteInt,w
  4226  00B3  00F2               	movwf	___awmod@dividend
  4227  00B4  0821               	movf	??_LCDWriteInt+1,w
  4228  00B5  00F3               	movwf	___awmod@dividend+1
  4229  00B6  120A  158A  24F3  120A  118A  	fcall	___awmod
  4230  00BB  0870               	movf	?___awmod,w
  4231  00BC  3E30               	addlw	48
  4232  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  4233  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  4234  00BF  00A3               	movwf	LCDWriteInt@c
  4235  00C0  0871               	movf	?___awmod+1,w
  4236  00C1  1803               	skipnc
  4237  00C2  3E01               	addlw	1
  4238  00C3  3E00               	addlw	0
  4239  00C4  00A4               	movwf	LCDWriteInt@c+1
  4240                           
  4241                           ;lcd_hd44780_pic16.c: 328: val=val/10;
  4242  00C5  300A               	movlw	10
  4243  00C6  00F0               	movwf	___awdiv@divisor
  4244  00C7  3000               	movlw	0
  4245  00C8  00F1               	movwf	___awdiv@divisor+1
  4246  00C9  0827               	movf	LCDWriteInt@val,w
  4247  00CA  00A0               	movwf	??_LCDWriteInt
  4248  00CB  01A1               	clrf	??_LCDWriteInt+1
  4249  00CC  0820               	movf	??_LCDWriteInt,w
  4250  00CD  00F2               	movwf	___awdiv@dividend
  4251  00CE  0821               	movf	??_LCDWriteInt+1,w
  4252  00CF  00F3               	movwf	___awdiv@dividend+1
  4253  00D0  120A  158A  2684  120A  118A  	fcall	___awdiv
  4254  00D5  0870               	movf	?___awdiv,w
  4255  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  4256  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  4257  00D8  00A2               	movwf	??_LCDWriteInt+2
  4258  00D9  0822               	movf	??_LCDWriteInt+2,w
  4259  00DA  00A7               	movwf	LCDWriteInt@val
  4260                           
  4261                           ;lcd_hd44780_pic16.c: 329: d = 0x30 + val ;
  4262  00DB  0827               	movf	LCDWriteInt@val,w
  4263  00DC  3E30               	addlw	48
  4264  00DD  00A5               	movwf	LCDWriteInt@d
  4265  00DE  3000               	movlw	0
  4266  00DF  1803               	skipnc
  4267  00E0  3001               	movlw	1
  4268  00E1  00A6               	movwf	LCDWriteInt@d+1
  4269                           
  4270                           ;lcd_hd44780_pic16.c: 331: if (d > 0x39)
  4271  00E2  3000               	movlw	0
  4272  00E3  0226               	subwf	LCDWriteInt@d+1,w
  4273  00E4  303A               	movlw	58
  4274  00E5  1903               	skipnz
  4275  00E6  0225               	subwf	LCDWriteInt@d,w
  4276  00E7  1C03               	skipc
  4277  00E8  28ED               	goto	l1967
  4278                           
  4279                           ;lcd_hd44780_pic16.c: 332: (LCDByte('?',1)) ;
  4280  00E9  01F5               	clrf	LCDByte@isdata
  4281  00EA  0AF5               	incf	LCDByte@isdata,f
  4282  00EB  303F               	movlw	63
  4283  00EC  28F2               	goto	L7
  4284  00ED                     l1967:	
  4285                           
  4286                           ;lcd_hd44780_pic16.c: 333: else
  4287                           ;lcd_hd44780_pic16.c: 334: (LCDByte(d,1));
  4288  00ED  01F5               	clrf	LCDByte@isdata
  4289  00EE  0AF5               	incf	LCDByte@isdata,f
  4290  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  4291  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  4292  00F1  0825               	movf	LCDWriteInt@d,w
  4293  00F2                     L7:	
  4294  00F2  120A  158A  258E  120A  118A  	fcall	_LCDByte
  4295                           
  4296                           ;lcd_hd44780_pic16.c: 335: if (c > 0x39)
  4297  00F7  3000               	movlw	0
  4298  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  4299  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  4300  00FA  0224               	subwf	LCDWriteInt@c+1,w
  4301  00FB  303A               	movlw	58
  4302  00FC  1903               	skipnz
  4303  00FD  0223               	subwf	LCDWriteInt@c,w
  4304  00FE  1C03               	skipc
  4305  00FF  2907               	goto	l1973
  4306                           
  4307                           ;lcd_hd44780_pic16.c: 336: (LCDByte('?',1)) ;
  4308  0100  01F5               	clrf	LCDByte@isdata
  4309  0101  0AF5               	incf	LCDByte@isdata,f
  4310  0102  303F               	movlw	63
  4311  0103  120A  158A  258E   	fcall	_LCDByte
  4312  0106  0008               	return
  4313  0107                     l1973:	
  4314                           
  4315                           ;lcd_hd44780_pic16.c: 337: else
  4316                           ;lcd_hd44780_pic16.c: 338: (LCDByte(c,1));
  4317  0107  01F5               	clrf	LCDByte@isdata
  4318  0108  0AF5               	incf	LCDByte@isdata,f
  4319  0109  1283               	bcf	3,5	;RP0=0, select bank0
  4320  010A  1303               	bcf	3,6	;RP1=0, select bank0
  4321  010B  0823               	movf	LCDWriteInt@c,w
  4322  010C  120A  158A  258E   	fcall	_LCDByte
  4323  010F  0008               	return
  4324  0110                     __end_of_LCDWriteInt:	
  4325                           
  4326                           	psect	text15
  4327  0CF3                     __ptext15:	
  4328 ;; *************** function ___awmod *****************
  4329 ;; Defined at:
  4330 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  divisor         2    0[COMMON] int 
  4333 ;;  dividend        2    2[COMMON] int 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  sign            1    6[COMMON] unsigned char 
  4336 ;;  counter         1    5[COMMON] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  2    0[COMMON] int 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4346 ;;      Params:         4       0       0       0       0
  4347 ;;      Locals:         2       0       0       0       0
  4348 ;;      Temps:          1       0       0       0       0
  4349 ;;      Totals:         7       0       0       0       0
  4350 ;;Total ram usage:        7 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_LCDWriteInt
  4356 ;;		_doMenu
  4357 ;;		_showTime
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           
  4362                           ;psect for function ___awmod
  4363  0CF3                     ___awmod:	
  4364                           
  4365                           ;incstack = 0
  4366                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4367  0CF3  01F6               	clrf	___awmod@sign
  4368  0CF4  1FF3               	btfss	___awmod@dividend+1,7
  4369  0CF5  2CFD               	goto	l1881
  4370  0CF6  09F2               	comf	___awmod@dividend,f
  4371  0CF7  09F3               	comf	___awmod@dividend+1,f
  4372  0CF8  0AF2               	incf	___awmod@dividend,f
  4373  0CF9  1903               	skipnz
  4374  0CFA  0AF3               	incf	___awmod@dividend+1,f
  4375  0CFB  01F6               	clrf	___awmod@sign
  4376  0CFC  0AF6               	incf	___awmod@sign,f
  4377  0CFD                     l1881:	
  4378  0CFD  1FF1               	btfss	___awmod@divisor+1,7
  4379  0CFE  2D04               	goto	l1885
  4380  0CFF  09F0               	comf	___awmod@divisor,f
  4381  0D00  09F1               	comf	___awmod@divisor+1,f
  4382  0D01  0AF0               	incf	___awmod@divisor,f
  4383  0D02  1903               	skipnz
  4384  0D03  0AF1               	incf	___awmod@divisor+1,f
  4385  0D04                     l1885:	
  4386  0D04  0870               	movf	___awmod@divisor,w
  4387  0D05  0471               	iorwf	___awmod@divisor+1,w
  4388  0D06  1903               	btfsc	3,2
  4389  0D07  2D31               	goto	l1903
  4390  0D08  01F5               	clrf	___awmod@counter
  4391  0D09  0AF5               	incf	___awmod@counter,f
  4392  0D0A                     l1893:	
  4393  0D0A  1BF1               	btfsc	___awmod@divisor+1,7
  4394  0D0B  2D18               	goto	l1895
  4395  0D0C  3001               	movlw	1
  4396  0D0D                     u1485:	
  4397  0D0D  1003               	clrc
  4398  0D0E  0DF0               	rlf	___awmod@divisor,f
  4399  0D0F  0DF1               	rlf	___awmod@divisor+1,f
  4400  0D10  3EFF               	addlw	-1
  4401  0D11  1D03               	skipz
  4402  0D12  2D0D               	goto	u1485
  4403  0D13  3001               	movlw	1
  4404  0D14  00F4               	movwf	??___awmod
  4405  0D15  0874               	movf	??___awmod,w
  4406  0D16  07F5               	addwf	___awmod@counter,f
  4407  0D17  2D0A               	goto	l1893
  4408  0D18                     l1895:	
  4409  0D18  0871               	movf	___awmod@divisor+1,w
  4410  0D19  0273               	subwf	___awmod@dividend+1,w
  4411  0D1A  1D03               	skipz
  4412  0D1B  2D1E               	goto	u1505
  4413  0D1C  0870               	movf	___awmod@divisor,w
  4414  0D1D  0272               	subwf	___awmod@dividend,w
  4415  0D1E                     u1505:	
  4416  0D1E  1C03               	skipc
  4417  0D1F  2D26               	goto	l1899
  4418  0D20  0870               	movf	___awmod@divisor,w
  4419  0D21  02F2               	subwf	___awmod@dividend,f
  4420  0D22  0871               	movf	___awmod@divisor+1,w
  4421  0D23  1C03               	skipc
  4422  0D24  03F3               	decf	___awmod@dividend+1,f
  4423  0D25  02F3               	subwf	___awmod@dividend+1,f
  4424  0D26                     l1899:	
  4425  0D26  3001               	movlw	1
  4426  0D27                     u1515:	
  4427  0D27  1003               	clrc
  4428  0D28  0CF1               	rrf	___awmod@divisor+1,f
  4429  0D29  0CF0               	rrf	___awmod@divisor,f
  4430  0D2A  3EFF               	addlw	-1
  4431  0D2B  1D03               	skipz
  4432  0D2C  2D27               	goto	u1515
  4433  0D2D  3001               	movlw	1
  4434  0D2E  02F5               	subwf	___awmod@counter,f
  4435  0D2F  1D03               	btfss	3,2
  4436  0D30  2D18               	goto	l1895
  4437  0D31                     l1903:	
  4438  0D31  0876               	movf	___awmod@sign,w
  4439  0D32  1903               	btfsc	3,2
  4440  0D33  2D39               	goto	l1907
  4441  0D34  09F2               	comf	___awmod@dividend,f
  4442  0D35  09F3               	comf	___awmod@dividend+1,f
  4443  0D36  0AF2               	incf	___awmod@dividend,f
  4444  0D37  1903               	skipnz
  4445  0D38  0AF3               	incf	___awmod@dividend+1,f
  4446  0D39                     l1907:	
  4447  0D39  0873               	movf	___awmod@dividend+1,w
  4448  0D3A  00F1               	movwf	?___awmod+1
  4449  0D3B  0872               	movf	___awmod@dividend,w
  4450  0D3C  00F0               	movwf	?___awmod
  4451  0D3D  0008               	return
  4452  0D3E                     __end_of___awmod:	
  4453                           
  4454                           	psect	text16
  4455  0E84                     __ptext16:	
  4456 ;; *************** function ___awdiv *****************
  4457 ;; Defined at:
  4458 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  divisor         2    0[COMMON] int 
  4461 ;;  dividend        2    2[COMMON] int 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  quotient        2    7[COMMON] int 
  4464 ;;  sign            1    6[COMMON] unsigned char 
  4465 ;;  counter         1    5[COMMON] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  2    0[COMMON] int 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4475 ;;      Params:         4       0       0       0       0
  4476 ;;      Locals:         4       0       0       0       0
  4477 ;;      Temps:          1       0       0       0       0
  4478 ;;      Totals:         9       0       0       0       0
  4479 ;;Total ram usage:        9 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_LCDWriteInt
  4485 ;;		_doMenu
  4486 ;;		_readClock
  4487 ;;		_showTime
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           
  4492                           ;psect for function ___awdiv
  4493  0E84                     ___awdiv:	
  4494                           
  4495                           ;incstack = 0
  4496                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4497  0E84  01F6               	clrf	___awdiv@sign
  4498  0E85  1FF1               	btfss	___awdiv@divisor+1,7
  4499  0E86  2E8E               	goto	l1837
  4500  0E87  09F0               	comf	___awdiv@divisor,f
  4501  0E88  09F1               	comf	___awdiv@divisor+1,f
  4502  0E89  0AF0               	incf	___awdiv@divisor,f
  4503  0E8A  1903               	skipnz
  4504  0E8B  0AF1               	incf	___awdiv@divisor+1,f
  4505  0E8C  01F6               	clrf	___awdiv@sign
  4506  0E8D  0AF6               	incf	___awdiv@sign,f
  4507  0E8E                     l1837:	
  4508  0E8E  1FF3               	btfss	___awdiv@dividend+1,7
  4509  0E8F  2E99               	goto	l1843
  4510  0E90  09F2               	comf	___awdiv@dividend,f
  4511  0E91  09F3               	comf	___awdiv@dividend+1,f
  4512  0E92  0AF2               	incf	___awdiv@dividend,f
  4513  0E93  1903               	skipnz
  4514  0E94  0AF3               	incf	___awdiv@dividend+1,f
  4515  0E95  3001               	movlw	1
  4516  0E96  00F4               	movwf	??___awdiv
  4517  0E97  0874               	movf	??___awdiv,w
  4518  0E98  06F6               	xorwf	___awdiv@sign,f
  4519  0E99                     l1843:	
  4520  0E99  01F7               	clrf	___awdiv@quotient
  4521  0E9A  01F8               	clrf	___awdiv@quotient+1
  4522  0E9B  0870               	movf	___awdiv@divisor,w
  4523  0E9C  0471               	iorwf	___awdiv@divisor+1,w
  4524  0E9D  1903               	btfsc	3,2
  4525  0E9E  2ED0               	goto	l1865
  4526  0E9F  01F5               	clrf	___awdiv@counter
  4527  0EA0  0AF5               	incf	___awdiv@counter,f
  4528  0EA1                     l1853:	
  4529  0EA1  1BF1               	btfsc	___awdiv@divisor+1,7
  4530  0EA2  2EAF               	goto	l1855
  4531  0EA3  3001               	movlw	1
  4532  0EA4                     u1385:	
  4533  0EA4  1003               	clrc
  4534  0EA5  0DF0               	rlf	___awdiv@divisor,f
  4535  0EA6  0DF1               	rlf	___awdiv@divisor+1,f
  4536  0EA7  3EFF               	addlw	-1
  4537  0EA8  1D03               	skipz
  4538  0EA9  2EA4               	goto	u1385
  4539  0EAA  3001               	movlw	1
  4540  0EAB  00F4               	movwf	??___awdiv
  4541  0EAC  0874               	movf	??___awdiv,w
  4542  0EAD  07F5               	addwf	___awdiv@counter,f
  4543  0EAE  2EA1               	goto	l1853
  4544  0EAF                     l1855:	
  4545  0EAF  3001               	movlw	1
  4546  0EB0                     u1405:	
  4547  0EB0  1003               	clrc
  4548  0EB1  0DF7               	rlf	___awdiv@quotient,f
  4549  0EB2  0DF8               	rlf	___awdiv@quotient+1,f
  4550  0EB3  3EFF               	addlw	-1
  4551  0EB4  1D03               	skipz
  4552  0EB5  2EB0               	goto	u1405
  4553  0EB6  0871               	movf	___awdiv@divisor+1,w
  4554  0EB7  0273               	subwf	___awdiv@dividend+1,w
  4555  0EB8  1D03               	skipz
  4556  0EB9  2EBC               	goto	u1415
  4557  0EBA  0870               	movf	___awdiv@divisor,w
  4558  0EBB  0272               	subwf	___awdiv@dividend,w
  4559  0EBC                     u1415:	
  4560  0EBC  1C03               	skipc
  4561  0EBD  2EC5               	goto	l1861
  4562  0EBE  0870               	movf	___awdiv@divisor,w
  4563  0EBF  02F2               	subwf	___awdiv@dividend,f
  4564  0EC0  0871               	movf	___awdiv@divisor+1,w
  4565  0EC1  1C03               	skipc
  4566  0EC2  03F3               	decf	___awdiv@dividend+1,f
  4567  0EC3  02F3               	subwf	___awdiv@dividend+1,f
  4568  0EC4  1477               	bsf	___awdiv@quotient,0
  4569  0EC5                     l1861:	
  4570  0EC5  3001               	movlw	1
  4571  0EC6                     u1425:	
  4572  0EC6  1003               	clrc
  4573  0EC7  0CF1               	rrf	___awdiv@divisor+1,f
  4574  0EC8  0CF0               	rrf	___awdiv@divisor,f
  4575  0EC9  3EFF               	addlw	-1
  4576  0ECA  1D03               	skipz
  4577  0ECB  2EC6               	goto	u1425
  4578  0ECC  3001               	movlw	1
  4579  0ECD  02F5               	subwf	___awdiv@counter,f
  4580  0ECE  1D03               	btfss	3,2
  4581  0ECF  2EAF               	goto	l1855
  4582  0ED0                     l1865:	
  4583  0ED0  0876               	movf	___awdiv@sign,w
  4584  0ED1  1903               	btfsc	3,2
  4585  0ED2  2ED8               	goto	l1869
  4586  0ED3  09F7               	comf	___awdiv@quotient,f
  4587  0ED4  09F8               	comf	___awdiv@quotient+1,f
  4588  0ED5  0AF7               	incf	___awdiv@quotient,f
  4589  0ED6  1903               	skipnz
  4590  0ED7  0AF8               	incf	___awdiv@quotient+1,f
  4591  0ED8                     l1869:	
  4592  0ED8  0878               	movf	___awdiv@quotient+1,w
  4593  0ED9  00F1               	movwf	?___awdiv+1
  4594  0EDA  0877               	movf	___awdiv@quotient,w
  4595  0EDB  00F0               	movwf	?___awdiv
  4596  0EDC  0008               	return
  4597  0EDD                     __end_of___awdiv:	
  4598                           
  4599                           	psect	text17
  4600  0C19                     __ptext17:	
  4601 ;; *************** function _readInputs *****************
  4602 ;; Defined at:
  4603 ;;		line 337 in file "LCDTime.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  pinstate        1    3[COMMON] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      void 
  4610 ;; Registers used:
  4611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4617 ;;      Params:         0       0       0       0       0
  4618 ;;      Locals:         1       0       0       0       0
  4619 ;;      Temps:          3       0       0       0       0
  4620 ;;      Totals:         4       0       0       0       0
  4621 ;;Total ram usage:        4 bytes
  4622 ;; Hardware stack levels used:    2
  4623 ;; This function calls:
  4624 ;;		Nothing
  4625 ;; This function is called by:
  4626 ;;		_main
  4627 ;;		_doMenu
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           
  4632                           ;psect for function _readInputs
  4633  0C19                     _readInputs:	
  4634                           
  4635                           ;LCDTime.c: 340: bButton = 0 ;
  4636                           
  4637                           ;incstack = 0
  4638                           ; Regs used in _readInputs: [wreg-fsr0h+status,2+status,0+pclath]
  4639  0C19  1283               	bcf	3,5	;RP0=0, select bank0
  4640  0C1A  1303               	bcf	3,6	;RP1=0, select bank0
  4641  0C1B  01D6               	clrf	_bButton
  4642                           
  4643                           ;LCDTime.c: 342: if (RB4 == 1)
  4644  0C1C  1E06               	btfss	6,4	;volatile
  4645  0C1D  2C2A               	goto	l2081
  4646                           
  4647                           ;LCDTime.c: 343: {
  4648                           ;LCDTime.c: 344: _delay((unsigned long)((15)*(4000000/4000000.0))) ;
  4649  0C1E  3004               	movlw	4
  4650  0C1F  00F0               	movwf	??_readInputs
  4651  0C20                     u2387:	
  4652  0C20  0BF0               	decfsz	??_readInputs,f
  4653  0C21  2C20               	goto	u2387
  4654  0C22  2C23               	nop2	;nop
  4655                           
  4656                           ;LCDTime.c: 345: if (RB4 == 1)
  4657  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  4658  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  4659  0C25  1E06               	btfss	6,4	;volatile
  4660  0C26  2C2A               	goto	l2081
  4661                           
  4662                           ;LCDTime.c: 346: {
  4663                           ;LCDTime.c: 347: bButton = 1 ;
  4664  0C27  01D6               	clrf	_bButton
  4665  0C28  0AD6               	incf	_bButton,f
  4666                           
  4667                           ;LCDTime.c: 348: return ;
  4668  0C29  0008               	return
  4669  0C2A                     l2081:	
  4670                           
  4671                           ;LCDTime.c: 349: }
  4672                           ;LCDTime.c: 350: }
  4673                           ;LCDTime.c: 352: unsigned char pinstate = (RB1 << 1) | RB2 ;
  4674  0C2A  3000               	movlw	0
  4675  0C2B  1886               	btfsc	6,1	;volatile
  4676  0C2C  3002               	movlw	2
  4677  0C2D  1906               	btfsc	6,2	;volatile
  4678  0C2E  3801               	iorlw	1
  4679  0C2F  00F0               	movwf	??_readInputs
  4680  0C30  0870               	movf	??_readInputs,w
  4681  0C31  00F3               	movwf	readInputs@pinstate
  4682                           
  4683                           ;LCDTime.c: 354: state = ttable[state & 0xf][pinstate];
  4684  0C32  0858               	movf	_state,w
  4685  0C33  390F               	andlw	15
  4686  0C34  00F0               	movwf	??_readInputs
  4687  0C35  3002               	movlw	2
  4688  0C36                     u1645:	
  4689  0C36  1003               	clrc
  4690  0C37  0DF0               	rlf	??_readInputs,f
  4691  0C38  3EFF               	addlw	-1
  4692  0C39  1D03               	skipz
  4693  0C3A  2C36               	goto	u1645
  4694  0C3B  3001               	movlw	(low ((_ttable-__stringbase)| (0+32768)))& (0+255)
  4695  0C3C  0770               	addwf	??_readInputs,w
  4696  0C3D  00F1               	movwf	??_readInputs+1
  4697  0C3E  0873               	movf	readInputs@pinstate,w
  4698  0C3F  0771               	addwf	??_readInputs+1,w
  4699  0C40  0084               	movwf	4
  4700  0C41  120A  118A  2003   	fcall	stringdir
  4701  0C44  00F2               	movwf	??_readInputs+2
  4702  0C45  0872               	movf	??_readInputs+2,w
  4703  0C46  00D8               	movwf	_state
  4704  0C47  0008               	return
  4705  0C48                     __end_of_readInputs:	
  4706                           
  4707                           	psect	text18
  4708  0B4C                     __ptext18:	
  4709 ;; *************** function _LCDGotoXY *****************
  4710 ;; Defined at:
  4711 ;;		line 345 in file "lcd_hd44780_pic16.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  x               1    wreg     unsigned char 
  4714 ;;  y               1   12[COMMON] unsigned char 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  x               1    0[BANK0 ] unsigned char 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      void 
  4719 ;; Registers used:
  4720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4726 ;;      Params:         1       0       0       0       0
  4727 ;;      Locals:         0       1       0       0       0
  4728 ;;      Temps:          1       0       0       0       0
  4729 ;;      Totals:         2       1       0       0       0
  4730 ;;Total ram usage:        3 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    2
  4733 ;; This function calls:
  4734 ;;		_LCDByte
  4735 ;; This function is called by:
  4736 ;;		_doMenu
  4737 ;;		_showClock
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           
  4742                           ;psect for function _LCDGotoXY
  4743  0B4C                     _LCDGotoXY:	
  4744                           
  4745                           ;incstack = 0
  4746                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4747                           ;LCDGotoXY@x stored from wreg
  4748  0B4C  1283               	bcf	3,5	;RP0=0, select bank0
  4749  0B4D  1303               	bcf	3,6	;RP1=0, select bank0
  4750  0B4E  00A0               	movwf	LCDGotoXY@x
  4751                           
  4752                           ;lcd_hd44780_pic16.c: 347: if(x>=20) return;
  4753  0B4F  3014               	movlw	20
  4754  0B50  0220               	subwf	LCDGotoXY@x,w
  4755  0B51  1803               	btfsc	3,0
  4756  0B52  0008               	return
  4757  0B53  2B5D               	goto	l2067
  4758  0B54                     l134:	
  4759                           ;lcd_hd44780_pic16.c: 355: case 1:
  4760                           
  4761                           ;lcd_hd44780_pic16.c: 354: break;
  4762                           
  4763                           ;lcd_hd44780_pic16.c: 352: {
  4764                           ;lcd_hd44780_pic16.c: 353: case 0:
  4765                           
  4766                           ;lcd_hd44780_pic16.c: 351: switch(y)
  4767                           
  4768                           
  4769                           ;lcd_hd44780_pic16.c: 356: x|=0b01000000;
  4770  0B54  1720               	bsf	LCDGotoXY@x,6
  4771                           
  4772                           ;lcd_hd44780_pic16.c: 357: break;
  4773  0B55  2B6B               	goto	l133
  4774  0B56                     l2061:	
  4775                           ;lcd_hd44780_pic16.c: 358: case 2:
  4776                           
  4777                           
  4778                           ;lcd_hd44780_pic16.c: 359: x+=0x14;
  4779  0B56  3014               	movlw	20
  4780  0B57  2B59               	goto	L8
  4781  0B58                     l2063:	
  4782                           ;lcd_hd44780_pic16.c: 361: case 3:
  4783                           
  4784                           ;lcd_hd44780_pic16.c: 360: break;
  4785                           
  4786                           
  4787                           ;lcd_hd44780_pic16.c: 362: x+=0x54;
  4788  0B58  3054               	movlw	84
  4789  0B59                     L8:	
  4790  0B59  00FD               	movwf	??_LCDGotoXY
  4791  0B5A  087D               	movf	??_LCDGotoXY,w
  4792  0B5B  07A0               	addwf	LCDGotoXY@x,f
  4793                           
  4794                           ;lcd_hd44780_pic16.c: 364: }
  4795                           
  4796                           ;lcd_hd44780_pic16.c: 363: break;
  4797  0B5C  2B6B               	goto	l133
  4798  0B5D                     l2067:	
  4799  0B5D  087C               	movf	LCDGotoXY@y,w
  4800                           
  4801                           ; Switch size 1, requested type "space"
  4802                           ; Number of cases is 4, Range of values is 0 to 3
  4803                           ; switch strategies available:
  4804                           ; Name         Instructions Cycles
  4805                           ; simple_byte           13     7 (average)
  4806                           ; direct_byte           20     8 (fixed)
  4807                           ; jumptable            260     6 (fixed)
  4808                           ;	Chosen strategy is simple_byte
  4809  0B5E  3A00               	xorlw	0	; case 0
  4810  0B5F  1903               	skipnz
  4811  0B60  2B6B               	goto	l133
  4812  0B61  3A01               	xorlw	1	; case 1
  4813  0B62  1903               	skipnz
  4814  0B63  2B54               	goto	l134
  4815  0B64  3A03               	xorlw	3	; case 2
  4816  0B65  1903               	skipnz
  4817  0B66  2B56               	goto	l2061
  4818  0B67  3A01               	xorlw	1	; case 3
  4819  0B68  1903               	skipnz
  4820  0B69  2B58               	goto	l2063
  4821  0B6A  2B6B               	goto	l133
  4822  0B6B                     l133:	
  4823                           
  4824                           ;lcd_hd44780_pic16.c: 386: x|=0b10000000;
  4825  0B6B  17A0               	bsf	LCDGotoXY@x,7
  4826                           
  4827                           ;lcd_hd44780_pic16.c: 387: (LCDByte(x,0));
  4828  0B6C  01F5               	clrf	LCDByte@isdata
  4829  0B6D  0820               	movf	LCDGotoXY@x,w
  4830  0B6E  120A  158A  258E   	fcall	_LCDByte
  4831  0B71  0008               	return
  4832  0B72                     __end_of_LCDGotoXY:	
  4833                           
  4834                           	psect	text19
  4835  0B99                     __ptext19:	
  4836 ;; *************** function _DS1307_SetTime *****************
  4837 ;; Defined at:
  4838 ;;		line 43 in file "DS1307.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  hh              1    wreg     unsigned char 
  4841 ;;  mm              1    5[COMMON] unsigned char 
  4842 ;;  ss              1    6[COMMON] unsigned char 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  hh              1    7[COMMON] unsigned char 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0, pclath, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4854 ;;      Params:         2       0       0       0       0
  4855 ;;      Locals:         1       0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0
  4857 ;;      Totals:         3       0       0       0       0
  4858 ;;Total ram usage:        3 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    3
  4861 ;; This function calls:
  4862 ;;		_DS1307_Write
  4863 ;;		_I2C_Start
  4864 ;;		_I2C_Stop
  4865 ;; This function is called by:
  4866 ;;		_doMenu
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           
  4871                           ;psect for function _DS1307_SetTime
  4872  0B99                     _DS1307_SetTime:	
  4873                           
  4874                           ;incstack = 0
  4875                           ; Regs used in _DS1307_SetTime: [wreg+status,2+status,0+pclath+cstack]
  4876                           ;DS1307_SetTime@hh stored from wreg
  4877  0B99  00F7               	movwf	DS1307_SetTime@hh
  4878                           
  4879                           ;DS1307.c: 45: I2C_Start();
  4880  0B9A  120A  158A  22C2  120A  158A  	fcall	_I2C_Start
  4881                           
  4882                           ;DS1307.c: 46: DS1307_Write(0xD0);
  4883  0B9F  30D0               	movlw	208
  4884  0BA0  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  4885                           
  4886                           ;DS1307.c: 47: DS1307_Write(0x00);
  4887  0BA5  3000               	movlw	0
  4888  0BA6  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  4889                           
  4890                           ;DS1307.c: 48: DS1307_Write(ss);
  4891  0BAB  0876               	movf	DS1307_SetTime@ss,w
  4892  0BAC  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  4893                           
  4894                           ;DS1307.c: 49: DS1307_Write(mm);
  4895  0BB1  0875               	movf	DS1307_SetTime@mm,w
  4896  0BB2  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  4897                           
  4898                           ;DS1307.c: 50: DS1307_Write(hh);
  4899  0BB7  0877               	movf	DS1307_SetTime@hh,w
  4900  0BB8  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  4901                           
  4902                           ;DS1307.c: 51: I2C_Stop();
  4903  0BBD  120A  158A  22B2   	fcall	_I2C_Stop
  4904  0BC0  0008               	return
  4905  0BC1                     __end_of_DS1307_SetTime:	
  4906                           
  4907                           	psect	text20
  4908  0BEB                     __ptext20:	
  4909 ;; *************** function _DS1307_SetDate *****************
  4910 ;; Defined at:
  4911 ;;		line 54 in file "DS1307.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  nn              1    wreg     unsigned char 
  4914 ;;  dd              1    5[COMMON] unsigned char 
  4915 ;;  mm              1    6[COMMON] unsigned char 
  4916 ;;  yy              1    7[COMMON] unsigned char 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;  nn              1    8[COMMON] unsigned char 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0, pclath, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4928 ;;      Params:         3       0       0       0       0
  4929 ;;      Locals:         1       0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0
  4931 ;;      Totals:         4       0       0       0       0
  4932 ;;Total ram usage:        4 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    3
  4935 ;; This function calls:
  4936 ;;		_DS1307_Write
  4937 ;;		_I2C_Start
  4938 ;;		_I2C_Stop
  4939 ;; This function is called by:
  4940 ;;		_doMenu
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           
  4945                           ;psect for function _DS1307_SetDate
  4946  0BEB                     _DS1307_SetDate:	
  4947                           
  4948                           ;incstack = 0
  4949                           ; Regs used in _DS1307_SetDate: [wreg+status,2+status,0+pclath+cstack]
  4950                           ;DS1307_SetDate@nn stored from wreg
  4951  0BEB  00F8               	movwf	DS1307_SetDate@nn
  4952                           
  4953                           ;DS1307.c: 56: I2C_Start();
  4954  0BEC  120A  158A  22C2  120A  158A  	fcall	_I2C_Start
  4955                           
  4956                           ;DS1307.c: 57: DS1307_Write(0xD0);
  4957  0BF1  30D0               	movlw	208
  4958  0BF2  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  4959                           
  4960                           ;DS1307.c: 58: DS1307_Write(0x03);
  4961  0BF7  3003               	movlw	3
  4962  0BF8  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  4963                           
  4964                           ;DS1307.c: 59: DS1307_Write(nn);
  4965  0BFD  0878               	movf	DS1307_SetDate@nn,w
  4966  0BFE  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  4967                           
  4968                           ;DS1307.c: 60: DS1307_Write(dd);
  4969  0C03  0875               	movf	DS1307_SetDate@dd,w
  4970  0C04  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  4971                           
  4972                           ;DS1307.c: 61: DS1307_Write(mm);
  4973  0C09  0876               	movf	DS1307_SetDate@mm,w
  4974  0C0A  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  4975                           
  4976                           ;DS1307.c: 62: DS1307_Write(yy);
  4977  0C0F  0877               	movf	DS1307_SetDate@yy,w
  4978  0C10  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  4979                           
  4980                           ;DS1307.c: 63: I2C_Stop();
  4981  0C15  120A  158A  22B2   	fcall	_I2C_Stop
  4982  0C18  0008               	return
  4983  0C19                     __end_of_DS1307_SetDate:	
  4984                           
  4985                           	psect	text21
  4986  0C7A                     __ptext21:	
  4987 ;; *************** function _LCDInit *****************
  4988 ;; Defined at:
  4989 ;;		line 167 in file "lcd_hd44780_pic16.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  style           1    wreg     unsigned char 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  style           1    0[BANK0 ] unsigned char 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1    wreg      void 
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0, pclath, cstack
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5003 ;;      Params:         0       0       0       0       0
  5004 ;;      Locals:         0       1       0       0       0
  5005 ;;      Temps:          2       0       0       0       0
  5006 ;;      Totals:         2       1       0       0       0
  5007 ;;Total ram usage:        3 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    2
  5010 ;; This function calls:
  5011 ;;		_LCDBusyLoop
  5012 ;;		_LCDByte
  5013 ;; This function is called by:
  5014 ;;		_main
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           
  5019                           ;psect for function _LCDInit
  5020  0C7A                     _LCDInit:	
  5021                           
  5022                           ;incstack = 0
  5023                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  5024                           ;LCDInit@style stored from wreg
  5025  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5026  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5027  0C7C  00A0               	movwf	LCDInit@style
  5028                           
  5029                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((30)*(4000000/4000.0)));
  5030  0C7D  3027               	movlw	39
  5031  0C7E  00FD               	movwf	??_LCDInit+1
  5032  0C7F  30F5               	movlw	245
  5033  0C80  00FC               	movwf	??_LCDInit
  5034  0C81                     u2397:	
  5035  0C81  0BFC               	decfsz	??_LCDInit,f
  5036  0C82  2C81               	goto	u2397
  5037  0C83  0BFD               	decfsz	??_LCDInit+1,f
  5038  0C84  2C81               	goto	u2397
  5039                           
  5040                           ;lcd_hd44780_pic16.c: 186: TRISD&=(~(0x0F<<4));
  5041  0C85  300F               	movlw	15
  5042  0C86  00FC               	movwf	??_LCDInit
  5043  0C87  087C               	movf	??_LCDInit,w
  5044  0C88  1683               	bsf	3,5	;RP0=1, select bank1
  5045  0C89  1303               	bcf	3,6	;RP1=0, select bank1
  5046  0C8A  0588               	andwf	8,f	;volatile
  5047                           
  5048                           ;lcd_hd44780_pic16.c: 188: TRISBbits.TRISB5=0;
  5049  0C8B  1286               	bcf	6,5	;volatile
  5050                           
  5051                           ;lcd_hd44780_pic16.c: 189: TRISBbits.TRISB7=0;
  5052  0C8C  1386               	bcf	6,7	;volatile
  5053                           
  5054                           ;lcd_hd44780_pic16.c: 190: TRISBbits.TRISB6=0;
  5055  0C8D  1306               	bcf	6,6	;volatile
  5056                           
  5057                           ;lcd_hd44780_pic16.c: 192: PORTD&=(~(0x0F<<4));
  5058  0C8E  300F               	movlw	15
  5059  0C8F  00FC               	movwf	??_LCDInit
  5060  0C90  087C               	movf	??_LCDInit,w
  5061  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  5062  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  5063  0C93  0588               	andwf	8,f	;volatile
  5064                           
  5065                           ;lcd_hd44780_pic16.c: 194: (RB5=0);
  5066  0C94  1286               	bcf	6,5	;volatile
  5067                           
  5068                           ;lcd_hd44780_pic16.c: 195: (RB6=0);
  5069  0C95  1306               	bcf	6,6	;volatile
  5070                           
  5071                           ;lcd_hd44780_pic16.c: 196: (RB7=0);
  5072  0C96  1386               	bcf	6,7	;volatile
  5073                           
  5074                           ;lcd_hd44780_pic16.c: 201: (RB5=1);
  5075                           
  5076                           ;lcd_hd44780_pic16.c: 199: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  5077  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  5078  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  5079  0C99  1686               	bsf	6,5	;volatile
  5080                           
  5081                           ;lcd_hd44780_pic16.c: 202: PORTD|=((0b00000010)<<4);
  5082  0C9A  1688               	bsf	8,5	;volatile
  5083                           
  5084                           ;lcd_hd44780_pic16.c: 203: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5085  0C9B  0000               	nop
  5086                           
  5087                           ;lcd_hd44780_pic16.c: 204: (RB5=0);
  5088  0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  5089  0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  5090  0C9E  1286               	bcf	6,5	;volatile
  5091                           
  5092                           ;lcd_hd44780_pic16.c: 205: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5093  0C9F  0000               	nop
  5094                           
  5095                           ;lcd_hd44780_pic16.c: 208: LCDBusyLoop();
  5096  0CA0  120A  158A  26DD  120A  158A  	fcall	_LCDBusyLoop
  5097                           
  5098                           ;lcd_hd44780_pic16.c: 213: (LCDByte(0b00101000,0));
  5099  0CA5  01F5               	clrf	LCDByte@isdata
  5100  0CA6  3028               	movlw	40
  5101  0CA7  120A  158A  258E  120A  158A  	fcall	_LCDByte
  5102                           
  5103                           ;lcd_hd44780_pic16.c: 214: (LCDByte(0b00001100|style,0));
  5104  0CAC  01F5               	clrf	LCDByte@isdata
  5105  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  5106  0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  5107  0CAF  0820               	movf	LCDInit@style,w
  5108  0CB0  380C               	iorlw	12
  5109  0CB1  120A  158A  258E   	fcall	_LCDByte
  5110  0CB4  0008               	return
  5111  0CB5                     __end_of_LCDInit:	
  5112                           
  5113                           	psect	text22
  5114  0D8E                     __ptext22:	
  5115 ;; *************** function _LCDByte *****************
  5116 ;; Defined at:
  5117 ;;		line 54 in file "lcd_hd44780_pic16.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  c               1    wreg     unsigned char 
  5120 ;;  isdata          1    5[COMMON] unsigned char 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  c               1   10[COMMON] unsigned char 
  5123 ;;  temp            1   11[COMMON] unsigned char 
  5124 ;;  ln              1    9[COMMON] unsigned char 
  5125 ;;  hn              1    8[COMMON] unsigned char 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  1    wreg      void 
  5128 ;; Registers used:
  5129 ;;		wreg, status,2, status,0, pclath, cstack
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5135 ;;      Params:         1       0       0       0       0
  5136 ;;      Locals:         4       0       0       0       0
  5137 ;;      Temps:          2       0       0       0       0
  5138 ;;      Totals:         7       0       0       0       0
  5139 ;;Total ram usage:        7 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:    1
  5142 ;; This function calls:
  5143 ;;		_LCDBusyLoop
  5144 ;; This function is called by:
  5145 ;;		_LCDInit
  5146 ;;		_LCDWriteString
  5147 ;;		_LCDWriteInt
  5148 ;;		_LCDGotoXY
  5149 ;;		_main
  5150 ;;		_doMenu
  5151 ;;		_showTime
  5152 ;;		_showDate
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           
  5157                           ;psect for function _LCDByte
  5158  0D8E                     _LCDByte:	
  5159                           
  5160                           ;incstack = 0
  5161                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  5162                           ;LCDByte@c stored from wreg
  5163  0D8E  00FA               	movwf	LCDByte@c
  5164                           
  5165                           ;lcd_hd44780_pic16.c: 63: uint8_t hn,ln;
  5166                           ;lcd_hd44780_pic16.c: 64: uint8_t temp;
  5167                           ;lcd_hd44780_pic16.c: 66: hn=c>>4;
  5168  0D8F  087A               	movf	LCDByte@c,w
  5169  0D90  00F6               	movwf	??_LCDByte
  5170  0D91  3004               	movlw	4
  5171  0D92                     u1285:	
  5172  0D92  1003               	clrc
  5173  0D93  0CF6               	rrf	??_LCDByte,f
  5174  0D94  3EFF               	addlw	-1
  5175  0D95  1D03               	skipz
  5176  0D96  2D92               	goto	u1285
  5177  0D97  0876               	movf	??_LCDByte,w
  5178  0D98  00F7               	movwf	??_LCDByte+1
  5179  0D99  0877               	movf	??_LCDByte+1,w
  5180  0D9A  00F8               	movwf	LCDByte@hn
  5181                           
  5182                           ;lcd_hd44780_pic16.c: 67: ln=(c & 0x0F);
  5183  0D9B  087A               	movf	LCDByte@c,w
  5184  0D9C  390F               	andlw	15
  5185  0D9D  00F6               	movwf	??_LCDByte
  5186  0D9E  0876               	movf	??_LCDByte,w
  5187  0D9F  00F9               	movwf	LCDByte@ln
  5188                           
  5189                           ;lcd_hd44780_pic16.c: 69: if(isdata==0)
  5190  0DA0  0875               	movf	LCDByte@isdata,w
  5191  0DA1  1D03               	btfss	3,2
  5192  0DA2  2DA7               	goto	l99
  5193                           
  5194                           ;lcd_hd44780_pic16.c: 70: (RB7=0);
  5195  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  5196  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  5197  0DA5  1386               	bcf	6,7	;volatile
  5198  0DA6  2DAA               	goto	l100
  5199  0DA7                     l99:	
  5200                           
  5201                           ;lcd_hd44780_pic16.c: 71: else
  5202                           ;lcd_hd44780_pic16.c: 72: (RB7=1);
  5203  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  5204  0DA8  1303               	bcf	3,6	;RP1=0, select bank0
  5205  0DA9  1786               	bsf	6,7	;volatile
  5206  0DAA                     l100:	
  5207                           
  5208                           ;lcd_hd44780_pic16.c: 74: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  5209                           ;lcd_hd44780_pic16.c: 76: (RB5=1);
  5210  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  5211  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  5212  0DAC  1686               	bsf	6,5	;volatile
  5213                           
  5214                           ;lcd_hd44780_pic16.c: 80: temp=(PORTD & (~(0X0F<<4)))|((hn<<4));
  5215  0DAD  0878               	movf	LCDByte@hn,w
  5216  0DAE  00F6               	movwf	??_LCDByte
  5217  0DAF  3004               	movlw	4
  5218  0DB0                     u1305:	
  5219  0DB0  1003               	clrc
  5220  0DB1  0DF6               	rlf	??_LCDByte,f
  5221  0DB2  3EFF               	addlw	-1
  5222  0DB3  1D03               	skipz
  5223  0DB4  2DB0               	goto	u1305
  5224  0DB5  0808               	movf	8,w	;volatile
  5225  0DB6  390F               	andlw	15
  5226  0DB7  0476               	iorwf	??_LCDByte,w
  5227  0DB8  00F7               	movwf	??_LCDByte+1
  5228  0DB9  0877               	movf	??_LCDByte+1,w
  5229  0DBA  00FB               	movwf	LCDByte@temp
  5230                           
  5231                           ;lcd_hd44780_pic16.c: 81: PORTD=temp;
  5232  0DBB  087B               	movf	LCDByte@temp,w
  5233  0DBC  0088               	movwf	8	;volatile
  5234                           
  5235                           ;lcd_hd44780_pic16.c: 83: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5236  0DBD  0000               	nop
  5237                           
  5238                           ;lcd_hd44780_pic16.c: 87: (RB5=0);
  5239  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  5240  0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  5241  0DC0  1286               	bcf	6,5	;volatile
  5242                           
  5243                           ;lcd_hd44780_pic16.c: 89: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5244  0DC1  0000               	nop
  5245                           
  5246                           ;lcd_hd44780_pic16.c: 92: (RB5=1);
  5247  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  5248  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  5249  0DC4  1686               	bsf	6,5	;volatile
  5250                           
  5251                           ;lcd_hd44780_pic16.c: 94: temp=(PORTD & (~(0X0F<<4)))|((ln<<4));
  5252  0DC5  0879               	movf	LCDByte@ln,w
  5253  0DC6  00F6               	movwf	??_LCDByte
  5254  0DC7  3004               	movlw	4
  5255  0DC8                     u1315:	
  5256  0DC8  1003               	clrc
  5257  0DC9  0DF6               	rlf	??_LCDByte,f
  5258  0DCA  3EFF               	addlw	-1
  5259  0DCB  1D03               	skipz
  5260  0DCC  2DC8               	goto	u1315
  5261  0DCD  0808               	movf	8,w	;volatile
  5262  0DCE  390F               	andlw	15
  5263  0DCF  0476               	iorwf	??_LCDByte,w
  5264  0DD0  00F7               	movwf	??_LCDByte+1
  5265  0DD1  0877               	movf	??_LCDByte+1,w
  5266  0DD2  00FB               	movwf	LCDByte@temp
  5267                           
  5268                           ;lcd_hd44780_pic16.c: 96: PORTD=temp;
  5269  0DD3  087B               	movf	LCDByte@temp,w
  5270  0DD4  0088               	movwf	8	;volatile
  5271                           
  5272                           ;lcd_hd44780_pic16.c: 98: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5273  0DD5  0000               	nop
  5274                           
  5275                           ;lcd_hd44780_pic16.c: 102: (RB5=0);
  5276  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  5277  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  5278  0DD8  1286               	bcf	6,5	;volatile
  5279                           
  5280                           ;lcd_hd44780_pic16.c: 104: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5281  0DD9  0000               	nop
  5282                           
  5283                           ;lcd_hd44780_pic16.c: 106: LCDBusyLoop();
  5284  0DDA  120A  158A  26DD   	fcall	_LCDBusyLoop
  5285  0DDD  0008               	return
  5286  0DDE                     __end_of_LCDByte:	
  5287                           
  5288                           	psect	text23
  5289  0EDD                     __ptext23:	
  5290 ;; *************** function _LCDBusyLoop *****************
  5291 ;; Defined at:
  5292 ;;		line 109 in file "lcd_hd44780_pic16.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;		None
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  status          1    4[COMMON] unsigned char 
  5297 ;;  temp            1    3[COMMON] unsigned char 
  5298 ;;  busy            1    2[COMMON] unsigned char 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		wreg, status,2, status,0
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5308 ;;      Params:         0       0       0       0       0
  5309 ;;      Locals:         3       0       0       0       0
  5310 ;;      Temps:          2       0       0       0       0
  5311 ;;      Totals:         5       0       0       0       0
  5312 ;;Total ram usage:        5 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_LCDByte
  5318 ;;		_LCDInit
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           
  5323                           ;psect for function _LCDBusyLoop
  5324  0EDD                     _LCDBusyLoop:	
  5325                           
  5326                           ;lcd_hd44780_pic16.c: 113: uint8_t busy,status=0x00,temp;
  5327                           
  5328                           ;incstack = 0
  5329                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  5330  0EDD  01F4               	clrf	LCDBusyLoop@status
  5331                           
  5332                           ;lcd_hd44780_pic16.c: 116: TRISD|=(0x0f<<4);
  5333  0EDE  30F0               	movlw	240
  5334  0EDF  00F0               	movwf	??_LCDBusyLoop
  5335  0EE0  0870               	movf	??_LCDBusyLoop,w
  5336  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  5337  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  5338  0EE3  0488               	iorwf	8,f	;volatile
  5339                           
  5340                           ;lcd_hd44780_pic16.c: 119: (RB6=1);
  5341  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  5342  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  5343  0EE6  1706               	bsf	6,6	;volatile
  5344                           
  5345                           ;lcd_hd44780_pic16.c: 120: (RB7=0);
  5346  0EE7  1386               	bcf	6,7	;volatile
  5347  0EE8                     l1697:	
  5348                           ;lcd_hd44780_pic16.c: 127: do
  5349                           
  5350                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  5351                           
  5352                           
  5353                           ;lcd_hd44780_pic16.c: 128: {
  5354                           ;lcd_hd44780_pic16.c: 130: (RB5=1);
  5355  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  5356  0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  5357  0EEA  1686               	bsf	6,5	;volatile
  5358                           
  5359                           ;lcd_hd44780_pic16.c: 135: status=(PORTD>>4);
  5360                           
  5361                           ;lcd_hd44780_pic16.c: 133: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  5362  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  5363  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  5364  0EED  0808               	movf	8,w	;volatile
  5365  0EEE  00F0               	movwf	??_LCDBusyLoop
  5366  0EEF  3004               	movlw	4
  5367  0EF0                     u1175:	
  5368  0EF0  1003               	clrc
  5369  0EF1  0CF0               	rrf	??_LCDBusyLoop,f
  5370  0EF2  3EFF               	addlw	-1
  5371  0EF3  1D03               	skipz
  5372  0EF4  2EF0               	goto	u1175
  5373  0EF5  0870               	movf	??_LCDBusyLoop,w
  5374  0EF6  00F1               	movwf	??_LCDBusyLoop+1
  5375  0EF7  0871               	movf	??_LCDBusyLoop+1,w
  5376  0EF8  00F4               	movwf	LCDBusyLoop@status
  5377                           
  5378                           ;lcd_hd44780_pic16.c: 136: status=status<<4;
  5379  0EF9  0874               	movf	LCDBusyLoop@status,w
  5380  0EFA  00F0               	movwf	??_LCDBusyLoop
  5381  0EFB  3003               	movlw	3
  5382  0EFC                     u1185:	
  5383  0EFC  1003               	clrc
  5384  0EFD  0DF0               	rlf	??_LCDBusyLoop,f
  5385  0EFE  3EFF               	addlw	-1
  5386  0EFF  1D03               	skipz
  5387  0F00  2EFC               	goto	u1185
  5388  0F01  1003               	clrc
  5389  0F02  0D70               	rlf	??_LCDBusyLoop,w
  5390  0F03  00F1               	movwf	??_LCDBusyLoop+1
  5391  0F04  0871               	movf	??_LCDBusyLoop+1,w
  5392  0F05  00F4               	movwf	LCDBusyLoop@status
  5393                           
  5394                           ;lcd_hd44780_pic16.c: 141: (RB5=0);
  5395                           
  5396                           ;lcd_hd44780_pic16.c: 138: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  5397  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  5398  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  5399  0F08  1286               	bcf	6,5	;volatile
  5400                           
  5401                           ;lcd_hd44780_pic16.c: 142: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5402  0F09  0000               	nop
  5403                           
  5404                           ;lcd_hd44780_pic16.c: 144: (RB5=1);
  5405  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  5406  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  5407  0F0C  1686               	bsf	6,5	;volatile
  5408                           
  5409                           ;lcd_hd44780_pic16.c: 147: temp=(PORTD>>4);
  5410                           
  5411                           ;lcd_hd44780_pic16.c: 145: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  5412  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  5413  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  5414  0F0F  0808               	movf	8,w	;volatile
  5415  0F10  00F0               	movwf	??_LCDBusyLoop
  5416  0F11  3004               	movlw	4
  5417  0F12                     u1195:	
  5418  0F12  1003               	clrc
  5419  0F13  0CF0               	rrf	??_LCDBusyLoop,f
  5420  0F14  3EFF               	addlw	-1
  5421  0F15  1D03               	skipz
  5422  0F16  2F12               	goto	u1195
  5423  0F17  0870               	movf	??_LCDBusyLoop,w
  5424  0F18  00F1               	movwf	??_LCDBusyLoop+1
  5425  0F19  0871               	movf	??_LCDBusyLoop+1,w
  5426  0F1A  00F3               	movwf	LCDBusyLoop@temp
  5427                           
  5428                           ;lcd_hd44780_pic16.c: 148: temp&=0x0F;
  5429  0F1B  300F               	movlw	15
  5430  0F1C  00F0               	movwf	??_LCDBusyLoop
  5431  0F1D  0870               	movf	??_LCDBusyLoop,w
  5432  0F1E  05F3               	andwf	LCDBusyLoop@temp,f
  5433                           
  5434                           ;lcd_hd44780_pic16.c: 150: status=status|temp;
  5435  0F1F  0874               	movf	LCDBusyLoop@status,w
  5436  0F20  0473               	iorwf	LCDBusyLoop@temp,w
  5437  0F21  00F0               	movwf	??_LCDBusyLoop
  5438  0F22  0870               	movf	??_LCDBusyLoop,w
  5439  0F23  00F4               	movwf	LCDBusyLoop@status
  5440                           
  5441                           ;lcd_hd44780_pic16.c: 152: busy=status & 0b10000000;
  5442  0F24  0874               	movf	LCDBusyLoop@status,w
  5443  0F25  3980               	andlw	128
  5444  0F26  00F0               	movwf	??_LCDBusyLoop
  5445  0F27  0870               	movf	??_LCDBusyLoop,w
  5446  0F28  00F2               	movwf	LCDBusyLoop@busy
  5447                           
  5448                           ;lcd_hd44780_pic16.c: 156: (RB5=0);
  5449                           
  5450                           ;lcd_hd44780_pic16.c: 154: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  5451  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  5452  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  5453  0F2B  1286               	bcf	6,5	;volatile
  5454                           
  5455                           ;lcd_hd44780_pic16.c: 157: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5456  0F2C  0000               	nop
  5457                           
  5458                           ;lcd_hd44780_pic16.c: 158: }while(busy);
  5459  0F2D  0872               	movf	LCDBusyLoop@busy,w
  5460  0F2E  1D03               	btfss	3,2
  5461  0F2F  2EE8               	goto	l1697
  5462                           
  5463                           ;lcd_hd44780_pic16.c: 160: (RB6=0);
  5464  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  5465  0F31  1303               	bcf	3,6	;RP1=0, select bank0
  5466  0F32  1306               	bcf	6,6	;volatile
  5467                           
  5468                           ;lcd_hd44780_pic16.c: 163: TRISD&=(~(0x0F<<4));
  5469  0F33  300F               	movlw	15
  5470  0F34  00F0               	movwf	??_LCDBusyLoop
  5471  0F35  0870               	movf	??_LCDBusyLoop,w
  5472  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  5473  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  5474  0F38  0588               	andwf	8,f	;volatile
  5475  0F39  0008               	return
  5476  0F3A                     __end_of_LCDBusyLoop:	
  5477                           
  5478                           	psect	text24
  5479  0A85                     __ptext24:	
  5480 ;; *************** function _I2C_Init *****************
  5481 ;; Defined at:
  5482 ;;		line 3 in file "i2c.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;		None
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      void 
  5489 ;; Registers used:
  5490 ;;		None
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5496 ;;      Params:         0       0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0
  5499 ;;      Totals:         0       0       0       0       0
  5500 ;;Total ram usage:        0 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_main
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           
  5510                           ;psect for function _I2C_Init
  5511  0A85                     _I2C_Init:	
  5512                           
  5513                           ;i2c.c: 5: TRISD1 = 0 ;
  5514                           
  5515                           ;incstack = 0
  5516                           ; Regs used in _I2C_Init: []
  5517  0A85  1683               	bsf	3,5	;RP0=1, select bank1
  5518  0A86  1303               	bcf	3,6	;RP1=0, select bank1
  5519  0A87  1088               	bcf	8,1	;volatile
  5520                           
  5521                           ;i2c.c: 6: TRISD0 = 0 ;
  5522  0A88  1008               	bcf	8,0	;volatile
  5523  0A89  0008               	return
  5524  0A8A                     __end_of_I2C_Init:	
  5525                           
  5526                           	psect	text25
  5527  0D3E                     __ptext25:	
  5528 ;; *************** function _DS1307_Init *****************
  5529 ;; Defined at:
  5530 ;;		line 4 in file "DS1307.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;		None
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  s               1    6[COMMON] unsigned char 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  2   20[None  ] int 
  5537 ;; Registers used:
  5538 ;;		wreg, status,2, status,0, pclath, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5544 ;;      Params:         0       0       0       0       0
  5545 ;;      Locals:         1       0       0       0       0
  5546 ;;      Temps:          1       0       0       0       0
  5547 ;;      Totals:         2       0       0       0       0
  5548 ;;Total ram usage:        2 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    3
  5551 ;; This function calls:
  5552 ;;		_DS1307_Read
  5553 ;;		_DS1307_Write
  5554 ;;		_I2C_NoAck
  5555 ;;		_I2C_Start
  5556 ;;		_I2C_Stop
  5557 ;; This function is called by:
  5558 ;;		_main
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           
  5563                           ;psect for function _DS1307_Init
  5564  0D3E                     _DS1307_Init:	
  5565                           
  5566                           ;DS1307.c: 6: unsigned char s = 0 ;
  5567                           
  5568                           ;incstack = 0
  5569                           ; Regs used in _DS1307_Init: [wreg+status,2+status,0+pclath+cstack]
  5570  0D3E  01F6               	clrf	DS1307_Init@s
  5571                           
  5572                           ;DS1307.c: 8: I2C_Start();
  5573  0D3F  120A  158A  22C2  120A  158A  	fcall	_I2C_Start
  5574                           
  5575                           ;DS1307.c: 9: DS1307_Write(0xd0);
  5576  0D44  30D0               	movlw	208
  5577  0D45  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  5578                           
  5579                           ;DS1307.c: 10: DS1307_Write(0x00);
  5580  0D4A  3000               	movlw	0
  5581  0D4B  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  5582                           
  5583                           ;DS1307.c: 11: I2C_Start();
  5584  0D50  120A  158A  22C2  120A  158A  	fcall	_I2C_Start
  5585                           
  5586                           ;DS1307.c: 12: DS1307_Write(0xd1);
  5587  0D55  30D1               	movlw	209
  5588  0D56  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  5589                           
  5590                           ;DS1307.c: 13: s = DS1307_Read();
  5591  0D5B  120A  158A  2281  120A  158A  	fcall	_DS1307_Read
  5592  0D60  00F5               	movwf	??_DS1307_Init
  5593  0D61  0875               	movf	??_DS1307_Init,w
  5594  0D62  00F6               	movwf	DS1307_Init@s
  5595                           
  5596                           ;DS1307.c: 14: I2C_NoAck();
  5597  0D63  120A  158A  2293  120A  158A  	fcall	_I2C_NoAck
  5598                           
  5599                           ;DS1307.c: 16: if (s & 0x80)
  5600  0D68  1FF6               	btfss	DS1307_Init@s,7
  5601  0D69  2D8A               	goto	l2167
  5602                           
  5603                           ;DS1307.c: 17: {
  5604                           ;DS1307.c: 18: s = s & 0x7f ;
  5605  0D6A  0876               	movf	DS1307_Init@s,w
  5606  0D6B  397F               	andlw	127
  5607  0D6C  00F5               	movwf	??_DS1307_Init
  5608  0D6D  0875               	movf	??_DS1307_Init,w
  5609  0D6E  00F6               	movwf	DS1307_Init@s
  5610                           
  5611                           ;DS1307.c: 19: I2C_Start();
  5612  0D6F  120A  158A  22C2  120A  158A  	fcall	_I2C_Start
  5613                           
  5614                           ;DS1307.c: 20: DS1307_Write(0xD0);
  5615  0D74  30D0               	movlw	208
  5616  0D75  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  5617                           
  5618                           ;DS1307.c: 21: DS1307_Write(0x00);
  5619  0D7A  3000               	movlw	0
  5620  0D7B  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  5621                           
  5622                           ;DS1307.c: 22: DS1307_Write(s);
  5623  0D80  0876               	movf	DS1307_Init@s,w
  5624  0D81  120A  158A  22A7  120A  158A  	fcall	_DS1307_Write
  5625                           
  5626                           ;DS1307.c: 23: I2C_Stop();
  5627  0D86  120A  158A  22B2   	fcall	_I2C_Stop
  5628                           
  5629                           ;DS1307.c: 25: }
  5630                           
  5631                           ;DS1307.c: 24: return 1 ;
  5632                           ;	Return value of _DS1307_Init is never used
  5633  0D89  0008               	return
  5634  0D8A                     l2167:	
  5635                           
  5636                           ;DS1307.c: 26: else
  5637                           ;DS1307.c: 27: I2C_Stop();
  5638  0D8A  120A  158A  22B2   	fcall	_I2C_Stop
  5639  0D8D  0008               	return
  5640  0D8E                     __end_of_DS1307_Init:	
  5641                           ;DS1307.c: 29: return 0 ;
  5642                           ;	Return value of _DS1307_Init is never used
  5643                           
  5644                           
  5645                           	psect	text26
  5646  0AB2                     __ptext26:	
  5647 ;; *************** function _I2C_Stop *****************
  5648 ;; Defined at:
  5649 ;;		line 29 in file "i2c.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;		None
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;		None
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      void 
  5656 ;; Registers used:
  5657 ;;		None
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5663 ;;      Params:         0       0       0       0       0
  5664 ;;      Locals:         0       0       0       0       0
  5665 ;;      Temps:          0       0       0       0       0
  5666 ;;      Totals:         0       0       0       0       0
  5667 ;;Total ram usage:        0 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_DS1307_Init
  5673 ;;		_DS1307_SetTime
  5674 ;;		_DS1307_SetDate
  5675 ;;		_DS1307_GetTime
  5676 ;;		_DS1307_GetDate
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           
  5681                           ;psect for function _I2C_Stop
  5682  0AB2                     _I2C_Stop:	
  5683                           
  5684                           ;i2c.c: 31: RD1 = 0;
  5685                           
  5686                           ;incstack = 0
  5687                           ; Regs used in _I2C_Stop: []
  5688  0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  5689  0AB3  1303               	bcf	3,6	;RP1=0, select bank0
  5690  0AB4  1088               	bcf	8,1	;volatile
  5691                           
  5692                           ;i2c.c: 32: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5693  0AB5  0000               	nop
  5694                           
  5695                           ;i2c.c: 33: RD0 = 0;
  5696  0AB6  1283               	bcf	3,5	;RP0=0, select bank0
  5697  0AB7  1303               	bcf	3,6	;RP1=0, select bank0
  5698  0AB8  1008               	bcf	8,0	;volatile
  5699                           
  5700                           ;i2c.c: 34: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5701  0AB9  0000               	nop
  5702                           
  5703                           ;i2c.c: 35: RD1 = 1;
  5704  0ABA  1283               	bcf	3,5	;RP0=0, select bank0
  5705  0ABB  1303               	bcf	3,6	;RP1=0, select bank0
  5706  0ABC  1488               	bsf	8,1	;volatile
  5707                           
  5708                           ;i2c.c: 36: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5709  0ABD  0000               	nop
  5710                           
  5711                           ;i2c.c: 37: RD0 = 1;
  5712  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  5713  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  5714  0AC0  1408               	bsf	8,0	;volatile
  5715  0AC1  0008               	return
  5716  0AC2                     __end_of_I2C_Stop:	
  5717                           
  5718                           	psect	text27
  5719  0AC2                     __ptext27:	
  5720 ;; *************** function _I2C_Start *****************
  5721 ;; Defined at:
  5722 ;;		line 17 in file "i2c.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;		None
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;		None
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      void 
  5729 ;; Registers used:
  5730 ;;		None
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5736 ;;      Params:         0       0       0       0       0
  5737 ;;      Locals:         0       0       0       0       0
  5738 ;;      Temps:          0       0       0       0       0
  5739 ;;      Totals:         0       0       0       0       0
  5740 ;;Total ram usage:        0 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; This function calls:
  5743 ;;		Nothing
  5744 ;; This function is called by:
  5745 ;;		_DS1307_Init
  5746 ;;		_DS1307_SetTime
  5747 ;;		_DS1307_SetDate
  5748 ;;		_DS1307_GetTime
  5749 ;;		_DS1307_GetDate
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753                           
  5754                           ;psect for function _I2C_Start
  5755  0AC2                     _I2C_Start:	
  5756                           
  5757                           ;i2c.c: 19: RD1 = 0;
  5758                           
  5759                           ;incstack = 0
  5760                           ; Regs used in _I2C_Start: []
  5761  0AC2  1283               	bcf	3,5	;RP0=0, select bank0
  5762  0AC3  1303               	bcf	3,6	;RP1=0, select bank0
  5763  0AC4  1088               	bcf	8,1	;volatile
  5764                           
  5765                           ;i2c.c: 20: RD0 = 1;
  5766  0AC5  1408               	bsf	8,0	;volatile
  5767                           
  5768                           ;i2c.c: 21: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5769  0AC6  0000               	nop
  5770                           
  5771                           ;i2c.c: 22: RD1 = 1;
  5772  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  5773  0AC8  1303               	bcf	3,6	;RP1=0, select bank0
  5774  0AC9  1488               	bsf	8,1	;volatile
  5775                           
  5776                           ;i2c.c: 23: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5777  0ACA  0000               	nop
  5778                           
  5779                           ;i2c.c: 24: RD0 = 0;
  5780  0ACB  1283               	bcf	3,5	;RP0=0, select bank0
  5781  0ACC  1303               	bcf	3,6	;RP1=0, select bank0
  5782  0ACD  1008               	bcf	8,0	;volatile
  5783                           
  5784                           ;i2c.c: 25: _delay((unsigned long)((1)*(4000000/4000000.0)));
  5785  0ACE  0000               	nop
  5786                           
  5787                           ;i2c.c: 26: RD1 = 0;
  5788  0ACF  1283               	bcf	3,5	;RP0=0, select bank0
  5789  0AD0  1303               	bcf	3,6	;RP1=0, select bank0
  5790  0AD1  1088               	bcf	8,1	;volatile
  5791  0AD2  0008               	return
  5792  0AD3                     __end_of_I2C_Start:	
  5793                           
  5794                           	psect	text28
  5795  0A93                     __ptext28:	
  5796 ;; *************** function _I2C_NoAck *****************
  5797 ;; Defined at:
  5798 ;;		line 88 in file "i2c.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;		None
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      void 
  5805 ;; Registers used:
  5806 ;;		status,2, status,0, pclath, cstack
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5812 ;;      Params:         0       0       0       0       0
  5813 ;;      Locals:         0       0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0
  5815 ;;      Totals:         0       0       0       0       0
  5816 ;;Total ram usage:        0 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    1
  5819 ;; This function calls:
  5820 ;;		_I2C_Clock
  5821 ;; This function is called by:
  5822 ;;		_DS1307_Init
  5823 ;;		_DS1307_GetTime
  5824 ;;		_DS1307_GetDate
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           
  5829                           ;psect for function _I2C_NoAck
  5830  0A93                     _I2C_NoAck:	
  5831                           
  5832                           ;i2c.c: 90: RD0 = 1;
  5833                           
  5834                           ;incstack = 0
  5835                           ; Regs used in _I2C_NoAck: [status,2+status,0+pclath+cstack]
  5836  0A93  1283               	bcf	3,5	;RP0=0, select bank0
  5837  0A94  1303               	bcf	3,6	;RP1=0, select bank0
  5838  0A95  1408               	bsf	8,0	;volatile
  5839                           
  5840                           ;i2c.c: 91: I2C_Clock();
  5841  0A96  120A  158A  228A   	fcall	_I2C_Clock
  5842                           
  5843                           ;i2c.c: 92: RD1 = 1;
  5844  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  5845  0A9A  1303               	bcf	3,6	;RP1=0, select bank0
  5846  0A9B  1488               	bsf	8,1	;volatile
  5847  0A9C  0008               	return
  5848  0A9D                     __end_of_I2C_NoAck:	
  5849                           
  5850                           	psect	text29
  5851  0AA7                     __ptext29:	
  5852 ;; *************** function _DS1307_Write *****************
  5853 ;; Defined at:
  5854 ;;		line 32 in file "DS1307.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;  dat             1    wreg     unsigned char 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  dat             1    4[COMMON] unsigned char 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0, pclath, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5868 ;;      Params:         0       0       0       0       0
  5869 ;;      Locals:         1       0       0       0       0
  5870 ;;      Temps:          0       0       0       0       0
  5871 ;;      Totals:         1       0       0       0       0
  5872 ;;Total ram usage:        1 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:    2
  5875 ;; This function calls:
  5876 ;;		_I2C_Clock
  5877 ;;		_I2C_Write
  5878 ;; This function is called by:
  5879 ;;		_DS1307_Init
  5880 ;;		_DS1307_SetTime
  5881 ;;		_DS1307_SetDate
  5882 ;;		_DS1307_GetTime
  5883 ;;		_DS1307_GetDate
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           
  5888                           ;psect for function _DS1307_Write
  5889  0AA7                     _DS1307_Write:	
  5890                           
  5891                           ;incstack = 0
  5892                           ; Regs used in _DS1307_Write: [wreg+status,2+status,0+pclath+cstack]
  5893                           ;DS1307_Write@dat stored from wreg
  5894  0AA7  00F4               	movwf	DS1307_Write@dat
  5895                           
  5896                           ;DS1307.c: 34: I2C_Write(dat);
  5897  0AA8  0874               	movf	DS1307_Write@dat,w
  5898  0AA9  120A  158A  2326  120A  158A  	fcall	_I2C_Write
  5899                           
  5900                           ;DS1307.c: 35: I2C_Clock();
  5901  0AAE  120A  158A  228A   	fcall	_I2C_Clock
  5902  0AB1  0008               	return
  5903  0AB2                     __end_of_DS1307_Write:	
  5904                           
  5905                           	psect	text30
  5906  0B26                     __ptext30:	
  5907 ;; *************** function _I2C_Write *****************
  5908 ;; Defined at:
  5909 ;;		line 40 in file "i2c.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  dat             1    wreg     unsigned char 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  dat             1    2[COMMON] unsigned char 
  5914 ;;  i               1    3[COMMON] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1    wreg      void 
  5917 ;; Registers used:
  5918 ;;		wreg, status,2, status,0, pclath, cstack
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5924 ;;      Params:         0       0       0       0       0
  5925 ;;      Locals:         2       0       0       0       0
  5926 ;;      Temps:          2       0       0       0       0
  5927 ;;      Totals:         4       0       0       0       0
  5928 ;;Total ram usage:        4 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    1
  5931 ;; This function calls:
  5932 ;;		_I2C_Clock
  5933 ;; This function is called by:
  5934 ;;		_DS1307_Write
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           
  5939                           ;psect for function _I2C_Write
  5940  0B26                     _I2C_Write:	
  5941                           
  5942                           ;incstack = 0
  5943                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  5944                           ;I2C_Write@dat stored from wreg
  5945  0B26  00F2               	movwf	I2C_Write@dat
  5946                           
  5947                           ;i2c.c: 42: unsigned char i ;
  5948                           ;i2c.c: 43: for(i=0;i<8;i++)
  5949  0B27  01F3               	clrf	I2C_Write@i
  5950  0B28  3008               	movlw	8
  5951  0B29  0273               	subwf	I2C_Write@i,w
  5952  0B2A  1803               	btfsc	3,0
  5953  0B2B  2B48               	goto	l67
  5954  0B2C                     l66:	
  5955                           
  5956                           ;i2c.c: 44: {
  5957                           ;i2c.c: 45: RD0 = (dat & 0x80) ? 1 : 0 ;
  5958  0B2C  1FF2               	btfss	I2C_Write@dat,7
  5959  0B2D  2B32               	goto	u1220
  5960  0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  5961  0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  5962  0B30  1408               	bsf	8,0	;volatile
  5963  0B31  2B35               	goto	l1739
  5964  0B32                     u1220:	
  5965  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  5966  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  5967  0B34  1008               	bcf	8,0	;volatile
  5968  0B35                     l1739:	
  5969                           
  5970                           ;i2c.c: 47: I2C_Clock();
  5971  0B35  120A  158A  228A  120A  158A  	fcall	_I2C_Clock
  5972                           
  5973                           ;i2c.c: 49: dat = dat << 1;
  5974  0B3A  0872               	movf	I2C_Write@dat,w
  5975  0B3B  00F0               	movwf	??_I2C_Write
  5976  0B3C  0770               	addwf	??_I2C_Write,w
  5977  0B3D  00F1               	movwf	??_I2C_Write+1
  5978  0B3E  0871               	movf	??_I2C_Write+1,w
  5979  0B3F  00F2               	movwf	I2C_Write@dat
  5980  0B40  3001               	movlw	1
  5981  0B41  00F0               	movwf	??_I2C_Write
  5982  0B42  0870               	movf	??_I2C_Write,w
  5983  0B43  07F3               	addwf	I2C_Write@i,f
  5984  0B44  3008               	movlw	8
  5985  0B45  0273               	subwf	I2C_Write@i,w
  5986  0B46  1C03               	skipc
  5987  0B47  2B2C               	goto	l66
  5988  0B48                     l67:	
  5989                           
  5990                           ;i2c.c: 50: }
  5991                           ;i2c.c: 51: RD0 = 1;
  5992  0B48  1283               	bcf	3,5	;RP0=0, select bank0
  5993  0B49  1303               	bcf	3,6	;RP1=0, select bank0
  5994  0B4A  1408               	bsf	8,0	;volatile
  5995  0B4B  0008               	return
  5996  0B4C                     __end_of_I2C_Write:	
  5997                           
  5998                           	psect	text31
  5999  0A8A                     __ptext31:	
  6000 ;; *************** function _I2C_Clock *****************
  6001 ;; Defined at:
  6002 ;;		line 9 in file "i2c.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;		None
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;		None
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  1    wreg      void 
  6009 ;; Registers used:
  6010 ;;		None
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6016 ;;      Params:         0       0       0       0       0
  6017 ;;      Locals:         0       0       0       0       0
  6018 ;;      Temps:          0       0       0       0       0
  6019 ;;      Totals:         0       0       0       0       0
  6020 ;;Total ram usage:        0 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; This function calls:
  6023 ;;		Nothing
  6024 ;; This function is called by:
  6025 ;;		_DS1307_Write
  6026 ;;		_I2C_Write
  6027 ;;		_I2C_Ack
  6028 ;;		_I2C_NoAck
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           
  6033                           ;psect for function _I2C_Clock
  6034  0A8A                     _I2C_Clock:	
  6035                           
  6036                           ;i2c.c: 11: _delay((unsigned long)((1)*(4000000/4000000.0)));
  6037                           
  6038                           ;incstack = 0
  6039                           ; Regs used in _I2C_Clock: []
  6040  0A8A  0000               	nop
  6041                           
  6042                           ;i2c.c: 12: RD1 = 1;
  6043  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  6044  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  6045  0A8D  1488               	bsf	8,1	;volatile
  6046                           
  6047                           ;i2c.c: 13: _delay((unsigned long)((1)*(4000000/4000000.0)));
  6048  0A8E  0000               	nop
  6049                           
  6050                           ;i2c.c: 14: RD1 = 0;
  6051  0A8F  1283               	bcf	3,5	;RP0=0, select bank0
  6052  0A90  1303               	bcf	3,6	;RP1=0, select bank0
  6053  0A91  1088               	bcf	8,1	;volatile
  6054  0A92  0008               	return
  6055  0A93                     __end_of_I2C_Clock:	
  6056                           
  6057                           	psect	text32
  6058  0A81                     __ptext32:	
  6059 ;; *************** function _DS1307_Read *****************
  6060 ;; Defined at:
  6061 ;;		line 38 in file "DS1307.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;		None
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;		None
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1    wreg      unsigned char 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0, pclath, cstack
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6075 ;;      Params:         0       0       0       0       0
  6076 ;;      Locals:         0       0       0       0       0
  6077 ;;      Temps:          0       0       0       0       0
  6078 ;;      Totals:         0       0       0       0       0
  6079 ;;Total ram usage:        0 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    1
  6082 ;; This function calls:
  6083 ;;		_I2C_Read
  6084 ;; This function is called by:
  6085 ;;		_DS1307_Init
  6086 ;;		_DS1307_GetTime
  6087 ;;		_DS1307_GetDate
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           
  6092                           ;psect for function _DS1307_Read
  6093  0A81                     _DS1307_Read:	
  6094                           
  6095                           ;DS1307.c: 40: return I2C_Read();
  6096                           
  6097                           ;incstack = 0
  6098                           ; Regs used in _DS1307_Read: [wreg+status,2+status,0+pclath+cstack]
  6099  0A81  120A  158A  23C1   	fcall	_I2C_Read
  6100  0A84  0008               	return
  6101  0A85                     __end_of_DS1307_Read:	
  6102                           
  6103                           	psect	text33
  6104  0BC1                     __ptext33:	
  6105 ;; *************** function _I2C_Read *****************
  6106 ;; Defined at:
  6107 ;;		line 54 in file "i2c.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;		None
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  dat             1    3[COMMON] unsigned char 
  6112 ;;  i               1    2[COMMON] unsigned char 
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  1    wreg      unsigned char 
  6115 ;; Registers used:
  6116 ;;		wreg, status,2, status,0
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6122 ;;      Params:         0       0       0       0       0
  6123 ;;      Locals:         2       0       0       0       0
  6124 ;;      Temps:          2       0       0       0       0
  6125 ;;      Totals:         4       0       0       0       0
  6126 ;;Total ram usage:        4 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_DS1307_Read
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           
  6136                           ;psect for function _I2C_Read
  6137  0BC1                     _I2C_Read:	
  6138                           
  6139                           ;i2c.c: 56: unsigned char i, dat=0x00;
  6140                           
  6141                           ;incstack = 0
  6142                           ; Regs used in _I2C_Read: [wreg+status,2+status,0]
  6143  0BC1  01F3               	clrf	I2C_Read@dat
  6144                           
  6145                           ;i2c.c: 58: TRISD0 = 1 ;
  6146  0BC2  1683               	bsf	3,5	;RP0=1, select bank1
  6147  0BC3  1303               	bcf	3,6	;RP1=0, select bank1
  6148  0BC4  1408               	bsf	8,0	;volatile
  6149                           
  6150                           ;i2c.c: 60: for(i=0;i<8;i++)
  6151  0BC5  01F2               	clrf	I2C_Read@i
  6152  0BC6  3008               	movlw	8
  6153  0BC7  0272               	subwf	I2C_Read@i,w
  6154  0BC8  1803               	btfsc	3,0
  6155  0BC9  2BE6               	goto	l72
  6156  0BCA                     l71:	
  6157                           
  6158                           ;i2c.c: 61: {
  6159                           ;i2c.c: 62: _delay((unsigned long)((1)*(4000000/4000000.0)));
  6160  0BCA  0000               	nop
  6161                           
  6162                           ;i2c.c: 64: RD1 = 1;
  6163  0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  6164  0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  6165  0BCD  1488               	bsf	8,1	;volatile
  6166                           
  6167                           ;i2c.c: 66: dat = dat << 1;
  6168  0BCE  0873               	movf	I2C_Read@dat,w
  6169  0BCF  00F0               	movwf	??_I2C_Read
  6170  0BD0  0770               	addwf	??_I2C_Read,w
  6171  0BD1  00F1               	movwf	??_I2C_Read+1
  6172  0BD2  0871               	movf	??_I2C_Read+1,w
  6173  0BD3  00F3               	movwf	I2C_Read@dat
  6174                           
  6175                           ;i2c.c: 68: if (RD0 == 1)
  6176  0BD4  1C08               	btfss	8,0	;volatile
  6177  0BD5  2BDA               	goto	l1761
  6178                           
  6179                           ;i2c.c: 69: dat++;
  6180  0BD6  3001               	movlw	1
  6181  0BD7  00F0               	movwf	??_I2C_Read
  6182  0BD8  0870               	movf	??_I2C_Read,w
  6183  0BD9  07F3               	addwf	I2C_Read@dat,f
  6184  0BDA                     l1761:	
  6185                           
  6186                           ;i2c.c: 71: _delay((unsigned long)((1)*(4000000/4000000.0)));
  6187  0BDA  0000               	nop
  6188                           
  6189                           ;i2c.c: 73: RD1 = 0;
  6190  0BDB  1283               	bcf	3,5	;RP0=0, select bank0
  6191  0BDC  1303               	bcf	3,6	;RP1=0, select bank0
  6192  0BDD  1088               	bcf	8,1	;volatile
  6193  0BDE  3001               	movlw	1
  6194  0BDF  00F0               	movwf	??_I2C_Read
  6195  0BE0  0870               	movf	??_I2C_Read,w
  6196  0BE1  07F2               	addwf	I2C_Read@i,f
  6197  0BE2  3008               	movlw	8
  6198  0BE3  0272               	subwf	I2C_Read@i,w
  6199  0BE4  1C03               	skipc
  6200  0BE5  2BCA               	goto	l71
  6201  0BE6                     l72:	
  6202                           
  6203                           ;i2c.c: 74: }
  6204                           ;i2c.c: 76: TRISD0 = 0 ;
  6205  0BE6  1683               	bsf	3,5	;RP0=1, select bank1
  6206  0BE7  1303               	bcf	3,6	;RP1=0, select bank1
  6207  0BE8  1008               	bcf	8,0	;volatile
  6208                           
  6209                           ;i2c.c: 78: return dat;
  6210  0BE9  0873               	movf	I2C_Read@dat,w
  6211  0BEA  0008               	return
  6212  0BEB                     __end_of_I2C_Read:	
  6213  007E                     btemp	set	126	;btemp
  6214  007E                     wtemp	set	126
  6215  007E                     wtemp0	set	126
  6216  0080                     wtemp1	set	128
  6217  0082                     wtemp2	set	130
  6218  0084                     wtemp3	set	132
  6219  0086                     wtemp4	set	134
  6220  0088                     wtemp5	set	136
  6221  007F                     wtemp6	set	127
  6222  007E                     ttemp	set	126
  6223  007E                     ttemp0	set	126
  6224  0081                     ttemp1	set	129
  6225  0084                     ttemp2	set	132
  6226  0087                     ttemp3	set	135
  6227  007F                     ttemp4	set	127
  6228  007E                     ltemp	set	126
  6229  007E                     ltemp0	set	126
  6230  0082                     ltemp1	set	130
  6231  0086                     ltemp2	set	134
  6232  0080                     ltemp3	set	128


Data Sizes:
    Strings     101
    Constant    40
    Data        25
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      57
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[10]), 
		 -> STR_6(CODE[10]), STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[12]), 
		 -> STR_2(CODE[12]), STR_1(CODE[10]), 

    DS1307_GetDate@y_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@c(BANK0[1]), 

    DS1307_GetDate@m_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@b(BANK0[1]), 

    DS1307_GetDate@d_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@a(BANK0[1]), 

    DS1307_GetDate@n_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@n(BANK0[1]), 

    DS1307_GetTime@h_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@a(BANK0[1]), 

    DS1307_GetTime@m_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@b(BANK0[1]), 

    DS1307_GetTime@s_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> readClock@c(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_LCDInit
    _showClock->_LCDGotoXY
    _showClock->_showDate
    _showClock->_showTime
    _readClock->___wmul
    ___wmul->___awdiv
    _DS1307_GetTime->_DS1307_Write
    _DS1307_GetDate->_DS1307_Write
    _initLED->_sendLED
    _doMenu->_LCDGotoXY
    _doMenu->_showDate
    _doMenu->_showTime
    _showTime->_LCDWriteInt
    _showTime->_setLED
    _setLED->___awdiv
    _showDate->_LCDWriteInt
    _showDate->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDGotoXY->_LCDByte
    _DS1307_SetTime->_DS1307_Write
    _DS1307_SetDate->_DS1307_Write
    _LCDInit->_LCDByte
    _LCDByte->_LCDBusyLoop
    _DS1307_Init->_DS1307_Write
    _DS1307_Write->_I2C_Write
    _DS1307_Read->_I2C_Read

Critical Paths under _main in BANK0

    _main->_doMenu
    _readClock->___wmul
    _showTime->_LCDWriteInt
    _showDate->_LCDWriteInt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   59356
                                             25 BANK0      4     4      0
                        _DS1307_Init
                           _I2C_Init
                            _LCDByte
                            _LCDInit
                             _doMenu
                            _initLED
                          _readClock
                         _readInputs
                          _showClock
 ---------------------------------------------------------------------------------
 (1) _showClock                                            0     0      0   21944
                          _LCDGotoXY
                           _showDate
                           _showTime
 ---------------------------------------------------------------------------------
 (1) _readClock                                            7     7      0    4063
                                              2 BANK0      7     7      0
                     _DS1307_GetDate
                     _DS1307_GetTime
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     728
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _DS1307_GetTime                                       4     2      2     405
                                              5 COMMON     4     2      2
                        _DS1307_Read
                       _DS1307_Write
                            _I2C_Ack
                          _I2C_NoAck
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _DS1307_GetDate                                       5     2      3     480
                                              5 COMMON     5     2      3
                        _DS1307_Read
                       _DS1307_Write
                            _I2C_Ack
                          _I2C_NoAck
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Ack                                              0     0      0       0
                          _I2C_Clock
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0     303
                            _sendLED
 ---------------------------------------------------------------------------------
 (1) _doMenu                                              17    17      0   29725
                                              8 BANK0     17    17      0
                     _DS1307_SetDate
                     _DS1307_SetTime
                            _LCDByte
                          _LCDGotoXY
                     _LCDWriteString
                            ___awdiv
                            ___awmod
                         _readInputs
                           _showDate
                           _showTime
 ---------------------------------------------------------------------------------
 (2) _showTime                                             1     1      0   10878
                                             13 COMMON     1     1      0
                            _LCDByte
                        _LCDWriteInt
                            ___awdiv
                            ___awmod
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                              10     6      4     817
                                              9 COMMON     4     0      4
                                              0 BANK0      6     6      0
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            _sendLED
 ---------------------------------------------------------------------------------
 (4) _sendLED                                              6     4      2     303
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _showDate                                             1     1      0    8707
                                             13 COMMON     1     1      0
                            _LCDByte
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (3) _LCDWriteString                                       3     3      0    1998
                                             12 COMMON     1     1      0
                                              0 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDWriteInt                                          9     8      1    5268
                                             12 COMMON     1     0      1
                                              0 BANK0      8     8      0
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1356
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1996
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _readInputs                                           4     4      0      23
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _LCDGotoXY                                            3     2      1    2359
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _DS1307_SetTime                                       3     1      2     285
                                              5 COMMON     3     1      2
                       _DS1307_Write
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _DS1307_SetDate                                       4     1      3     360
                                              5 COMMON     4     1      3
                       _DS1307_Write
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              3     3      0    1580
                                             12 COMMON     2     2      0
                                              0 BANK0      1     1      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (4) _LCDByte                                              7     6      1    1441
                                              5 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (5) _LCDBusyLoop                                          5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS1307_Init                                          2     2      0     275
                                              5 COMMON     2     2      0
                        _DS1307_Read
                       _DS1307_Write
                          _I2C_NoAck
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_NoAck                                            0     0      0       0
                          _I2C_Clock
 ---------------------------------------------------------------------------------
 (3) _DS1307_Write                                         1     1      0     113
                                              4 COMMON     1     1      0
                          _I2C_Clock
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            4     4      0      91
                                              0 COMMON     4     4      0
                          _I2C_Clock
 ---------------------------------------------------------------------------------
 (4) _I2C_Clock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DS1307_Read                                          0     0      0      93
                           _I2C_Read
 ---------------------------------------------------------------------------------
 (4) _I2C_Read                                             4     4      0      93
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1307_Init
     _DS1307_Read
       _I2C_Read
     _DS1307_Write
       _I2C_Clock
       _I2C_Write
         _I2C_Clock
     _I2C_NoAck
       _I2C_Clock
     _I2C_Start
     _I2C_Stop
   _I2C_Init
   _LCDByte
     _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _doMenu
     _DS1307_SetDate
       _DS1307_Write
         _I2C_Clock
         _I2C_Write
           _I2C_Clock
       _I2C_Start
       _I2C_Stop
     _DS1307_SetTime
       _DS1307_Write
         _I2C_Clock
         _I2C_Write
           _I2C_Clock
       _I2C_Start
       _I2C_Stop
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
     ___awdiv
     ___awmod
     _readInputs
     _showDate
       _LCDByte
         _LCDBusyLoop
       _LCDWriteInt
         _LCDByte
           _LCDBusyLoop
         ___awdiv
         ___awmod
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
     _showTime
       _LCDByte
         _LCDBusyLoop
       _LCDWriteInt
         _LCDByte
           _LCDBusyLoop
         ___awdiv
         ___awmod
       ___awdiv
       ___awmod
       _setLED
         ___awdiv (ARG)
         ___awmod (ARG)
         _sendLED (ARG)
   _initLED
     _sendLED
   _readClock
     _DS1307_GetDate
       _DS1307_Read
         _I2C_Read
       _DS1307_Write
         _I2C_Clock
         _I2C_Write
           _I2C_Clock
       _I2C_Ack
         _I2C_Clock
       _I2C_NoAck
         _I2C_Clock
       _I2C_Start
       _I2C_Stop
     _DS1307_GetTime
       _DS1307_Read
         _I2C_Read
       _DS1307_Write
         _I2C_Clock
         _I2C_Write
           _I2C_Clock
       _I2C_Ack
         _I2C_Clock
       _I2C_NoAck
         _I2C_Clock
       _I2C_Start
       _I2C_Stop
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _readInputs
   _showClock
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _showDate
       _LCDByte
         _LCDBusyLoop
       _LCDWriteInt
         _LCDByte
           _LCDBusyLoop
         ___awdiv
         ___awmod
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
     _showTime
       _LCDByte
         _LCDBusyLoop
       _LCDWriteInt
         _LCDByte
           _LCDBusyLoop
         ___awdiv
         ___awmod
       ___awdiv
       ___awmod
       _setLED
         ___awdiv (ARG)
         ___awmod (ARG)
         _sendLED (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1D      39       5       71.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      47      12        0.0%
ABS                  0      0      47       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed May 11 13:59:32 2016

           ?_LCDBusyLoop 0070       __size_of_I2C_Clock 0009       __size_of_I2C_NoAck 000A  
                      pc 0002       __size_of_I2C_Start 0011              __CFG_CP$OFF 0000  
     __size_of_I2C_Write 0026                       l71 0BCA                       l72 0BE6  
                     l66 0B2C                       l67 0B48                       l99 0DA7  
           ___awdiv@sign 0076                       fsr 0004      ___wmul@multiplicand 007B  
            __CFG_LVP$ON 0000                      l100 0DAA                      l133 0B6B  
                    l134 0B54                      l320 06C3                      l242 03C7  
                    l308 065D                      l254 0412                      l360 01A6  
                    l266 046A                      l284 05A8                      l368 0F60  
                    l296 05F6                      l457 0B80                      _RB1 0031  
                    _RC0 0038                      _RB2 0032                      _RC1 0039  
                    _RD0 0040                      _RC2 003A                      _RB4 0034  
                    _RD1 0041                      _RB5 0035                      _RB6 0036  
                    _RB7 0037             __CFG_CPD$OFF 0000                      _day 0049  
        __end_of_I2C_Ack 0AA7                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076             __CFG_FOSC$XT 0000             _DS1307_Write 0AA7  
LCDWriteInt@field_length 007C          __end_of_LCDByte 0DDE          __end_of_LCDInit 0CB5  
           ?_LCDWriteInt 007C              LCDByte@temp 007B                     l2101 016F  
                   l2103 0174                     l2105 0179                     l2113 0188  
                   l2121 0B76                     l2107 017E                     l2061 0B56  
                   l2109 0183                     l2063 0B58                     l2081 0C2A  
                   l2067 0B5D                     l2307 041C                     l2315 03F0  
                   l2421 05D3                     l2317 0431                     l2309 041E  
                   l2167 0D8A                     l2423 0619                     l2319 0436  
                   l2247 036F                     l2097 0165                     l2425 061E  
                   l2417 0606                     l2353 04A1                     l2337 0474  
                   l2345 0448                     l2249 037A                     l2099 016A  
                   l1811 0F53                     l2451 0689                     l2363 055A  
                   l2347 0489                     l2339 0476                     l2507 0CD9  
                   l2453 068E                     l2445 0676                     l2357 0548  
                   l2277 03D1                     l2285 03A5                     l1903 0D31  
                   l2287 03D9                     l2279 03D3                     l2359 0553  
                   l1761 0BDA                     l2537 018F                     l1817 0F63  
                   l1825 0F8D                     l2473 06D1                     l2449 0630  
                   l2393 0584                     l2289 03DE                     l1739 0B35  
                   l1843 0E99                     l1907 0D39                     l2491 07E2  
                   l2395 05BC                     l1861 0EC5                     l1853 0EA1  
                   l1837 0E8E                     l2477 06A0                     l2397 05C1  
                   l2389 05B6                     l1855 0EAF                     l2487 0704  
                   l2479 06E4                     l1697 0EE8                     l1865 0ED0  
                   l1881 0CFD                     l1953 0E17                     l1869 0ED8  
                   l1893 0D0A                     l1885 0D04                     l1973 0107  
                   l1949 0E0F                     l1957 0DE1                     l1895 0D18  
                   l1967 00ED                     l1899 0D26                     STR_1 0067  
                   STR_2 003D                     STR_3 0031                     STR_4 0071  
                   STR_5 005D                     STR_6 0053                     STR_7 0049  
                   STR_8 0086                     STR_9 007E                     u1220 0B32  
                   u2015 05A1                     u1305 0DB0                     u1315 0DC8  
                   u1405 0EB0                     u1325 0F51                     u1175 0EF0  
                   u1415 0EBC                     u1185 0EFC                     u1425 0EC6  
                   u1505 0D1E                     u1345 0F8B                     u2305 0702  
                   u2225 06BD                     u1195 0F12                     u1515 0D27  
                   u2155 0655                     u1604 0C57                     u1285 0D92  
                   u1605 0C54                     u2085 05F0                     u1385 0EA4  
                   u2337 0F41                     u1705 02D9                     u2347 0F55  
                   u2275 06EA                     u1645 0C36                     u1485 0D0D  
                   u2357 0F6A                     u2285 06F2                     u2367 0F74  
                   u2295 06FA                     u2377 0F91                     u1825 040D  
                   u1665 0B81                     u2387 0C20                     u1755 03C2  
                   u1675 0B88                     u2397 0C81                     u1945 048F  
                   u1955 0497                     u1965 049F                     u1895 0465  
           __CFG_WRT$OFF 0000                     _date 0047                     _main 0CB5  
                   _hour 004B       __size_of_LCDGotoXY 0026         __end_of_I2C_Init 0A8A  
       __end_of_I2C_Read 0BEB                     _year 0053                     btemp 007E  
       __end_of_I2C_Stop 0AC2            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
       DS1307_SetDate@dd 0075         DS1307_SetDate@mm 0076         DS1307_SetDate@nn 0078  
       DS1307_SetDate@yy 0077                    ?_main 0070          __end_of___awdiv 0EDD  
                  STR_10 007A                    STR_11 0092                    STR_12 0082  
                  STR_13 008E                    STR_14 008A            __CFG_WDTE$OFF 0000  
        __end_of___awmod 0D3E             LCDInit@style 0020          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _PORTD 0008                    _TRISD 0088  
          __CFG_PWRTE$ON 0000         DS1307_SetTime@hh 0077         DS1307_SetTime@mm 0075  
       DS1307_SetTime@ss 0076           _DS1307_GetDate 0F9A          __end_of_initLED 0B26  
         _DS1307_GetTime 0E2E        __end_of_I2C_Clock 0A93        __end_of_I2C_NoAck 0A9D  
                  _month 004F          __end_of_sendLED 0F9A                    _state 0058  
      __end_of_I2C_Start 0AD3        __end_of_I2C_Write 0B4C                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080           _DS1307_SetDate 0BEB           _DS1307_SetTime 0B99  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07ED             __end_of_main 0CF3  
              ??_I2C_Ack 0070                   ??_main 007E        __end_of_LCDGotoXY 0B72  
          LCDByte@isdata 0075                ??_LCDByte 0076                ??_LCDInit 007C  
 __end_of_DS1307_GetDate 1000   __end_of_DS1307_GetTime 0E84                I2C_Read@i 0072  
 __end_of_DS1307_SetDate 0C19         ___awdiv@dividend 0072   __end_of_DS1307_SetTime 0BC1  
                 _TRISC0 0438                   _TRISC1 0439                   _TRISD0 0440  
                 _TRISC2 043A                   _TRISD1 0441             DS1307_Init@s 0076  
         _LCDWriteString 0DDE                   ___wmul 0B72                ??___awdiv 0074  
                 _doMenu 036F                ??___awmod 0074              setLED@digit 0079  
                 _setLED 0C48     __size_of_LCDBusyLoop 005D         ___awdiv@quotient 0077  
                 _minute 004D          ___awmod@divisor 0070              setLED@value 007B  
        ___awmod@counter 0075                   _ttable 0009                ??_initLED 0076  
              ?_I2C_Init 0070                ?_I2C_Read 0070                ??_sendLED 0072  
       __end_of_showDate 01A7          ?_DS1307_GetDate 0075                ?_I2C_Stop 0070  
           LCDWriteInt@c 0023             LCDWriteInt@d 0025         __end_of_showTime 0249  
        ?_DS1307_GetTime 0075          ?_DS1307_SetDate 0075          ?_DS1307_SetTime 0075  
   __size_of_LCDWriteInt 0068  __end_of__initialization 07FC   __end_of_LCDWriteString 0E2E  
              LCDByte@hn 0078                LCDByte@ln 0079           __pcstackCOMMON 0070  
           __pidataBANK0 0AEB               ??_I2C_Init 0070               ??_I2C_Read 0070  
             ??_I2C_Stop 0070            ??_DS1307_Init 0075            ??_DS1307_Read 0074  
             __pbssBANK0 0056       __size_of_readClock 0126          ?_LCDWriteString 0070  
             __pmaintext 0CB5                  ?___wmul 0079                  ?_doMenu 0070  
                _I2C_Ack 0A9D                  ?_setLED 0079               I2C_Write@i 0073  
     __size_of_showClock 0018                  _LCDByte 0D8E                  _LCDInit 0C7A  
             _led_digits 003D               __stringtab 0003                _I2C_Clock 0A8A  
              _I2C_NoAck 0A93                _I2C_Start 0AC2                _I2C_Write 0B26  
    __end_of_DS1307_Init 0D8E      __end_of_DS1307_Read 0A85                  _bButton 0056  
              ?_showDate 0070                ?_showTime 0070             I2C_Write@dat 0072  
                ___awdiv 0E84                  ___awmod 0CF3          __size_of___wmul 0027  
             _readInputs 0C19          __size_of_doMenu 047E          __size_of_setLED 0032  
                __ptext1 0AD3                  __ptext2 0249                  __ptext3 0B72  
                __ptext4 0E2E                  __ptext5 0F9A                  __ptext6 0A9D  
                __ptext7 0B04                  __ptext8 036F                  __ptext9 01A7  
      __end_of_readClock 036F                  _initLED 0B04                  doMenu@d 0033  
                doMenu@h 002B                  doMenu@m 002D                  doMenu@n 0031  
                doMenu@s 002F                  doMenu@y 0037                  _sendLED 0F3A  
       ___awmod@dividend 0072                  _seconds 0051                _LCDGotoXY 0B4C  
                main@led 0039                  main@seg 003B     end_of_initialization 07FC  
      __end_of_monthDays 0031                  setLED@d 0024                  setLED@v 0025  
             ?_I2C_Clock 0070               ?_I2C_NoAck 0070               ?_I2C_Start 0070  
      __end_of_showClock 0AEB               ?_I2C_Write 0070               ??_showDate 007D  
             ??_showTime 007D         ??_DS1307_GetDate 0078         ??_DS1307_GetTime 0077  
      LCDWriteString@msg 0021         ??_DS1307_SetDate 0078         ??_DS1307_SetTime 0077  
              _TRISBbits 0086               ?_LCDGotoXY 007C        __size_of_I2C_Init 0005  
      __size_of_I2C_Read 002A        __size_of_I2C_Stop 0010              _DS1307_Init 0D3E  
            _DS1307_Read 0A81               LCDGotoXY@x 0020               LCDGotoXY@y 007C  
          ??_LCDBusyLoop 0070              ?_readInputs 0070           __end_of___wmul 0B99  
         __end_of_doMenu 07ED           __end_of_setLED 0C7A           __end_of_ttable 0025  
    start_initialization 07ED            ?_DS1307_Write 0070            ??_LCDWriteInt 0020  
       ??_LCDWriteString 007C              ??_I2C_Clock 0070              ??_I2C_NoAck 0070  
             readClock@a 0026               readClock@b 0027               readClock@c 0028  
             readClock@n 0025              ??_I2C_Start 0070              ??_I2C_Write 0070  
        DS1307_Write@dat 0074                 ??___wmul 007D                 ??_doMenu 0028  
             init_fetch0 0097              __pdataBANK0 003D                 ?_I2C_Ack 0070  
               ??_setLED 0020      __end_of_LCDBusyLoop 0F3A                 ?_LCDByte 0075  
               ?_LCDInit 0070           ??_DS1307_Write 0074                 LCDByte@c 007A  
              ___latbits 0002            __pcstackBANK0 0020              ??_LCDGotoXY 007D  
           _menuFunction 0057      __size_of_readInputs 002F      __end_of_LCDWriteInt 0110  
            I2C_Read@dat 0073                 ?___awdiv 0070                 ?___awmod 0070  
      __size_of_showDate 0097        __size_of_showTime 00A2                __pstrings 0003  
               ?_initLED 0070                 _I2C_Init 0A85                 _I2C_Read 0BC1  
               ?_sendLED 0070                 _I2C_Stop 0AB2                _readClock 0249  
        LCDBusyLoop@busy 0072          LCDBusyLoop@temp 0073                _last_hour 0055  
         ___wmul@product 0020                _monthDays 0025                _showClock 0AD3  
            _LCDBusyLoop 0EDD         LCDWriteString@cc 0020         __size_of_I2C_Ack 000A  
            __stringbase 0008        ___wmul@multiplier 0079         __size_of_LCDByte 0050  
       __size_of_LCDInit 003B               ?_readClock 0070              _LCDWriteInt 00A8  
           ?_DS1307_Init 0070             ?_DS1307_Read 0070              doMenu@m_260 0035  
   __end_of_DS1307_Write 0AB2               ?_showClock 0070             ??_readInputs 0070  
       __size_of___awdiv 0059         __size_of___awmod 004B        LCDBusyLoop@status 0074  
     __end_of__stringtab 0009      DS1307_GetDate@d_ptr 0075         __size_of_initLED 0022  
    DS1307_GetDate@m_ptr 0076      DS1307_GetDate@n_ptr 0079      DS1307_GetDate@y_ptr 0077  
       __size_of_sendLED 0060                 __ptext10 0C48                 __ptext11 0F3A  
               __ptext20 0BEB                 __ptext12 0110                 __ptext21 0C7A  
               __ptext13 0DDE                 __ptext30 0B26                 __ptext22 0D8E  
               __ptext14 00A8                 __ptext31 0A8A                 __ptext23 0EDD  
               __ptext15 0CF3                 __ptext32 0A81                 __ptext24 0A85  
               __ptext16 0E84                 __ptext33 0BC1                 __ptext25 0D3E  
               __ptext17 0C19                 __ptext26 0AB2                 __ptext18 0B4C  
               __ptext27 0AC2                 __ptext19 0B99                 __ptext28 0A93  
               __ptext29 0AA7       __end_of_readInputs 0C48            __size_of_main 003E  
               _showDate 0110                 _showTime 01A7              ??_readClock 0022  
               init_ram0 009B  __size_of_DS1307_GetDate 0066  __size_of_DS1307_GetTime 0056  
               sendLED@c 0070                 sendLED@i 0074  __size_of_DS1307_SetDate 002E  
         LCDWriteInt@val 0027  __size_of_DS1307_SetTime 0028                stringcode 0003  
            ??_showClock 007E                 stringdir 0003                 stringtab 0003  
  __size_of_DS1307_Write 000B      DS1307_GetTime@h_ptr 0078      DS1307_GetTime@m_ptr 0075  
    DS1307_GetTime@s_ptr 0076     __size_of_DS1307_Init 0050     __size_of_DS1307_Read 0004  
     readInputs@pinstate 0073  __size_of_LCDWriteString 0050  
